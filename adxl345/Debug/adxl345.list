
adxl345.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004034  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f4  080041d8  080041d8  000141d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080045cc  080045cc  00020210  2**0
                  CONTENTS
  4 .ARM          00000000  080045cc  080045cc  00020210  2**0
                  CONTENTS
  5 .preinit_array 00000000  080045cc  080045cc  00020210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080045cc  080045cc  000145cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080045d0  080045d0  000145d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000210  20000000  080045d4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b8  20000210  080047e4  00020210  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200002c8  080047e4  000202c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003cbe  00000000  00000000  00020240  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000caf  00000000  00000000  00023efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000220  00000000  00000000  00024bb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000198  00000000  00000000  00024dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001009e  00000000  00000000  00024f68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002f86  00000000  00000000  00035006  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00055ef3  00000000  00000000  00037f8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0008de7f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000171c  00000000  00000000  0008ded4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000210 	.word	0x20000210
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080041bc 	.word	0x080041bc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000214 	.word	0x20000214
 80001dc:	080041bc 	.word	0x080041bc

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <adxl_read_address>:

char data;
uint8_t data_values[6];

void adxl_read_address(uint8_t reg)
{
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b082      	sub	sp, #8
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	4603      	mov	r3, r0
 8000c60:	71fb      	strb	r3, [r7, #7]
	I2C_byteRead(DEVICE_ADDR, reg, &data);
 8000c62:	79fb      	ldrb	r3, [r7, #7]
 8000c64:	4a04      	ldr	r2, [pc, #16]	; (8000c78 <adxl_read_address+0x20>)
 8000c66:	4619      	mov	r1, r3
 8000c68:	2053      	movs	r0, #83	; 0x53
 8000c6a:	f000 f9b3 	bl	8000fd4 <I2C_byteRead>
}
 8000c6e:	bf00      	nop
 8000c70:	3708      	adds	r7, #8
 8000c72:	46bd      	mov	sp, r7
 8000c74:	bd80      	pop	{r7, pc}
 8000c76:	bf00      	nop
 8000c78:	20000238 	.word	0x20000238

08000c7c <adxl_write>:

void adxl_write(uint8_t reg, char value)
{
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	b084      	sub	sp, #16
 8000c80:	af00      	add	r7, sp, #0
 8000c82:	4603      	mov	r3, r0
 8000c84:	460a      	mov	r2, r1
 8000c86:	71fb      	strb	r3, [r7, #7]
 8000c88:	4613      	mov	r3, r2
 8000c8a:	71bb      	strb	r3, [r7, #6]
	char data[1];
	data[0] = value;
 8000c8c:	79bb      	ldrb	r3, [r7, #6]
 8000c8e:	733b      	strb	r3, [r7, #12]

	I2C_burstWrite(DEVICE_ADDR, reg, 1, data);
 8000c90:	f107 030c 	add.w	r3, r7, #12
 8000c94:	79f9      	ldrb	r1, [r7, #7]
 8000c96:	2201      	movs	r2, #1
 8000c98:	2053      	movs	r0, #83	; 0x53
 8000c9a:	f000 faa7 	bl	80011ec <I2C_burstWrite>
}
 8000c9e:	bf00      	nop
 8000ca0:	3710      	adds	r7, #16
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	bd80      	pop	{r7, pc}
	...

08000ca8 <adxl_read_values>:

void adxl_read_values(uint8_t reg)
{
 8000ca8:	b580      	push	{r7, lr}
 8000caa:	b082      	sub	sp, #8
 8000cac:	af00      	add	r7, sp, #0
 8000cae:	4603      	mov	r3, r0
 8000cb0:	71fb      	strb	r3, [r7, #7]
	I2C_burstRead(DEVICE_ADDR, reg, 6, (char*)data_values);
 8000cb2:	79f9      	ldrb	r1, [r7, #7]
 8000cb4:	4b04      	ldr	r3, [pc, #16]	; (8000cc8 <adxl_read_values+0x20>)
 8000cb6:	2206      	movs	r2, #6
 8000cb8:	2053      	movs	r0, #83	; 0x53
 8000cba:	f000 f9fd 	bl	80010b8 <I2C_burstRead>
}
 8000cbe:	bf00      	nop
 8000cc0:	3708      	adds	r7, #8
 8000cc2:	46bd      	mov	sp, r7
 8000cc4:	bd80      	pop	{r7, pc}
 8000cc6:	bf00      	nop
 8000cc8:	2000023c 	.word	0x2000023c

08000ccc <adxl_init>:


void adxl_init()
{
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	af00      	add	r7, sp, #0
	I2C1_Init();
 8000cd0:	f000 f8f8 	bl	8000ec4 <I2C1_Init>

	adxl_read_address(DEVID_R);
 8000cd4:	2000      	movs	r0, #0
 8000cd6:	f7ff ffbf 	bl	8000c58 <adxl_read_address>

	adxl_write(DATA_FORMAT_R, FOUR_G);
 8000cda:	2101      	movs	r1, #1
 8000cdc:	2031      	movs	r0, #49	; 0x31
 8000cde:	f7ff ffcd 	bl	8000c7c <adxl_write>

	// disable interrupts
	adxl_write(INT_ENABLE, 0x00);
 8000ce2:	2100      	movs	r1, #0
 8000ce4:	202e      	movs	r0, #46	; 0x2e
 8000ce6:	f7ff ffc9 	bl	8000c7c <adxl_write>

	// setting all interrupts to int1
	adxl_write(INT_MAP, 0x00);
 8000cea:	2100      	movs	r1, #0
 8000cec:	202f      	movs	r0, #47	; 0x2f
 8000cee:	f7ff ffc5 	bl	8000c7c <adxl_write>

	// enable DATA_READ int
	adxl_write(INT_ENABLE, 0x80);
 8000cf2:	2180      	movs	r1, #128	; 0x80
 8000cf4:	202e      	movs	r0, #46	; 0x2e
 8000cf6:	f7ff ffc1 	bl	8000c7c <adxl_write>

	adxl_write(POWER_CTL_R, RESET);
 8000cfa:	2100      	movs	r1, #0
 8000cfc:	202d      	movs	r0, #45	; 0x2d
 8000cfe:	f7ff ffbd 	bl	8000c7c <adxl_write>

	adxl_write(POWER_CTL_R, SET_MEASURE_B);
 8000d02:	2108      	movs	r1, #8
 8000d04:	202d      	movs	r0, #45	; 0x2d
 8000d06:	f7ff ffb9 	bl	8000c7c <adxl_write>

}
 8000d0a:	bf00      	nop
 8000d0c:	bd80      	pop	{r7, pc}
	...

08000d10 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000d10:	b480      	push	{r7}
 8000d12:	b083      	sub	sp, #12
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	4603      	mov	r3, r0
 8000d18:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d1e:	2b00      	cmp	r3, #0
 8000d20:	db0b      	blt.n	8000d3a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d22:	79fb      	ldrb	r3, [r7, #7]
 8000d24:	f003 021f 	and.w	r2, r3, #31
 8000d28:	4907      	ldr	r1, [pc, #28]	; (8000d48 <__NVIC_EnableIRQ+0x38>)
 8000d2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d2e:	095b      	lsrs	r3, r3, #5
 8000d30:	2001      	movs	r0, #1
 8000d32:	fa00 f202 	lsl.w	r2, r0, r2
 8000d36:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000d3a:	bf00      	nop
 8000d3c:	370c      	adds	r7, #12
 8000d3e:	46bd      	mov	sp, r7
 8000d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d44:	4770      	bx	lr
 8000d46:	bf00      	nop
 8000d48:	e000e100 	.word	0xe000e100

08000d4c <EXTIPC7_Init>:

#define SYSCFGEN		(1U<<14)
#define GPIOCEN			(1U<<2)

void EXTIPC7_Init()
{
 8000d4c:	b580      	push	{r7, lr}
 8000d4e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d50:	b672      	cpsid	i
}
 8000d52:	bf00      	nop
	// disable global interrupts
	__disable_irq();

	// enable clock access for GPIO
	RCC->AHB1ENR |= GPIOCEN;
 8000d54:	4b18      	ldr	r3, [pc, #96]	; (8000db8 <EXTIPC7_Init+0x6c>)
 8000d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d58:	4a17      	ldr	r2, [pc, #92]	; (8000db8 <EXTIPC7_Init+0x6c>)
 8000d5a:	f043 0304 	orr.w	r3, r3, #4
 8000d5e:	6313      	str	r3, [r2, #48]	; 0x30

	// set PC7 pin as input
	GPIOC->MODER &= ~(1U<<15);
 8000d60:	4b16      	ldr	r3, [pc, #88]	; (8000dbc <EXTIPC7_Init+0x70>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	4a15      	ldr	r2, [pc, #84]	; (8000dbc <EXTIPC7_Init+0x70>)
 8000d66:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000d6a:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &= ~(1U<<14);
 8000d6c:	4b13      	ldr	r3, [pc, #76]	; (8000dbc <EXTIPC7_Init+0x70>)
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	4a12      	ldr	r2, [pc, #72]	; (8000dbc <EXTIPC7_Init+0x70>)
 8000d72:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000d76:	6013      	str	r3, [r2, #0]

	// enable clock access for SYSCFG
	RCC->APB2ENR |= SYSCFGEN;
 8000d78:	4b0f      	ldr	r3, [pc, #60]	; (8000db8 <EXTIPC7_Init+0x6c>)
 8000d7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d7c:	4a0e      	ldr	r2, [pc, #56]	; (8000db8 <EXTIPC7_Init+0x6c>)
 8000d7e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d82:	6453      	str	r3, [r2, #68]	; 0x44

	// select port for EXTI7
	SYSCFG->EXTICR[1] |= (1U<<13);
 8000d84:	4b0e      	ldr	r3, [pc, #56]	; (8000dc0 <EXTIPC7_Init+0x74>)
 8000d86:	68db      	ldr	r3, [r3, #12]
 8000d88:	4a0d      	ldr	r2, [pc, #52]	; (8000dc0 <EXTIPC7_Init+0x74>)
 8000d8a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000d8e:	60d3      	str	r3, [r2, #12]

	// Unmask EXTI7
	EXTI->IMR |= (1U<<7);
 8000d90:	4b0c      	ldr	r3, [pc, #48]	; (8000dc4 <EXTIPC7_Init+0x78>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	4a0b      	ldr	r2, [pc, #44]	; (8000dc4 <EXTIPC7_Init+0x78>)
 8000d96:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d9a:	6013      	str	r3, [r2, #0]

	// select rising edge trigger
	EXTI->RTSR |= (1U<<7);
 8000d9c:	4b09      	ldr	r3, [pc, #36]	; (8000dc4 <EXTIPC7_Init+0x78>)
 8000d9e:	689b      	ldr	r3, [r3, #8]
 8000da0:	4a08      	ldr	r2, [pc, #32]	; (8000dc4 <EXTIPC7_Init+0x78>)
 8000da2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000da6:	6093      	str	r3, [r2, #8]

	// enable EXTI line in NVIC
	NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000da8:	2017      	movs	r0, #23
 8000daa:	f7ff ffb1 	bl	8000d10 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 8000dae:	b662      	cpsie	i
}
 8000db0:	bf00      	nop

	// enable global interrupts
	__enable_irq();
}
 8000db2:	bf00      	nop
 8000db4:	bd80      	pop	{r7, pc}
 8000db6:	bf00      	nop
 8000db8:	40023800 	.word	0x40023800
 8000dbc:	40020800 	.word	0x40020800
 8000dc0:	40013800 	.word	0x40013800
 8000dc4:	40013c00 	.word	0x40013c00

08000dc8 <FIRFilter_Init>:
// coeficients calculated using Phil's Solomony tool
static float FIR_IMPULSE_RESPONSE[FIR_FILTER_LENGTH] =
	{-0.0032906f,-0.0052635f,-0.0068811f,0.0000000f,0.0254209f,0.0724719f,0.1311260f,0.1805961f,0.2000000f,0.1805961f,0.1311260f,0.0724719f,0.0254209f,0.0000000f,-0.0068811f,-0.0052635f};

void FIRFilter_Init(FIRFilter *fir)
{
 8000dc8:	b480      	push	{r7}
 8000dca:	b085      	sub	sp, #20
 8000dcc:	af00      	add	r7, sp, #0
 8000dce:	6078      	str	r0, [r7, #4]
	for (uint8_t i = 0; i < FIR_FILTER_LENGTH; i++)
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	73fb      	strb	r3, [r7, #15]
 8000dd4:	e009      	b.n	8000dea <FIRFilter_Init+0x22>
	{
		fir->buf[i] = 0.0f;
 8000dd6:	7bfb      	ldrb	r3, [r7, #15]
 8000dd8:	687a      	ldr	r2, [r7, #4]
 8000dda:	009b      	lsls	r3, r3, #2
 8000ddc:	4413      	add	r3, r2
 8000dde:	f04f 0200 	mov.w	r2, #0
 8000de2:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < FIR_FILTER_LENGTH; i++)
 8000de4:	7bfb      	ldrb	r3, [r7, #15]
 8000de6:	3301      	adds	r3, #1
 8000de8:	73fb      	strb	r3, [r7, #15]
 8000dea:	7bfb      	ldrb	r3, [r7, #15]
 8000dec:	2b0f      	cmp	r3, #15
 8000dee:	d9f2      	bls.n	8000dd6 <FIRFilter_Init+0xe>
	}

	fir->bufIndex = 0;
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	2200      	movs	r2, #0
 8000df4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

	fir->out = 0.0f;
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	f04f 0200 	mov.w	r2, #0
 8000dfe:	645a      	str	r2, [r3, #68]	; 0x44
}
 8000e00:	bf00      	nop
 8000e02:	3714      	adds	r7, #20
 8000e04:	46bd      	mov	sp, r7
 8000e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e0a:	4770      	bx	lr

08000e0c <FIRFilter_Updater>:

float FIRFilter_Updater(FIRFilter *fir, float inp)
{
 8000e0c:	b480      	push	{r7}
 8000e0e:	b085      	sub	sp, #20
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	6078      	str	r0, [r7, #4]
 8000e14:	ed87 0a00 	vstr	s0, [r7]

	fir->buf[fir->bufIndex] = inp;
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8000e1e:	687a      	ldr	r2, [r7, #4]
 8000e20:	009b      	lsls	r3, r3, #2
 8000e22:	4413      	add	r3, r2
 8000e24:	683a      	ldr	r2, [r7, #0]
 8000e26:	601a      	str	r2, [r3, #0]

	fir->bufIndex++;
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8000e2e:	3301      	adds	r3, #1
 8000e30:	b2da      	uxtb	r2, r3
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

	if (fir->bufIndex == FIR_FILTER_LENGTH)
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8000e3e:	2b10      	cmp	r3, #16
 8000e40:	d103      	bne.n	8000e4a <FIRFilter_Updater+0x3e>
	{
		fir->bufIndex = 0;
 8000e42:	687b      	ldr	r3, [r7, #4]
 8000e44:	2200      	movs	r2, #0
 8000e46:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
	}

	fir->out = 0.0f;
 8000e4a:	687b      	ldr	r3, [r7, #4]
 8000e4c:	f04f 0200 	mov.w	r2, #0
 8000e50:	645a      	str	r2, [r3, #68]	; 0x44

	uint8_t sumIndex = fir->bufIndex;
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8000e58:	73fb      	strb	r3, [r7, #15]

	for(uint8_t i = 0; i < FIR_FILTER_LENGTH; i++)
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	73bb      	strb	r3, [r7, #14]
 8000e5e:	e021      	b.n	8000ea4 <FIRFilter_Updater+0x98>
	{
		if (sumIndex > 0)
 8000e60:	7bfb      	ldrb	r3, [r7, #15]
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d003      	beq.n	8000e6e <FIRFilter_Updater+0x62>
		{
			sumIndex--;
 8000e66:	7bfb      	ldrb	r3, [r7, #15]
 8000e68:	3b01      	subs	r3, #1
 8000e6a:	73fb      	strb	r3, [r7, #15]
 8000e6c:	e001      	b.n	8000e72 <FIRFilter_Updater+0x66>
		}
		else
		{
			sumIndex = FIR_FILTER_LENGTH - 1;
 8000e6e:	230f      	movs	r3, #15
 8000e70:	73fb      	strb	r3, [r7, #15]
		}

		fir->out += FIR_IMPULSE_RESPONSE[i] * fir->buf[sumIndex];
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	ed93 7a11 	vldr	s14, [r3, #68]	; 0x44
 8000e78:	7bbb      	ldrb	r3, [r7, #14]
 8000e7a:	4a11      	ldr	r2, [pc, #68]	; (8000ec0 <FIRFilter_Updater+0xb4>)
 8000e7c:	009b      	lsls	r3, r3, #2
 8000e7e:	4413      	add	r3, r2
 8000e80:	edd3 6a00 	vldr	s13, [r3]
 8000e84:	7bfb      	ldrb	r3, [r7, #15]
 8000e86:	687a      	ldr	r2, [r7, #4]
 8000e88:	009b      	lsls	r3, r3, #2
 8000e8a:	4413      	add	r3, r2
 8000e8c:	edd3 7a00 	vldr	s15, [r3]
 8000e90:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	edc3 7a11 	vstr	s15, [r3, #68]	; 0x44
	for(uint8_t i = 0; i < FIR_FILTER_LENGTH; i++)
 8000e9e:	7bbb      	ldrb	r3, [r7, #14]
 8000ea0:	3301      	adds	r3, #1
 8000ea2:	73bb      	strb	r3, [r7, #14]
 8000ea4:	7bbb      	ldrb	r3, [r7, #14]
 8000ea6:	2b0f      	cmp	r3, #15
 8000ea8:	d9da      	bls.n	8000e60 <FIRFilter_Updater+0x54>
	}

	return fir->out;
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000eae:	ee07 3a90 	vmov	s15, r3
}
 8000eb2:	eeb0 0a67 	vmov.f32	s0, s15
 8000eb6:	3714      	adds	r7, #20
 8000eb8:	46bd      	mov	sp, r7
 8000eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebe:	4770      	bx	lr
 8000ec0:	20000000 	.word	0x20000000

08000ec4 <I2C1_Init>:
#define		SR1_BTF			(1U<<2)

// PB8 scl
// PB9 sda
void I2C1_Init()
{
 8000ec4:	b480      	push	{r7}
 8000ec6:	af00      	add	r7, sp, #0
	// enable clock for GPIOB
	RCC->AHB1ENR |= GPIOBEN;
 8000ec8:	4b3f      	ldr	r3, [pc, #252]	; (8000fc8 <I2C1_Init+0x104>)
 8000eca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ecc:	4a3e      	ldr	r2, [pc, #248]	; (8000fc8 <I2C1_Init+0x104>)
 8000ece:	f043 0302 	orr.w	r3, r3, #2
 8000ed2:	6313      	str	r3, [r2, #48]	; 0x30

	// set pb8 and pb9 to alternate
	GPIOB->MODER &= ~(1U<<16);
 8000ed4:	4b3d      	ldr	r3, [pc, #244]	; (8000fcc <I2C1_Init+0x108>)
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	4a3c      	ldr	r2, [pc, #240]	; (8000fcc <I2C1_Init+0x108>)
 8000eda:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000ede:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<17);
 8000ee0:	4b3a      	ldr	r3, [pc, #232]	; (8000fcc <I2C1_Init+0x108>)
 8000ee2:	681b      	ldr	r3, [r3, #0]
 8000ee4:	4a39      	ldr	r2, [pc, #228]	; (8000fcc <I2C1_Init+0x108>)
 8000ee6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000eea:	6013      	str	r3, [r2, #0]

	GPIOB->MODER &= ~(1U<<18);
 8000eec:	4b37      	ldr	r3, [pc, #220]	; (8000fcc <I2C1_Init+0x108>)
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4a36      	ldr	r2, [pc, #216]	; (8000fcc <I2C1_Init+0x108>)
 8000ef2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000ef6:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<19);
 8000ef8:	4b34      	ldr	r3, [pc, #208]	; (8000fcc <I2C1_Init+0x108>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	4a33      	ldr	r2, [pc, #204]	; (8000fcc <I2C1_Init+0x108>)
 8000efe:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000f02:	6013      	str	r3, [r2, #0]

	// set pb8 and pb9 as open drain
	GPIOB->OTYPER |= (1U<<8);
 8000f04:	4b31      	ldr	r3, [pc, #196]	; (8000fcc <I2C1_Init+0x108>)
 8000f06:	685b      	ldr	r3, [r3, #4]
 8000f08:	4a30      	ldr	r2, [pc, #192]	; (8000fcc <I2C1_Init+0x108>)
 8000f0a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000f0e:	6053      	str	r3, [r2, #4]
	GPIOB->OTYPER |= (1U<<9);
 8000f10:	4b2e      	ldr	r3, [pc, #184]	; (8000fcc <I2C1_Init+0x108>)
 8000f12:	685b      	ldr	r3, [r3, #4]
 8000f14:	4a2d      	ldr	r2, [pc, #180]	; (8000fcc <I2C1_Init+0x108>)
 8000f16:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000f1a:	6053      	str	r3, [r2, #4]

	GPIOB->AFR[1] &= ~(1U<<0);
 8000f1c:	4b2b      	ldr	r3, [pc, #172]	; (8000fcc <I2C1_Init+0x108>)
 8000f1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f20:	4a2a      	ldr	r2, [pc, #168]	; (8000fcc <I2C1_Init+0x108>)
 8000f22:	f023 0301 	bic.w	r3, r3, #1
 8000f26:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1U<<1);
 8000f28:	4b28      	ldr	r3, [pc, #160]	; (8000fcc <I2C1_Init+0x108>)
 8000f2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f2c:	4a27      	ldr	r2, [pc, #156]	; (8000fcc <I2C1_Init+0x108>)
 8000f2e:	f023 0302 	bic.w	r3, r3, #2
 8000f32:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1U<<2);
 8000f34:	4b25      	ldr	r3, [pc, #148]	; (8000fcc <I2C1_Init+0x108>)
 8000f36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f38:	4a24      	ldr	r2, [pc, #144]	; (8000fcc <I2C1_Init+0x108>)
 8000f3a:	f043 0304 	orr.w	r3, r3, #4
 8000f3e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1U<<3);
 8000f40:	4b22      	ldr	r3, [pc, #136]	; (8000fcc <I2C1_Init+0x108>)
 8000f42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f44:	4a21      	ldr	r2, [pc, #132]	; (8000fcc <I2C1_Init+0x108>)
 8000f46:	f023 0308 	bic.w	r3, r3, #8
 8000f4a:	6253      	str	r3, [r2, #36]	; 0x24

	GPIOB->AFR[1] &= ~(1U<<4);
 8000f4c:	4b1f      	ldr	r3, [pc, #124]	; (8000fcc <I2C1_Init+0x108>)
 8000f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f50:	4a1e      	ldr	r2, [pc, #120]	; (8000fcc <I2C1_Init+0x108>)
 8000f52:	f023 0310 	bic.w	r3, r3, #16
 8000f56:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1U<<5);
 8000f58:	4b1c      	ldr	r3, [pc, #112]	; (8000fcc <I2C1_Init+0x108>)
 8000f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f5c:	4a1b      	ldr	r2, [pc, #108]	; (8000fcc <I2C1_Init+0x108>)
 8000f5e:	f023 0320 	bic.w	r3, r3, #32
 8000f62:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |= (1U<<6);
 8000f64:	4b19      	ldr	r3, [pc, #100]	; (8000fcc <I2C1_Init+0x108>)
 8000f66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f68:	4a18      	ldr	r2, [pc, #96]	; (8000fcc <I2C1_Init+0x108>)
 8000f6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f6e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &= ~(1U<<7);
 8000f70:	4b16      	ldr	r3, [pc, #88]	; (8000fcc <I2C1_Init+0x108>)
 8000f72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f74:	4a15      	ldr	r2, [pc, #84]	; (8000fcc <I2C1_Init+0x108>)
 8000f76:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000f7a:	6253      	str	r3, [r2, #36]	; 0x24


	// enable clock for I2C1
	RCC->APB1ENR |= I2C1EN;
 8000f7c:	4b12      	ldr	r3, [pc, #72]	; (8000fc8 <I2C1_Init+0x104>)
 8000f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f80:	4a11      	ldr	r2, [pc, #68]	; (8000fc8 <I2C1_Init+0x104>)
 8000f82:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000f86:	6413      	str	r3, [r2, #64]	; 0x40

	// enter reset mode
	I2C1->CR1 |= (1U<<15);
 8000f88:	4b11      	ldr	r3, [pc, #68]	; (8000fd0 <I2C1_Init+0x10c>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	4a10      	ldr	r2, [pc, #64]	; (8000fd0 <I2C1_Init+0x10c>)
 8000f8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000f92:	6013      	str	r3, [r2, #0]

	// leave reset mode
	I2C1->CR1 &= ~(1U<<15);
 8000f94:	4b0e      	ldr	r3, [pc, #56]	; (8000fd0 <I2C1_Init+0x10c>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	4a0d      	ldr	r2, [pc, #52]	; (8000fd0 <I2C1_Init+0x10c>)
 8000f9a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000f9e:	6013      	str	r3, [r2, #0]

	// set peripheral clock to 16MHz
	I2C1->CR2 = (1U<<4);
 8000fa0:	4b0b      	ldr	r3, [pc, #44]	; (8000fd0 <I2C1_Init+0x10c>)
 8000fa2:	2210      	movs	r2, #16
 8000fa4:	605a      	str	r2, [r3, #4]

	// set 100khz mode
	I2C1->CCR = I2C_100KHZ;
 8000fa6:	4b0a      	ldr	r3, [pc, #40]	; (8000fd0 <I2C1_Init+0x10c>)
 8000fa8:	2250      	movs	r2, #80	; 0x50
 8000faa:	61da      	str	r2, [r3, #28]

	// set rise time
	I2C1->TRISE = SD_MODE_MAX_RISE_TIME;
 8000fac:	4b08      	ldr	r3, [pc, #32]	; (8000fd0 <I2C1_Init+0x10c>)
 8000fae:	2211      	movs	r2, #17
 8000fb0:	621a      	str	r2, [r3, #32]

	// enable i2c1 module
	I2C1->CR1 |= CR1_PE;
 8000fb2:	4b07      	ldr	r3, [pc, #28]	; (8000fd0 <I2C1_Init+0x10c>)
 8000fb4:	681b      	ldr	r3, [r3, #0]
 8000fb6:	4a06      	ldr	r2, [pc, #24]	; (8000fd0 <I2C1_Init+0x10c>)
 8000fb8:	f043 0301 	orr.w	r3, r3, #1
 8000fbc:	6013      	str	r3, [r2, #0]
}
 8000fbe:	bf00      	nop
 8000fc0:	46bd      	mov	sp, r7
 8000fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc6:	4770      	bx	lr
 8000fc8:	40023800 	.word	0x40023800
 8000fcc:	40020400 	.word	0x40020400
 8000fd0:	40005400 	.word	0x40005400

08000fd4 <I2C_byteRead>:

void I2C_byteRead(char saddr, char maddr, char* data)
{
 8000fd4:	b480      	push	{r7}
 8000fd6:	b083      	sub	sp, #12
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	4603      	mov	r3, r0
 8000fdc:	603a      	str	r2, [r7, #0]
 8000fde:	71fb      	strb	r3, [r7, #7]
 8000fe0:	460b      	mov	r3, r1
 8000fe2:	71bb      	strb	r3, [r7, #6]

	// wait until bus is free
	while (I2C1->SR2 & SR2_BUSY) {}
 8000fe4:	bf00      	nop
 8000fe6:	4b33      	ldr	r3, [pc, #204]	; (80010b4 <I2C_byteRead+0xe0>)
 8000fe8:	699b      	ldr	r3, [r3, #24]
 8000fea:	f003 0302 	and.w	r3, r3, #2
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d1f9      	bne.n	8000fe6 <I2C_byteRead+0x12>

	// generate start bit
	I2C1->CR1 |= CR1_START;
 8000ff2:	4b30      	ldr	r3, [pc, #192]	; (80010b4 <I2C_byteRead+0xe0>)
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	4a2f      	ldr	r2, [pc, #188]	; (80010b4 <I2C_byteRead+0xe0>)
 8000ff8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ffc:	6013      	str	r3, [r2, #0]

	// wait until start bit is set
	while (!(I2C1->SR1 & (SR1_SB))) {}
 8000ffe:	bf00      	nop
 8001000:	4b2c      	ldr	r3, [pc, #176]	; (80010b4 <I2C_byteRead+0xe0>)
 8001002:	695b      	ldr	r3, [r3, #20]
 8001004:	f003 0301 	and.w	r3, r3, #1
 8001008:	2b00      	cmp	r3, #0
 800100a:	d0f9      	beq.n	8001000 <I2C_byteRead+0x2c>

	// transmit slave address
	I2C1->DR = saddr << 1;
 800100c:	79fb      	ldrb	r3, [r7, #7]
 800100e:	005a      	lsls	r2, r3, #1
 8001010:	4b28      	ldr	r3, [pc, #160]	; (80010b4 <I2C_byteRead+0xe0>)
 8001012:	611a      	str	r2, [r3, #16]

	// wait for address flag
	while (!(I2C1->SR1 & (SR1_ADDR))) {}
 8001014:	bf00      	nop
 8001016:	4b27      	ldr	r3, [pc, #156]	; (80010b4 <I2C_byteRead+0xe0>)
 8001018:	695b      	ldr	r3, [r3, #20]
 800101a:	f003 0302 	and.w	r3, r3, #2
 800101e:	2b00      	cmp	r3, #0
 8001020:	d0f9      	beq.n	8001016 <I2C_byteRead+0x42>

	// clear addr flag
	(void)I2C1->SR2;
 8001022:	4b24      	ldr	r3, [pc, #144]	; (80010b4 <I2C_byteRead+0xe0>)
 8001024:	699b      	ldr	r3, [r3, #24]

	// send memory address
	I2C1->DR = maddr;
 8001026:	4a23      	ldr	r2, [pc, #140]	; (80010b4 <I2C_byteRead+0xe0>)
 8001028:	79bb      	ldrb	r3, [r7, #6]
 800102a:	6113      	str	r3, [r2, #16]

	// wait until out buffer empty
	while (!(I2C1->SR1 & (SR1_TXE))) {}
 800102c:	bf00      	nop
 800102e:	4b21      	ldr	r3, [pc, #132]	; (80010b4 <I2C_byteRead+0xe0>)
 8001030:	695b      	ldr	r3, [r3, #20]
 8001032:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001036:	2b00      	cmp	r3, #0
 8001038:	d0f9      	beq.n	800102e <I2C_byteRead+0x5a>

	// generate restart
	I2C1->CR1 |= CR1_START;
 800103a:	4b1e      	ldr	r3, [pc, #120]	; (80010b4 <I2C_byteRead+0xe0>)
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	4a1d      	ldr	r2, [pc, #116]	; (80010b4 <I2C_byteRead+0xe0>)
 8001040:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001044:	6013      	str	r3, [r2, #0]

	// wait until start bit is set
	while (!(I2C1->SR1 & (SR1_SB))) {}
 8001046:	bf00      	nop
 8001048:	4b1a      	ldr	r3, [pc, #104]	; (80010b4 <I2C_byteRead+0xe0>)
 800104a:	695b      	ldr	r3, [r3, #20]
 800104c:	f003 0301 	and.w	r3, r3, #1
 8001050:	2b00      	cmp	r3, #0
 8001052:	d0f9      	beq.n	8001048 <I2C_byteRead+0x74>

	// transmit slave address + read
	I2C1->DR = saddr << 1 | 1;
 8001054:	79fb      	ldrb	r3, [r7, #7]
 8001056:	005b      	lsls	r3, r3, #1
 8001058:	f043 0201 	orr.w	r2, r3, #1
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <I2C_byteRead+0xe0>)
 800105e:	611a      	str	r2, [r3, #16]

	// wait for address flag
	while (!(I2C1->SR1 & (SR1_ADDR))) {}
 8001060:	bf00      	nop
 8001062:	4b14      	ldr	r3, [pc, #80]	; (80010b4 <I2C_byteRead+0xe0>)
 8001064:	695b      	ldr	r3, [r3, #20]
 8001066:	f003 0302 	and.w	r3, r3, #2
 800106a:	2b00      	cmp	r3, #0
 800106c:	d0f9      	beq.n	8001062 <I2C_byteRead+0x8e>

	// disable ack
	I2C1->CR1 &= ~CR1_ACK;
 800106e:	4b11      	ldr	r3, [pc, #68]	; (80010b4 <I2C_byteRead+0xe0>)
 8001070:	681b      	ldr	r3, [r3, #0]
 8001072:	4a10      	ldr	r2, [pc, #64]	; (80010b4 <I2C_byteRead+0xe0>)
 8001074:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001078:	6013      	str	r3, [r2, #0]

	// clear addr flag
	(void)I2C1->SR2;
 800107a:	4b0e      	ldr	r3, [pc, #56]	; (80010b4 <I2C_byteRead+0xe0>)
 800107c:	699b      	ldr	r3, [r3, #24]

	// generate stop after received data
	I2C1->CR1 |= CR1_STOP;
 800107e:	4b0d      	ldr	r3, [pc, #52]	; (80010b4 <I2C_byteRead+0xe0>)
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	4a0c      	ldr	r2, [pc, #48]	; (80010b4 <I2C_byteRead+0xe0>)
 8001084:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001088:	6013      	str	r3, [r2, #0]

	while (!(I2C1->SR1 & SR1_RXNE)) {}
 800108a:	bf00      	nop
 800108c:	4b09      	ldr	r3, [pc, #36]	; (80010b4 <I2C_byteRead+0xe0>)
 800108e:	695b      	ldr	r3, [r3, #20]
 8001090:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001094:	2b00      	cmp	r3, #0
 8001096:	d0f9      	beq.n	800108c <I2C_byteRead+0xb8>

	// read the data
	*data++ = I2C1->DR;
 8001098:	4b06      	ldr	r3, [pc, #24]	; (80010b4 <I2C_byteRead+0xe0>)
 800109a:	6919      	ldr	r1, [r3, #16]
 800109c:	683b      	ldr	r3, [r7, #0]
 800109e:	1c5a      	adds	r2, r3, #1
 80010a0:	603a      	str	r2, [r7, #0]
 80010a2:	b2ca      	uxtb	r2, r1
 80010a4:	701a      	strb	r2, [r3, #0]
}
 80010a6:	bf00      	nop
 80010a8:	370c      	adds	r7, #12
 80010aa:	46bd      	mov	sp, r7
 80010ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop
 80010b4:	40005400 	.word	0x40005400

080010b8 <I2C_burstRead>:

void I2C_burstRead(char saddr, char maddr, int n, char* data)
{
 80010b8:	b480      	push	{r7}
 80010ba:	b085      	sub	sp, #20
 80010bc:	af00      	add	r7, sp, #0
 80010be:	60ba      	str	r2, [r7, #8]
 80010c0:	607b      	str	r3, [r7, #4]
 80010c2:	4603      	mov	r3, r0
 80010c4:	73fb      	strb	r3, [r7, #15]
 80010c6:	460b      	mov	r3, r1
 80010c8:	73bb      	strb	r3, [r7, #14]

	/* Wait until bus not busy */
	while (I2C1->SR2 & (SR2_BUSY));
 80010ca:	bf00      	nop
 80010cc:	4b46      	ldr	r3, [pc, #280]	; (80011e8 <I2C_burstRead+0x130>)
 80010ce:	699b      	ldr	r3, [r3, #24]
 80010d0:	f003 0302 	and.w	r3, r3, #2
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d1f9      	bne.n	80010cc <I2C_burstRead+0x14>

    /* Generate start */
    I2C1->CR1 |= CR1_START;
 80010d8:	4b43      	ldr	r3, [pc, #268]	; (80011e8 <I2C_burstRead+0x130>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	4a42      	ldr	r2, [pc, #264]	; (80011e8 <I2C_burstRead+0x130>)
 80010de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80010e2:	6013      	str	r3, [r2, #0]

    /* Wait until start flag is set */
    while (!(I2C1->SR1 & SR1_SB));
 80010e4:	bf00      	nop
 80010e6:	4b40      	ldr	r3, [pc, #256]	; (80011e8 <I2C_burstRead+0x130>)
 80010e8:	695b      	ldr	r3, [r3, #20]
 80010ea:	f003 0301 	and.w	r3, r3, #1
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d0f9      	beq.n	80010e6 <I2C_burstRead+0x2e>

    /* Transmit slave address */
    I2C1->DR = saddr << 1;
 80010f2:	7bfb      	ldrb	r3, [r7, #15]
 80010f4:	005a      	lsls	r2, r3, #1
 80010f6:	4b3c      	ldr	r3, [pc, #240]	; (80011e8 <I2C_burstRead+0x130>)
 80010f8:	611a      	str	r2, [r3, #16]

    /* Wait until addr flag is set */
    while (!(I2C1->SR1 & SR1_ADDR));
 80010fa:	bf00      	nop
 80010fc:	4b3a      	ldr	r3, [pc, #232]	; (80011e8 <I2C_burstRead+0x130>)
 80010fe:	695b      	ldr	r3, [r3, #20]
 8001100:	f003 0302 	and.w	r3, r3, #2
 8001104:	2b00      	cmp	r3, #0
 8001106:	d0f9      	beq.n	80010fc <I2C_burstRead+0x44>

    /* Clear addr flag */
    (void)I2C1->SR2;
 8001108:	4b37      	ldr	r3, [pc, #220]	; (80011e8 <I2C_burstRead+0x130>)
 800110a:	699b      	ldr	r3, [r3, #24]

    /* Wait until transmitter empty */
    while (!(I2C1->SR1 & SR1_TXE));
 800110c:	bf00      	nop
 800110e:	4b36      	ldr	r3, [pc, #216]	; (80011e8 <I2C_burstRead+0x130>)
 8001110:	695b      	ldr	r3, [r3, #20]
 8001112:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0f9      	beq.n	800110e <I2C_burstRead+0x56>

    /*Send memory address */
    I2C1->DR = maddr;
 800111a:	4a33      	ldr	r2, [pc, #204]	; (80011e8 <I2C_burstRead+0x130>)
 800111c:	7bbb      	ldrb	r3, [r7, #14]
 800111e:	6113      	str	r3, [r2, #16]

    /*Wait until transmitter empty */
    while (!(I2C1->SR1 & SR1_TXE));
 8001120:	bf00      	nop
 8001122:	4b31      	ldr	r3, [pc, #196]	; (80011e8 <I2C_burstRead+0x130>)
 8001124:	695b      	ldr	r3, [r3, #20]
 8001126:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800112a:	2b00      	cmp	r3, #0
 800112c:	d0f9      	beq.n	8001122 <I2C_burstRead+0x6a>

    /*Generate restart */
    I2C1->CR1 |= CR1_START;
 800112e:	4b2e      	ldr	r3, [pc, #184]	; (80011e8 <I2C_burstRead+0x130>)
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	4a2d      	ldr	r2, [pc, #180]	; (80011e8 <I2C_burstRead+0x130>)
 8001134:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001138:	6013      	str	r3, [r2, #0]

    /* Wait until start flag is set */
    while (!(I2C1->SR1 & SR1_SB));
 800113a:	bf00      	nop
 800113c:	4b2a      	ldr	r3, [pc, #168]	; (80011e8 <I2C_burstRead+0x130>)
 800113e:	695b      	ldr	r3, [r3, #20]
 8001140:	f003 0301 	and.w	r3, r3, #1
 8001144:	2b00      	cmp	r3, #0
 8001146:	d0f9      	beq.n	800113c <I2C_burstRead+0x84>

    /* Transmit slave address */
    I2C1->DR = saddr << 1 | 1;
 8001148:	7bfb      	ldrb	r3, [r7, #15]
 800114a:	005b      	lsls	r3, r3, #1
 800114c:	f043 0201 	orr.w	r2, r3, #1
 8001150:	4b25      	ldr	r3, [pc, #148]	; (80011e8 <I2C_burstRead+0x130>)
 8001152:	611a      	str	r2, [r3, #16]

    /* Wait until addr flag is set */
    while (!(I2C1->SR1 & (SR1_ADDR)));
 8001154:	bf00      	nop
 8001156:	4b24      	ldr	r3, [pc, #144]	; (80011e8 <I2C_burstRead+0x130>)
 8001158:	695b      	ldr	r3, [r3, #20]
 800115a:	f003 0302 	and.w	r3, r3, #2
 800115e:	2b00      	cmp	r3, #0
 8001160:	d0f9      	beq.n	8001156 <I2C_burstRead+0x9e>

    /* Clear addr flag */
    (void)I2C1->SR2;
 8001162:	4b21      	ldr	r3, [pc, #132]	; (80011e8 <I2C_burstRead+0x130>)
 8001164:	699b      	ldr	r3, [r3, #24]

    /* Enable Acknowledge */
      I2C1->CR1 |=  CR1_ACK;
 8001166:	4b20      	ldr	r3, [pc, #128]	; (80011e8 <I2C_burstRead+0x130>)
 8001168:	681b      	ldr	r3, [r3, #0]
 800116a:	4a1f      	ldr	r2, [pc, #124]	; (80011e8 <I2C_burstRead+0x130>)
 800116c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001170:	6013      	str	r3, [r2, #0]

    while(n > 0)
 8001172:	e02e      	b.n	80011d2 <I2C_burstRead+0x11a>
    {
    	/*if one byte*/
    	if(n == 1)
 8001174:	68bb      	ldr	r3, [r7, #8]
 8001176:	2b01      	cmp	r3, #1
 8001178:	d11a      	bne.n	80011b0 <I2C_burstRead+0xf8>
    	{
    		/* Disable Acknowledge */
    	    I2C1->CR1 &= ~CR1_ACK;
 800117a:	4b1b      	ldr	r3, [pc, #108]	; (80011e8 <I2C_burstRead+0x130>)
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4a1a      	ldr	r2, [pc, #104]	; (80011e8 <I2C_burstRead+0x130>)
 8001180:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001184:	6013      	str	r3, [r2, #0]

    	    /* Generate Stop */
    	    I2C1->CR1 |= CR1_STOP;
 8001186:	4b18      	ldr	r3, [pc, #96]	; (80011e8 <I2C_burstRead+0x130>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	4a17      	ldr	r2, [pc, #92]	; (80011e8 <I2C_burstRead+0x130>)
 800118c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001190:	6013      	str	r3, [r2, #0]

 			/* Wait for RXNE flag set */
            while (!(I2C1->SR1 & SR1_RXNE));
 8001192:	bf00      	nop
 8001194:	4b14      	ldr	r3, [pc, #80]	; (80011e8 <I2C_burstRead+0x130>)
 8001196:	695b      	ldr	r3, [r3, #20]
 8001198:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800119c:	2b00      	cmp	r3, #0
 800119e:	d0f9      	beq.n	8001194 <I2C_burstRead+0xdc>

            /* Read data from DR */
            *data++ = I2C1->DR;
 80011a0:	4b11      	ldr	r3, [pc, #68]	; (80011e8 <I2C_burstRead+0x130>)
 80011a2:	6919      	ldr	r1, [r3, #16]
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	1c5a      	adds	r2, r3, #1
 80011a8:	607a      	str	r2, [r7, #4]
 80011aa:	b2ca      	uxtb	r2, r1
 80011ac:	701a      	strb	r2, [r3, #0]
            break;
 80011ae:	e014      	b.n	80011da <I2C_burstRead+0x122>
    	}
    	else
    	{
       	 /* Wait until RXNE flag is set */
           while (!(I2C1->SR1 & SR1_RXNE));
 80011b0:	bf00      	nop
 80011b2:	4b0d      	ldr	r3, [pc, #52]	; (80011e8 <I2C_burstRead+0x130>)
 80011b4:	695b      	ldr	r3, [r3, #20]
 80011b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d0f9      	beq.n	80011b2 <I2C_burstRead+0xfa>

           /* Read data from DR */
           (*data++) = I2C1->DR;
 80011be:	4b0a      	ldr	r3, [pc, #40]	; (80011e8 <I2C_burstRead+0x130>)
 80011c0:	6919      	ldr	r1, [r3, #16]
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	1c5a      	adds	r2, r3, #1
 80011c6:	607a      	str	r2, [r7, #4]
 80011c8:	b2ca      	uxtb	r2, r1
 80011ca:	701a      	strb	r2, [r3, #0]

           n--;
 80011cc:	68bb      	ldr	r3, [r7, #8]
 80011ce:	3b01      	subs	r3, #1
 80011d0:	60bb      	str	r3, [r7, #8]
    while(n > 0)
 80011d2:	68bb      	ldr	r3, [r7, #8]
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	dccd      	bgt.n	8001174 <I2C_burstRead+0xbc>
    	}
    }
}
 80011d8:	bf00      	nop
 80011da:	bf00      	nop
 80011dc:	3714      	adds	r7, #20
 80011de:	46bd      	mov	sp, r7
 80011e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e4:	4770      	bx	lr
 80011e6:	bf00      	nop
 80011e8:	40005400 	.word	0x40005400

080011ec <I2C_burstWrite>:

void I2C_burstWrite(char saddr, char maddr, int n, char* data)
{
 80011ec:	b480      	push	{r7}
 80011ee:	b087      	sub	sp, #28
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	60ba      	str	r2, [r7, #8]
 80011f4:	607b      	str	r3, [r7, #4]
 80011f6:	4603      	mov	r3, r0
 80011f8:	73fb      	strb	r3, [r7, #15]
 80011fa:	460b      	mov	r3, r1
 80011fc:	73bb      	strb	r3, [r7, #14]

	// wait until bus is free
	while (I2C1->SR2 & (SR2_BUSY));
 80011fe:	bf00      	nop
 8001200:	4b29      	ldr	r3, [pc, #164]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001202:	699b      	ldr	r3, [r3, #24]
 8001204:	f003 0302 	and.w	r3, r3, #2
 8001208:	2b00      	cmp	r3, #0
 800120a:	d1f9      	bne.n	8001200 <I2C_burstWrite+0x14>

	// generate start bit
	I2C1->CR1 |= CR1_START;
 800120c:	4b26      	ldr	r3, [pc, #152]	; (80012a8 <I2C_burstWrite+0xbc>)
 800120e:	681b      	ldr	r3, [r3, #0]
 8001210:	4a25      	ldr	r2, [pc, #148]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001212:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001216:	6013      	str	r3, [r2, #0]

	// wait until start bit is set
	while (!(I2C1->SR1 & (SR1_SB)));
 8001218:	bf00      	nop
 800121a:	4b23      	ldr	r3, [pc, #140]	; (80012a8 <I2C_burstWrite+0xbc>)
 800121c:	695b      	ldr	r3, [r3, #20]
 800121e:	f003 0301 	and.w	r3, r3, #1
 8001222:	2b00      	cmp	r3, #0
 8001224:	d0f9      	beq.n	800121a <I2C_burstWrite+0x2e>

	// transmit slave address
	I2C1->DR = saddr << 1;
 8001226:	7bfb      	ldrb	r3, [r7, #15]
 8001228:	005a      	lsls	r2, r3, #1
 800122a:	4b1f      	ldr	r3, [pc, #124]	; (80012a8 <I2C_burstWrite+0xbc>)
 800122c:	611a      	str	r2, [r3, #16]

	// wait for address flag
	while (!(I2C1->SR1 & (SR1_ADDR)));
 800122e:	bf00      	nop
 8001230:	4b1d      	ldr	r3, [pc, #116]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001232:	695b      	ldr	r3, [r3, #20]
 8001234:	f003 0302 	and.w	r3, r3, #2
 8001238:	2b00      	cmp	r3, #0
 800123a:	d0f9      	beq.n	8001230 <I2C_burstWrite+0x44>

	// clear addr flag
	(void)I2C1->SR2;
 800123c:	4b1a      	ldr	r3, [pc, #104]	; (80012a8 <I2C_burstWrite+0xbc>)
 800123e:	699b      	ldr	r3, [r3, #24]

	// wait until out buffer empty
	while (!(I2C1->SR1 & (SR1_TXE)));
 8001240:	bf00      	nop
 8001242:	4b19      	ldr	r3, [pc, #100]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001244:	695b      	ldr	r3, [r3, #20]
 8001246:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800124a:	2b00      	cmp	r3, #0
 800124c:	d0f9      	beq.n	8001242 <I2C_burstWrite+0x56>

	// send memory address
	I2C1->DR = maddr;
 800124e:	4a16      	ldr	r2, [pc, #88]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001250:	7bbb      	ldrb	r3, [r7, #14]
 8001252:	6113      	str	r3, [r2, #16]

	for (int i = 0; i < n; i++)
 8001254:	2300      	movs	r3, #0
 8001256:	617b      	str	r3, [r7, #20]
 8001258:	e00f      	b.n	800127a <I2C_burstWrite+0x8e>
	{
		// wait until out buffer empty
		while (!(I2C1->SR1 & (SR1_TXE)));
 800125a:	bf00      	nop
 800125c:	4b12      	ldr	r3, [pc, #72]	; (80012a8 <I2C_burstWrite+0xbc>)
 800125e:	695b      	ldr	r3, [r3, #20]
 8001260:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001264:	2b00      	cmp	r3, #0
 8001266:	d0f9      	beq.n	800125c <I2C_burstWrite+0x70>

		I2C1->DR = *data++;
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	1c5a      	adds	r2, r3, #1
 800126c:	607a      	str	r2, [r7, #4]
 800126e:	781a      	ldrb	r2, [r3, #0]
 8001270:	4b0d      	ldr	r3, [pc, #52]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001272:	611a      	str	r2, [r3, #16]
	for (int i = 0; i < n; i++)
 8001274:	697b      	ldr	r3, [r7, #20]
 8001276:	3301      	adds	r3, #1
 8001278:	617b      	str	r3, [r7, #20]
 800127a:	697a      	ldr	r2, [r7, #20]
 800127c:	68bb      	ldr	r3, [r7, #8]
 800127e:	429a      	cmp	r2, r3
 8001280:	dbeb      	blt.n	800125a <I2C_burstWrite+0x6e>

	}

	// wait until transfer finished
	while (!(I2C1->SR1 & SR1_BTF));
 8001282:	bf00      	nop
 8001284:	4b08      	ldr	r3, [pc, #32]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001286:	695b      	ldr	r3, [r3, #20]
 8001288:	f003 0304 	and.w	r3, r3, #4
 800128c:	2b00      	cmp	r3, #0
 800128e:	d0f9      	beq.n	8001284 <I2C_burstWrite+0x98>

	I2C1->CR1 |= CR1_STOP;
 8001290:	4b05      	ldr	r3, [pc, #20]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	4a04      	ldr	r2, [pc, #16]	; (80012a8 <I2C_burstWrite+0xbc>)
 8001296:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800129a:	6013      	str	r3, [r2, #0]
}
 800129c:	bf00      	nop
 800129e:	371c      	adds	r7, #28
 80012a0:	46bd      	mov	sp, r7
 80012a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012a6:	4770      	bx	lr
 80012a8:	40005400 	.word	0x40005400

080012ac <__io_putchar>:
extern uint8_t data_values[6];
// enable floating point unit
static void fpu_enable();

int __io_putchar(int ch)
{
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b082      	sub	sp, #8
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 80012b4:	6878      	ldr	r0, [r7, #4]
 80012b6:	f000 f9fd 	bl	80016b4 <uart2_write>
	return ch;
 80012ba:	687b      	ldr	r3, [r7, #4]
}
 80012bc:	4618      	mov	r0, r3
 80012be:	3708      	adds	r7, #8
 80012c0:	46bd      	mov	sp, r7
 80012c2:	bd80      	pop	{r7, pc}
 80012c4:	0000      	movs	r0, r0
	...

080012c8 <main>:

int main(void)
{
 80012c8:	b5b0      	push	{r4, r5, r7, lr}
 80012ca:	b082      	sub	sp, #8
 80012cc:	af02      	add	r7, sp, #8

	fpu_enable();
 80012ce:	f000 f89b 	bl	8001408 <fpu_enable>
	EXTIPC7_Init();
 80012d2:	f7ff fd3b 	bl	8000d4c <EXTIPC7_Init>
	adxl_init();
 80012d6:	f7ff fcf9 	bl	8000ccc <adxl_init>
    uart2_tx_init();
 80012da:	f000 f99f 	bl	800161c <uart2_tx_init>

    FIRFilter_Init(&lpfAcc);
 80012de:	4840      	ldr	r0, [pc, #256]	; (80013e0 <main+0x118>)
 80012e0:	f7ff fd72 	bl	8000dc8 <FIRFilter_Init>

	for(;;)
	{
		if (data_ready == 1)
 80012e4:	4b3f      	ldr	r3, [pc, #252]	; (80013e4 <main+0x11c>)
 80012e6:	781b      	ldrb	r3, [r3, #0]
 80012e8:	2b01      	cmp	r3, #1
 80012ea:	d1fb      	bne.n	80012e4 <main+0x1c>
		{
			adxl_read_values(DATA_START_ADDR);
 80012ec:	2032      	movs	r0, #50	; 0x32
 80012ee:	f7ff fcdb 	bl	8000ca8 <adxl_read_values>

			x = ((data_values[1]<<8) | data_values[0]);
 80012f2:	4b3d      	ldr	r3, [pc, #244]	; (80013e8 <main+0x120>)
 80012f4:	785b      	ldrb	r3, [r3, #1]
 80012f6:	021b      	lsls	r3, r3, #8
 80012f8:	b21a      	sxth	r2, r3
 80012fa:	4b3b      	ldr	r3, [pc, #236]	; (80013e8 <main+0x120>)
 80012fc:	781b      	ldrb	r3, [r3, #0]
 80012fe:	b21b      	sxth	r3, r3
 8001300:	4313      	orrs	r3, r2
 8001302:	b21a      	sxth	r2, r3
 8001304:	4b39      	ldr	r3, [pc, #228]	; (80013ec <main+0x124>)
 8001306:	801a      	strh	r2, [r3, #0]
			y = ((data_values[3]<<8) | data_values[2]);
 8001308:	4b37      	ldr	r3, [pc, #220]	; (80013e8 <main+0x120>)
 800130a:	78db      	ldrb	r3, [r3, #3]
 800130c:	021b      	lsls	r3, r3, #8
 800130e:	b21a      	sxth	r2, r3
 8001310:	4b35      	ldr	r3, [pc, #212]	; (80013e8 <main+0x120>)
 8001312:	789b      	ldrb	r3, [r3, #2]
 8001314:	b21b      	sxth	r3, r3
 8001316:	4313      	orrs	r3, r2
 8001318:	b21a      	sxth	r2, r3
 800131a:	4b35      	ldr	r3, [pc, #212]	; (80013f0 <main+0x128>)
 800131c:	801a      	strh	r2, [r3, #0]
			z = ((data_values[5]<<8) | data_values[4]);
 800131e:	4b32      	ldr	r3, [pc, #200]	; (80013e8 <main+0x120>)
 8001320:	795b      	ldrb	r3, [r3, #5]
 8001322:	021b      	lsls	r3, r3, #8
 8001324:	b21a      	sxth	r2, r3
 8001326:	4b30      	ldr	r3, [pc, #192]	; (80013e8 <main+0x120>)
 8001328:	791b      	ldrb	r3, [r3, #4]
 800132a:	b21b      	sxth	r3, r3
 800132c:	4313      	orrs	r3, r2
 800132e:	b21a      	sxth	r2, r3
 8001330:	4b30      	ldr	r3, [pc, #192]	; (80013f4 <main+0x12c>)
 8001332:	801a      	strh	r2, [r3, #0]

			xg = x * 0.0078;
 8001334:	4b2d      	ldr	r3, [pc, #180]	; (80013ec <main+0x124>)
 8001336:	f9b3 3000 	ldrsh.w	r3, [r3]
 800133a:	4618      	mov	r0, r3
 800133c:	f7ff f8fa 	bl	8000534 <__aeabi_i2d>
 8001340:	a325      	add	r3, pc, #148	; (adr r3, 80013d8 <main+0x110>)
 8001342:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001346:	f7ff f95f 	bl	8000608 <__aeabi_dmul>
 800134a:	4602      	mov	r2, r0
 800134c:	460b      	mov	r3, r1
 800134e:	492a      	ldr	r1, [pc, #168]	; (80013f8 <main+0x130>)
 8001350:	e9c1 2300 	strd	r2, r3, [r1]
			yg = y * 0.0078;
 8001354:	4b26      	ldr	r3, [pc, #152]	; (80013f0 <main+0x128>)
 8001356:	f9b3 3000 	ldrsh.w	r3, [r3]
 800135a:	4618      	mov	r0, r3
 800135c:	f7ff f8ea 	bl	8000534 <__aeabi_i2d>
 8001360:	a31d      	add	r3, pc, #116	; (adr r3, 80013d8 <main+0x110>)
 8001362:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001366:	f7ff f94f 	bl	8000608 <__aeabi_dmul>
 800136a:	4602      	mov	r2, r0
 800136c:	460b      	mov	r3, r1
 800136e:	4923      	ldr	r1, [pc, #140]	; (80013fc <main+0x134>)
 8001370:	e9c1 2300 	strd	r2, r3, [r1]
			zg = z * 0.0078;
 8001374:	4b1f      	ldr	r3, [pc, #124]	; (80013f4 <main+0x12c>)
 8001376:	f9b3 3000 	ldrsh.w	r3, [r3]
 800137a:	4618      	mov	r0, r3
 800137c:	f7ff f8da 	bl	8000534 <__aeabi_i2d>
 8001380:	a315      	add	r3, pc, #84	; (adr r3, 80013d8 <main+0x110>)
 8001382:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001386:	f7ff f93f 	bl	8000608 <__aeabi_dmul>
 800138a:	4602      	mov	r2, r0
 800138c:	460b      	mov	r3, r1
 800138e:	491c      	ldr	r1, [pc, #112]	; (8001400 <main+0x138>)
 8001390:	e9c1 2300 	strd	r2, r3, [r1]

			FIRFilter_Updater(&lpfAcc, xg);
 8001394:	4b18      	ldr	r3, [pc, #96]	; (80013f8 <main+0x130>)
 8001396:	e9d3 2300 	ldrd	r2, r3, [r3]
 800139a:	4610      	mov	r0, r2
 800139c:	4619      	mov	r1, r3
 800139e:	f7ff fc0b 	bl	8000bb8 <__aeabi_d2f>
 80013a2:	4603      	mov	r3, r0
 80013a4:	ee00 3a10 	vmov	s0, r3
 80013a8:	480d      	ldr	r0, [pc, #52]	; (80013e0 <main+0x118>)
 80013aa:	f7ff fd2f 	bl	8000e0c <FIRFilter_Updater>

			printf("%.4f, %.4f\n\r", xg, lpfAcc.out);
 80013ae:	4b12      	ldr	r3, [pc, #72]	; (80013f8 <main+0x130>)
 80013b0:	e9d3 4500 	ldrd	r4, r5, [r3]
 80013b4:	4b0a      	ldr	r3, [pc, #40]	; (80013e0 <main+0x118>)
 80013b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013b8:	4618      	mov	r0, r3
 80013ba:	f7ff f8cd 	bl	8000558 <__aeabi_f2d>
 80013be:	4602      	mov	r2, r0
 80013c0:	460b      	mov	r3, r1
 80013c2:	e9cd 2300 	strd	r2, r3, [sp]
 80013c6:	4622      	mov	r2, r4
 80013c8:	462b      	mov	r3, r5
 80013ca:	480e      	ldr	r0, [pc, #56]	; (8001404 <main+0x13c>)
 80013cc:	f000 fe76 	bl	80020bc <iprintf>
			data_ready = 0;
 80013d0:	4b04      	ldr	r3, [pc, #16]	; (80013e4 <main+0x11c>)
 80013d2:	2200      	movs	r2, #0
 80013d4:	701a      	strb	r2, [r3, #0]
		if (data_ready == 1)
 80013d6:	e785      	b.n	80012e4 <main+0x1c>
 80013d8:	8e8a71de 	.word	0x8e8a71de
 80013dc:	3f7ff2e4 	.word	0x3f7ff2e4
 80013e0:	2000025c 	.word	0x2000025c
 80013e4:	20000248 	.word	0x20000248
 80013e8:	2000023c 	.word	0x2000023c
 80013ec:	2000024a 	.word	0x2000024a
 80013f0:	2000025a 	.word	0x2000025a
 80013f4:	20000258 	.word	0x20000258
 80013f8:	200002b0 	.word	0x200002b0
 80013fc:	200002a8 	.word	0x200002a8
 8001400:	20000250 	.word	0x20000250
 8001404:	080041d8 	.word	0x080041d8

08001408 <fpu_enable>:
		}
	}
}

static void fpu_enable()
{
 8001408:	b480      	push	{r7}
 800140a:	af00      	add	r7, sp, #0
	SCB->CPACR |= (1U<<20);
 800140c:	4b12      	ldr	r3, [pc, #72]	; (8001458 <fpu_enable+0x50>)
 800140e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001412:	4a11      	ldr	r2, [pc, #68]	; (8001458 <fpu_enable+0x50>)
 8001414:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001418:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |= (1U<<21);
 800141c:	4b0e      	ldr	r3, [pc, #56]	; (8001458 <fpu_enable+0x50>)
 800141e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001422:	4a0d      	ldr	r2, [pc, #52]	; (8001458 <fpu_enable+0x50>)
 8001424:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001428:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |= (1U<<22);
 800142c:	4b0a      	ldr	r3, [pc, #40]	; (8001458 <fpu_enable+0x50>)
 800142e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001432:	4a09      	ldr	r2, [pc, #36]	; (8001458 <fpu_enable+0x50>)
 8001434:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001438:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |= (1U<<23);
 800143c:	4b06      	ldr	r3, [pc, #24]	; (8001458 <fpu_enable+0x50>)
 800143e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001442:	4a05      	ldr	r2, [pc, #20]	; (8001458 <fpu_enable+0x50>)
 8001444:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001448:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
}
 800144c:	bf00      	nop
 800144e:	46bd      	mov	sp, r7
 8001450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001454:	4770      	bx	lr
 8001456:	bf00      	nop
 8001458:	e000ed00 	.word	0xe000ed00

0800145c <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler()
{
 800145c:	b480      	push	{r7}
 800145e:	af00      	add	r7, sp, #0
	if(EXTI->PR & (1U<<7))
 8001460:	4b09      	ldr	r3, [pc, #36]	; (8001488 <EXTI9_5_IRQHandler+0x2c>)
 8001462:	695b      	ldr	r3, [r3, #20]
 8001464:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001468:	2b00      	cmp	r3, #0
 800146a:	d008      	beq.n	800147e <EXTI9_5_IRQHandler+0x22>
	{
		data_ready = 1;
 800146c:	4b07      	ldr	r3, [pc, #28]	; (800148c <EXTI9_5_IRQHandler+0x30>)
 800146e:	2201      	movs	r2, #1
 8001470:	701a      	strb	r2, [r3, #0]
		EXTI->PR |= (1U<<7);
 8001472:	4b05      	ldr	r3, [pc, #20]	; (8001488 <EXTI9_5_IRQHandler+0x2c>)
 8001474:	695b      	ldr	r3, [r3, #20]
 8001476:	4a04      	ldr	r2, [pc, #16]	; (8001488 <EXTI9_5_IRQHandler+0x2c>)
 8001478:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800147c:	6153      	str	r3, [r2, #20]
	}
}
 800147e:	bf00      	nop
 8001480:	46bd      	mov	sp, r7
 8001482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001486:	4770      	bx	lr
 8001488:	40013c00 	.word	0x40013c00
 800148c:	20000248 	.word	0x20000248

08001490 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001490:	b480      	push	{r7}
 8001492:	af00      	add	r7, sp, #0
	return 1;
 8001494:	2301      	movs	r3, #1
}
 8001496:	4618      	mov	r0, r3
 8001498:	46bd      	mov	sp, r7
 800149a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800149e:	4770      	bx	lr

080014a0 <_kill>:

int _kill(int pid, int sig)
{
 80014a0:	b580      	push	{r7, lr}
 80014a2:	b082      	sub	sp, #8
 80014a4:	af00      	add	r7, sp, #0
 80014a6:	6078      	str	r0, [r7, #4]
 80014a8:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80014aa:	f000 f96b 	bl	8001784 <__errno>
 80014ae:	4603      	mov	r3, r0
 80014b0:	2216      	movs	r2, #22
 80014b2:	601a      	str	r2, [r3, #0]
	return -1;
 80014b4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80014b8:	4618      	mov	r0, r3
 80014ba:	3708      	adds	r7, #8
 80014bc:	46bd      	mov	sp, r7
 80014be:	bd80      	pop	{r7, pc}

080014c0 <_exit>:

void _exit (int status)
{
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b082      	sub	sp, #8
 80014c4:	af00      	add	r7, sp, #0
 80014c6:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80014c8:	f04f 31ff 	mov.w	r1, #4294967295
 80014cc:	6878      	ldr	r0, [r7, #4]
 80014ce:	f7ff ffe7 	bl	80014a0 <_kill>
	while (1) {}		/* Make sure we hang here */
 80014d2:	e7fe      	b.n	80014d2 <_exit+0x12>

080014d4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80014d4:	b580      	push	{r7, lr}
 80014d6:	b086      	sub	sp, #24
 80014d8:	af00      	add	r7, sp, #0
 80014da:	60f8      	str	r0, [r7, #12]
 80014dc:	60b9      	str	r1, [r7, #8]
 80014de:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014e0:	2300      	movs	r3, #0
 80014e2:	617b      	str	r3, [r7, #20]
 80014e4:	e00a      	b.n	80014fc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80014e6:	f3af 8000 	nop.w
 80014ea:	4601      	mov	r1, r0
 80014ec:	68bb      	ldr	r3, [r7, #8]
 80014ee:	1c5a      	adds	r2, r3, #1
 80014f0:	60ba      	str	r2, [r7, #8]
 80014f2:	b2ca      	uxtb	r2, r1
 80014f4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014f6:	697b      	ldr	r3, [r7, #20]
 80014f8:	3301      	adds	r3, #1
 80014fa:	617b      	str	r3, [r7, #20]
 80014fc:	697a      	ldr	r2, [r7, #20]
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	429a      	cmp	r2, r3
 8001502:	dbf0      	blt.n	80014e6 <_read+0x12>
	}

return len;
 8001504:	687b      	ldr	r3, [r7, #4]
}
 8001506:	4618      	mov	r0, r3
 8001508:	3718      	adds	r7, #24
 800150a:	46bd      	mov	sp, r7
 800150c:	bd80      	pop	{r7, pc}

0800150e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800150e:	b580      	push	{r7, lr}
 8001510:	b086      	sub	sp, #24
 8001512:	af00      	add	r7, sp, #0
 8001514:	60f8      	str	r0, [r7, #12]
 8001516:	60b9      	str	r1, [r7, #8]
 8001518:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800151a:	2300      	movs	r3, #0
 800151c:	617b      	str	r3, [r7, #20]
 800151e:	e009      	b.n	8001534 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001520:	68bb      	ldr	r3, [r7, #8]
 8001522:	1c5a      	adds	r2, r3, #1
 8001524:	60ba      	str	r2, [r7, #8]
 8001526:	781b      	ldrb	r3, [r3, #0]
 8001528:	4618      	mov	r0, r3
 800152a:	f7ff febf 	bl	80012ac <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800152e:	697b      	ldr	r3, [r7, #20]
 8001530:	3301      	adds	r3, #1
 8001532:	617b      	str	r3, [r7, #20]
 8001534:	697a      	ldr	r2, [r7, #20]
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	429a      	cmp	r2, r3
 800153a:	dbf1      	blt.n	8001520 <_write+0x12>
	}
	return len;
 800153c:	687b      	ldr	r3, [r7, #4]
}
 800153e:	4618      	mov	r0, r3
 8001540:	3718      	adds	r7, #24
 8001542:	46bd      	mov	sp, r7
 8001544:	bd80      	pop	{r7, pc}

08001546 <_close>:

int _close(int file)
{
 8001546:	b480      	push	{r7}
 8001548:	b083      	sub	sp, #12
 800154a:	af00      	add	r7, sp, #0
 800154c:	6078      	str	r0, [r7, #4]
	return -1;
 800154e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001552:	4618      	mov	r0, r3
 8001554:	370c      	adds	r7, #12
 8001556:	46bd      	mov	sp, r7
 8001558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155c:	4770      	bx	lr

0800155e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800155e:	b480      	push	{r7}
 8001560:	b083      	sub	sp, #12
 8001562:	af00      	add	r7, sp, #0
 8001564:	6078      	str	r0, [r7, #4]
 8001566:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001568:	683b      	ldr	r3, [r7, #0]
 800156a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800156e:	605a      	str	r2, [r3, #4]
	return 0;
 8001570:	2300      	movs	r3, #0
}
 8001572:	4618      	mov	r0, r3
 8001574:	370c      	adds	r7, #12
 8001576:	46bd      	mov	sp, r7
 8001578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800157c:	4770      	bx	lr

0800157e <_isatty>:

int _isatty(int file)
{
 800157e:	b480      	push	{r7}
 8001580:	b083      	sub	sp, #12
 8001582:	af00      	add	r7, sp, #0
 8001584:	6078      	str	r0, [r7, #4]
	return 1;
 8001586:	2301      	movs	r3, #1
}
 8001588:	4618      	mov	r0, r3
 800158a:	370c      	adds	r7, #12
 800158c:	46bd      	mov	sp, r7
 800158e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001592:	4770      	bx	lr

08001594 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001594:	b480      	push	{r7}
 8001596:	b085      	sub	sp, #20
 8001598:	af00      	add	r7, sp, #0
 800159a:	60f8      	str	r0, [r7, #12]
 800159c:	60b9      	str	r1, [r7, #8]
 800159e:	607a      	str	r2, [r7, #4]
	return 0;
 80015a0:	2300      	movs	r3, #0
}
 80015a2:	4618      	mov	r0, r3
 80015a4:	3714      	adds	r7, #20
 80015a6:	46bd      	mov	sp, r7
 80015a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ac:	4770      	bx	lr
	...

080015b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b086      	sub	sp, #24
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80015b8:	4a14      	ldr	r2, [pc, #80]	; (800160c <_sbrk+0x5c>)
 80015ba:	4b15      	ldr	r3, [pc, #84]	; (8001610 <_sbrk+0x60>)
 80015bc:	1ad3      	subs	r3, r2, r3
 80015be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80015c0:	697b      	ldr	r3, [r7, #20]
 80015c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80015c4:	4b13      	ldr	r3, [pc, #76]	; (8001614 <_sbrk+0x64>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	d102      	bne.n	80015d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80015cc:	4b11      	ldr	r3, [pc, #68]	; (8001614 <_sbrk+0x64>)
 80015ce:	4a12      	ldr	r2, [pc, #72]	; (8001618 <_sbrk+0x68>)
 80015d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80015d2:	4b10      	ldr	r3, [pc, #64]	; (8001614 <_sbrk+0x64>)
 80015d4:	681a      	ldr	r2, [r3, #0]
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	4413      	add	r3, r2
 80015da:	693a      	ldr	r2, [r7, #16]
 80015dc:	429a      	cmp	r2, r3
 80015de:	d207      	bcs.n	80015f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80015e0:	f000 f8d0 	bl	8001784 <__errno>
 80015e4:	4603      	mov	r3, r0
 80015e6:	220c      	movs	r2, #12
 80015e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80015ea:	f04f 33ff 	mov.w	r3, #4294967295
 80015ee:	e009      	b.n	8001604 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80015f0:	4b08      	ldr	r3, [pc, #32]	; (8001614 <_sbrk+0x64>)
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80015f6:	4b07      	ldr	r3, [pc, #28]	; (8001614 <_sbrk+0x64>)
 80015f8:	681a      	ldr	r2, [r3, #0]
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	4413      	add	r3, r2
 80015fe:	4a05      	ldr	r2, [pc, #20]	; (8001614 <_sbrk+0x64>)
 8001600:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001602:	68fb      	ldr	r3, [r7, #12]
}
 8001604:	4618      	mov	r0, r3
 8001606:	3718      	adds	r7, #24
 8001608:	46bd      	mov	sp, r7
 800160a:	bd80      	pop	{r7, pc}
 800160c:	20020000 	.word	0x20020000
 8001610:	00000400 	.word	0x00000400
 8001614:	2000022c 	.word	0x2000022c
 8001618:	200002c8 	.word	0x200002c8

0800161c <uart2_tx_init>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate);
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);

void uart2_tx_init(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	af00      	add	r7, sp, #0

	/*Enable clock access to gpioa */
	RCC->AHB1ENR |= GPIOAEN;
 8001620:	4b20      	ldr	r3, [pc, #128]	; (80016a4 <uart2_tx_init+0x88>)
 8001622:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001624:	4a1f      	ldr	r2, [pc, #124]	; (80016a4 <uart2_tx_init+0x88>)
 8001626:	f043 0301 	orr.w	r3, r3, #1
 800162a:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 800162c:	4b1e      	ldr	r3, [pc, #120]	; (80016a8 <uart2_tx_init+0x8c>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	4a1d      	ldr	r2, [pc, #116]	; (80016a8 <uart2_tx_init+0x8c>)
 8001632:	f023 0310 	bic.w	r3, r3, #16
 8001636:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 8001638:	4b1b      	ldr	r3, [pc, #108]	; (80016a8 <uart2_tx_init+0x8c>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	4a1a      	ldr	r2, [pc, #104]	; (80016a8 <uart2_tx_init+0x8c>)
 800163e:	f043 0320 	orr.w	r3, r3, #32
 8001642:	6013      	str	r3, [r2, #0]

	/*Set PA2 alternate function type to UART_TX (AF07)*/
	GPIOA->AFR[0] |= (1U<<8);
 8001644:	4b18      	ldr	r3, [pc, #96]	; (80016a8 <uart2_tx_init+0x8c>)
 8001646:	6a1b      	ldr	r3, [r3, #32]
 8001648:	4a17      	ldr	r2, [pc, #92]	; (80016a8 <uart2_tx_init+0x8c>)
 800164a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800164e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 8001650:	4b15      	ldr	r3, [pc, #84]	; (80016a8 <uart2_tx_init+0x8c>)
 8001652:	6a1b      	ldr	r3, [r3, #32]
 8001654:	4a14      	ldr	r2, [pc, #80]	; (80016a8 <uart2_tx_init+0x8c>)
 8001656:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800165a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 800165c:	4b12      	ldr	r3, [pc, #72]	; (80016a8 <uart2_tx_init+0x8c>)
 800165e:	6a1b      	ldr	r3, [r3, #32]
 8001660:	4a11      	ldr	r2, [pc, #68]	; (80016a8 <uart2_tx_init+0x8c>)
 8001662:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001666:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8001668:	4b0f      	ldr	r3, [pc, #60]	; (80016a8 <uart2_tx_init+0x8c>)
 800166a:	6a1b      	ldr	r3, [r3, #32]
 800166c:	4a0e      	ldr	r2, [pc, #56]	; (80016a8 <uart2_tx_init+0x8c>)
 800166e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001672:	6213      	str	r3, [r2, #32]


	/*Enable clock access to uart2 */
	RCC->APB1ENR |= UART2EN;
 8001674:	4b0b      	ldr	r3, [pc, #44]	; (80016a4 <uart2_tx_init+0x88>)
 8001676:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001678:	4a0a      	ldr	r2, [pc, #40]	; (80016a4 <uart2_tx_init+0x88>)
 800167a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800167e:	6413      	str	r3, [r2, #64]	; 0x40

	/*Configure baudrate*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8001680:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001684:	4909      	ldr	r1, [pc, #36]	; (80016ac <uart2_tx_init+0x90>)
 8001686:	480a      	ldr	r0, [pc, #40]	; (80016b0 <uart2_tx_init+0x94>)
 8001688:	f000 f82c 	bl	80016e4 <uart_set_baudrate>

	/*Configure the transfer direction*/
	 USART2->CR1 =  CR1_TE;
 800168c:	4b08      	ldr	r3, [pc, #32]	; (80016b0 <uart2_tx_init+0x94>)
 800168e:	2208      	movs	r2, #8
 8001690:	60da      	str	r2, [r3, #12]

	/*Enable uart module*/
	 USART2->CR1 |= CR1_UE;
 8001692:	4b07      	ldr	r3, [pc, #28]	; (80016b0 <uart2_tx_init+0x94>)
 8001694:	68db      	ldr	r3, [r3, #12]
 8001696:	4a06      	ldr	r2, [pc, #24]	; (80016b0 <uart2_tx_init+0x94>)
 8001698:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800169c:	60d3      	str	r3, [r2, #12]


}
 800169e:	bf00      	nop
 80016a0:	bd80      	pop	{r7, pc}
 80016a2:	bf00      	nop
 80016a4:	40023800 	.word	0x40023800
 80016a8:	40020000 	.word	0x40020000
 80016ac:	00f42400 	.word	0x00f42400
 80016b0:	40004400 	.word	0x40004400

080016b4 <uart2_write>:


void uart2_write(int ch)
{
 80016b4:	b480      	push	{r7}
 80016b6:	b083      	sub	sp, #12
 80016b8:	af00      	add	r7, sp, #0
 80016ba:	6078      	str	r0, [r7, #4]
  /*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 80016bc:	bf00      	nop
 80016be:	4b08      	ldr	r3, [pc, #32]	; (80016e0 <uart2_write+0x2c>)
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80016c6:	2b00      	cmp	r3, #0
 80016c8:	d0f9      	beq.n	80016be <uart2_write+0xa>

  /*Write to transmit data register*/
	USART2->DR	=  (ch & 0xFF);
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	4a04      	ldr	r2, [pc, #16]	; (80016e0 <uart2_write+0x2c>)
 80016ce:	b2db      	uxtb	r3, r3
 80016d0:	6053      	str	r3, [r2, #4]
}
 80016d2:	bf00      	nop
 80016d4:	370c      	adds	r7, #12
 80016d6:	46bd      	mov	sp, r7
 80016d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016dc:	4770      	bx	lr
 80016de:	bf00      	nop
 80016e0:	40004400 	.word	0x40004400

080016e4 <uart_set_baudrate>:




static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b084      	sub	sp, #16
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	60f8      	str	r0, [r7, #12]
 80016ec:	60b9      	str	r1, [r7, #8]
 80016ee:	607a      	str	r2, [r7, #4]
	USARTx->BRR =  compute_uart_bd(PeriphClk,BaudRate);
 80016f0:	6879      	ldr	r1, [r7, #4]
 80016f2:	68b8      	ldr	r0, [r7, #8]
 80016f4:	f000 f808 	bl	8001708 <compute_uart_bd>
 80016f8:	4603      	mov	r3, r0
 80016fa:	461a      	mov	r2, r3
 80016fc:	68fb      	ldr	r3, [r7, #12]
 80016fe:	609a      	str	r2, [r3, #8]
}
 8001700:	bf00      	nop
 8001702:	3710      	adds	r7, #16
 8001704:	46bd      	mov	sp, r7
 8001706:	bd80      	pop	{r7, pc}

08001708 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8001708:	b480      	push	{r7}
 800170a:	b083      	sub	sp, #12
 800170c:	af00      	add	r7, sp, #0
 800170e:	6078      	str	r0, [r7, #4]
 8001710:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8001712:	683b      	ldr	r3, [r7, #0]
 8001714:	085a      	lsrs	r2, r3, #1
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	441a      	add	r2, r3
 800171a:	683b      	ldr	r3, [r7, #0]
 800171c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001720:	b29b      	uxth	r3, r3
}
 8001722:	4618      	mov	r0, r3
 8001724:	370c      	adds	r7, #12
 8001726:	46bd      	mov	sp, r7
 8001728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800172c:	4770      	bx	lr
	...

08001730 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001730:	480d      	ldr	r0, [pc, #52]	; (8001768 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001732:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001734:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001738:	480c      	ldr	r0, [pc, #48]	; (800176c <LoopForever+0x6>)
  ldr r1, =_edata
 800173a:	490d      	ldr	r1, [pc, #52]	; (8001770 <LoopForever+0xa>)
  ldr r2, =_sidata
 800173c:	4a0d      	ldr	r2, [pc, #52]	; (8001774 <LoopForever+0xe>)
  movs r3, #0
 800173e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001740:	e002      	b.n	8001748 <LoopCopyDataInit>

08001742 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001742:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001744:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001746:	3304      	adds	r3, #4

08001748 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001748:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800174a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800174c:	d3f9      	bcc.n	8001742 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800174e:	4a0a      	ldr	r2, [pc, #40]	; (8001778 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001750:	4c0a      	ldr	r4, [pc, #40]	; (800177c <LoopForever+0x16>)
  movs r3, #0
 8001752:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001754:	e001      	b.n	800175a <LoopFillZerobss>

08001756 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001756:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001758:	3204      	adds	r2, #4

0800175a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800175a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800175c:	d3fb      	bcc.n	8001756 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800175e:	f000 f817 	bl	8001790 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001762:	f7ff fdb1 	bl	80012c8 <main>

08001766 <LoopForever>:

LoopForever:
    b LoopForever
 8001766:	e7fe      	b.n	8001766 <LoopForever>
  ldr   r0, =_estack
 8001768:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800176c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001770:	20000210 	.word	0x20000210
  ldr r2, =_sidata
 8001774:	080045d4 	.word	0x080045d4
  ldr r2, =_sbss
 8001778:	20000210 	.word	0x20000210
  ldr r4, =_ebss
 800177c:	200002c8 	.word	0x200002c8

08001780 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001780:	e7fe      	b.n	8001780 <ADC_IRQHandler>
	...

08001784 <__errno>:
 8001784:	4b01      	ldr	r3, [pc, #4]	; (800178c <__errno+0x8>)
 8001786:	6818      	ldr	r0, [r3, #0]
 8001788:	4770      	bx	lr
 800178a:	bf00      	nop
 800178c:	20000040 	.word	0x20000040

08001790 <__libc_init_array>:
 8001790:	b570      	push	{r4, r5, r6, lr}
 8001792:	4d0d      	ldr	r5, [pc, #52]	; (80017c8 <__libc_init_array+0x38>)
 8001794:	4c0d      	ldr	r4, [pc, #52]	; (80017cc <__libc_init_array+0x3c>)
 8001796:	1b64      	subs	r4, r4, r5
 8001798:	10a4      	asrs	r4, r4, #2
 800179a:	2600      	movs	r6, #0
 800179c:	42a6      	cmp	r6, r4
 800179e:	d109      	bne.n	80017b4 <__libc_init_array+0x24>
 80017a0:	4d0b      	ldr	r5, [pc, #44]	; (80017d0 <__libc_init_array+0x40>)
 80017a2:	4c0c      	ldr	r4, [pc, #48]	; (80017d4 <__libc_init_array+0x44>)
 80017a4:	f002 fd0a 	bl	80041bc <_init>
 80017a8:	1b64      	subs	r4, r4, r5
 80017aa:	10a4      	asrs	r4, r4, #2
 80017ac:	2600      	movs	r6, #0
 80017ae:	42a6      	cmp	r6, r4
 80017b0:	d105      	bne.n	80017be <__libc_init_array+0x2e>
 80017b2:	bd70      	pop	{r4, r5, r6, pc}
 80017b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80017b8:	4798      	blx	r3
 80017ba:	3601      	adds	r6, #1
 80017bc:	e7ee      	b.n	800179c <__libc_init_array+0xc>
 80017be:	f855 3b04 	ldr.w	r3, [r5], #4
 80017c2:	4798      	blx	r3
 80017c4:	3601      	adds	r6, #1
 80017c6:	e7f2      	b.n	80017ae <__libc_init_array+0x1e>
 80017c8:	080045cc 	.word	0x080045cc
 80017cc:	080045cc 	.word	0x080045cc
 80017d0:	080045cc 	.word	0x080045cc
 80017d4:	080045d0 	.word	0x080045d0

080017d8 <memset>:
 80017d8:	4402      	add	r2, r0
 80017da:	4603      	mov	r3, r0
 80017dc:	4293      	cmp	r3, r2
 80017de:	d100      	bne.n	80017e2 <memset+0xa>
 80017e0:	4770      	bx	lr
 80017e2:	f803 1b01 	strb.w	r1, [r3], #1
 80017e6:	e7f9      	b.n	80017dc <memset+0x4>

080017e8 <__cvt>:
 80017e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80017ec:	ec55 4b10 	vmov	r4, r5, d0
 80017f0:	2d00      	cmp	r5, #0
 80017f2:	460e      	mov	r6, r1
 80017f4:	4619      	mov	r1, r3
 80017f6:	462b      	mov	r3, r5
 80017f8:	bfbb      	ittet	lt
 80017fa:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80017fe:	461d      	movlt	r5, r3
 8001800:	2300      	movge	r3, #0
 8001802:	232d      	movlt	r3, #45	; 0x2d
 8001804:	700b      	strb	r3, [r1, #0]
 8001806:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001808:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800180c:	4691      	mov	r9, r2
 800180e:	f023 0820 	bic.w	r8, r3, #32
 8001812:	bfbc      	itt	lt
 8001814:	4622      	movlt	r2, r4
 8001816:	4614      	movlt	r4, r2
 8001818:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800181c:	d005      	beq.n	800182a <__cvt+0x42>
 800181e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001822:	d100      	bne.n	8001826 <__cvt+0x3e>
 8001824:	3601      	adds	r6, #1
 8001826:	2102      	movs	r1, #2
 8001828:	e000      	b.n	800182c <__cvt+0x44>
 800182a:	2103      	movs	r1, #3
 800182c:	ab03      	add	r3, sp, #12
 800182e:	9301      	str	r3, [sp, #4]
 8001830:	ab02      	add	r3, sp, #8
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	ec45 4b10 	vmov	d0, r4, r5
 8001838:	4653      	mov	r3, sl
 800183a:	4632      	mov	r2, r6
 800183c:	f000 fce4 	bl	8002208 <_dtoa_r>
 8001840:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001844:	4607      	mov	r7, r0
 8001846:	d102      	bne.n	800184e <__cvt+0x66>
 8001848:	f019 0f01 	tst.w	r9, #1
 800184c:	d022      	beq.n	8001894 <__cvt+0xac>
 800184e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001852:	eb07 0906 	add.w	r9, r7, r6
 8001856:	d110      	bne.n	800187a <__cvt+0x92>
 8001858:	783b      	ldrb	r3, [r7, #0]
 800185a:	2b30      	cmp	r3, #48	; 0x30
 800185c:	d10a      	bne.n	8001874 <__cvt+0x8c>
 800185e:	2200      	movs	r2, #0
 8001860:	2300      	movs	r3, #0
 8001862:	4620      	mov	r0, r4
 8001864:	4629      	mov	r1, r5
 8001866:	f7ff f937 	bl	8000ad8 <__aeabi_dcmpeq>
 800186a:	b918      	cbnz	r0, 8001874 <__cvt+0x8c>
 800186c:	f1c6 0601 	rsb	r6, r6, #1
 8001870:	f8ca 6000 	str.w	r6, [sl]
 8001874:	f8da 3000 	ldr.w	r3, [sl]
 8001878:	4499      	add	r9, r3
 800187a:	2200      	movs	r2, #0
 800187c:	2300      	movs	r3, #0
 800187e:	4620      	mov	r0, r4
 8001880:	4629      	mov	r1, r5
 8001882:	f7ff f929 	bl	8000ad8 <__aeabi_dcmpeq>
 8001886:	b108      	cbz	r0, 800188c <__cvt+0xa4>
 8001888:	f8cd 900c 	str.w	r9, [sp, #12]
 800188c:	2230      	movs	r2, #48	; 0x30
 800188e:	9b03      	ldr	r3, [sp, #12]
 8001890:	454b      	cmp	r3, r9
 8001892:	d307      	bcc.n	80018a4 <__cvt+0xbc>
 8001894:	9b03      	ldr	r3, [sp, #12]
 8001896:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001898:	1bdb      	subs	r3, r3, r7
 800189a:	4638      	mov	r0, r7
 800189c:	6013      	str	r3, [r2, #0]
 800189e:	b004      	add	sp, #16
 80018a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80018a4:	1c59      	adds	r1, r3, #1
 80018a6:	9103      	str	r1, [sp, #12]
 80018a8:	701a      	strb	r2, [r3, #0]
 80018aa:	e7f0      	b.n	800188e <__cvt+0xa6>

080018ac <__exponent>:
 80018ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80018ae:	4603      	mov	r3, r0
 80018b0:	2900      	cmp	r1, #0
 80018b2:	bfb8      	it	lt
 80018b4:	4249      	neglt	r1, r1
 80018b6:	f803 2b02 	strb.w	r2, [r3], #2
 80018ba:	bfb4      	ite	lt
 80018bc:	222d      	movlt	r2, #45	; 0x2d
 80018be:	222b      	movge	r2, #43	; 0x2b
 80018c0:	2909      	cmp	r1, #9
 80018c2:	7042      	strb	r2, [r0, #1]
 80018c4:	dd2a      	ble.n	800191c <__exponent+0x70>
 80018c6:	f10d 0407 	add.w	r4, sp, #7
 80018ca:	46a4      	mov	ip, r4
 80018cc:	270a      	movs	r7, #10
 80018ce:	46a6      	mov	lr, r4
 80018d0:	460a      	mov	r2, r1
 80018d2:	fb91 f6f7 	sdiv	r6, r1, r7
 80018d6:	fb07 1516 	mls	r5, r7, r6, r1
 80018da:	3530      	adds	r5, #48	; 0x30
 80018dc:	2a63      	cmp	r2, #99	; 0x63
 80018de:	f104 34ff 	add.w	r4, r4, #4294967295
 80018e2:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80018e6:	4631      	mov	r1, r6
 80018e8:	dcf1      	bgt.n	80018ce <__exponent+0x22>
 80018ea:	3130      	adds	r1, #48	; 0x30
 80018ec:	f1ae 0502 	sub.w	r5, lr, #2
 80018f0:	f804 1c01 	strb.w	r1, [r4, #-1]
 80018f4:	1c44      	adds	r4, r0, #1
 80018f6:	4629      	mov	r1, r5
 80018f8:	4561      	cmp	r1, ip
 80018fa:	d30a      	bcc.n	8001912 <__exponent+0x66>
 80018fc:	f10d 0209 	add.w	r2, sp, #9
 8001900:	eba2 020e 	sub.w	r2, r2, lr
 8001904:	4565      	cmp	r5, ip
 8001906:	bf88      	it	hi
 8001908:	2200      	movhi	r2, #0
 800190a:	4413      	add	r3, r2
 800190c:	1a18      	subs	r0, r3, r0
 800190e:	b003      	add	sp, #12
 8001910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001912:	f811 2b01 	ldrb.w	r2, [r1], #1
 8001916:	f804 2f01 	strb.w	r2, [r4, #1]!
 800191a:	e7ed      	b.n	80018f8 <__exponent+0x4c>
 800191c:	2330      	movs	r3, #48	; 0x30
 800191e:	3130      	adds	r1, #48	; 0x30
 8001920:	7083      	strb	r3, [r0, #2]
 8001922:	70c1      	strb	r1, [r0, #3]
 8001924:	1d03      	adds	r3, r0, #4
 8001926:	e7f1      	b.n	800190c <__exponent+0x60>

08001928 <_printf_float>:
 8001928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800192c:	ed2d 8b02 	vpush	{d8}
 8001930:	b08d      	sub	sp, #52	; 0x34
 8001932:	460c      	mov	r4, r1
 8001934:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001938:	4616      	mov	r6, r2
 800193a:	461f      	mov	r7, r3
 800193c:	4605      	mov	r5, r0
 800193e:	f001 fb45 	bl	8002fcc <_localeconv_r>
 8001942:	f8d0 a000 	ldr.w	sl, [r0]
 8001946:	4650      	mov	r0, sl
 8001948:	f7fe fc4a 	bl	80001e0 <strlen>
 800194c:	2300      	movs	r3, #0
 800194e:	930a      	str	r3, [sp, #40]	; 0x28
 8001950:	6823      	ldr	r3, [r4, #0]
 8001952:	9305      	str	r3, [sp, #20]
 8001954:	f8d8 3000 	ldr.w	r3, [r8]
 8001958:	f894 b018 	ldrb.w	fp, [r4, #24]
 800195c:	3307      	adds	r3, #7
 800195e:	f023 0307 	bic.w	r3, r3, #7
 8001962:	f103 0208 	add.w	r2, r3, #8
 8001966:	f8c8 2000 	str.w	r2, [r8]
 800196a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800196e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001972:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8001976:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800197a:	9307      	str	r3, [sp, #28]
 800197c:	f8cd 8018 	str.w	r8, [sp, #24]
 8001980:	ee08 0a10 	vmov	s16, r0
 8001984:	4b9f      	ldr	r3, [pc, #636]	; (8001c04 <_printf_float+0x2dc>)
 8001986:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800198a:	f04f 32ff 	mov.w	r2, #4294967295
 800198e:	f7ff f8d5 	bl	8000b3c <__aeabi_dcmpun>
 8001992:	bb88      	cbnz	r0, 80019f8 <_printf_float+0xd0>
 8001994:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001998:	4b9a      	ldr	r3, [pc, #616]	; (8001c04 <_printf_float+0x2dc>)
 800199a:	f04f 32ff 	mov.w	r2, #4294967295
 800199e:	f7ff f8af 	bl	8000b00 <__aeabi_dcmple>
 80019a2:	bb48      	cbnz	r0, 80019f8 <_printf_float+0xd0>
 80019a4:	2200      	movs	r2, #0
 80019a6:	2300      	movs	r3, #0
 80019a8:	4640      	mov	r0, r8
 80019aa:	4649      	mov	r1, r9
 80019ac:	f7ff f89e 	bl	8000aec <__aeabi_dcmplt>
 80019b0:	b110      	cbz	r0, 80019b8 <_printf_float+0x90>
 80019b2:	232d      	movs	r3, #45	; 0x2d
 80019b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80019b8:	4b93      	ldr	r3, [pc, #588]	; (8001c08 <_printf_float+0x2e0>)
 80019ba:	4894      	ldr	r0, [pc, #592]	; (8001c0c <_printf_float+0x2e4>)
 80019bc:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80019c0:	bf94      	ite	ls
 80019c2:	4698      	movls	r8, r3
 80019c4:	4680      	movhi	r8, r0
 80019c6:	2303      	movs	r3, #3
 80019c8:	6123      	str	r3, [r4, #16]
 80019ca:	9b05      	ldr	r3, [sp, #20]
 80019cc:	f023 0204 	bic.w	r2, r3, #4
 80019d0:	6022      	str	r2, [r4, #0]
 80019d2:	f04f 0900 	mov.w	r9, #0
 80019d6:	9700      	str	r7, [sp, #0]
 80019d8:	4633      	mov	r3, r6
 80019da:	aa0b      	add	r2, sp, #44	; 0x2c
 80019dc:	4621      	mov	r1, r4
 80019de:	4628      	mov	r0, r5
 80019e0:	f000 f9d8 	bl	8001d94 <_printf_common>
 80019e4:	3001      	adds	r0, #1
 80019e6:	f040 8090 	bne.w	8001b0a <_printf_float+0x1e2>
 80019ea:	f04f 30ff 	mov.w	r0, #4294967295
 80019ee:	b00d      	add	sp, #52	; 0x34
 80019f0:	ecbd 8b02 	vpop	{d8}
 80019f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80019f8:	4642      	mov	r2, r8
 80019fa:	464b      	mov	r3, r9
 80019fc:	4640      	mov	r0, r8
 80019fe:	4649      	mov	r1, r9
 8001a00:	f7ff f89c 	bl	8000b3c <__aeabi_dcmpun>
 8001a04:	b140      	cbz	r0, 8001a18 <_printf_float+0xf0>
 8001a06:	464b      	mov	r3, r9
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	bfbc      	itt	lt
 8001a0c:	232d      	movlt	r3, #45	; 0x2d
 8001a0e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001a12:	487f      	ldr	r0, [pc, #508]	; (8001c10 <_printf_float+0x2e8>)
 8001a14:	4b7f      	ldr	r3, [pc, #508]	; (8001c14 <_printf_float+0x2ec>)
 8001a16:	e7d1      	b.n	80019bc <_printf_float+0x94>
 8001a18:	6863      	ldr	r3, [r4, #4]
 8001a1a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001a1e:	9206      	str	r2, [sp, #24]
 8001a20:	1c5a      	adds	r2, r3, #1
 8001a22:	d13f      	bne.n	8001aa4 <_printf_float+0x17c>
 8001a24:	2306      	movs	r3, #6
 8001a26:	6063      	str	r3, [r4, #4]
 8001a28:	9b05      	ldr	r3, [sp, #20]
 8001a2a:	6861      	ldr	r1, [r4, #4]
 8001a2c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001a30:	2300      	movs	r3, #0
 8001a32:	9303      	str	r3, [sp, #12]
 8001a34:	ab0a      	add	r3, sp, #40	; 0x28
 8001a36:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001a3a:	ab09      	add	r3, sp, #36	; 0x24
 8001a3c:	ec49 8b10 	vmov	d0, r8, r9
 8001a40:	9300      	str	r3, [sp, #0]
 8001a42:	6022      	str	r2, [r4, #0]
 8001a44:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001a48:	4628      	mov	r0, r5
 8001a4a:	f7ff fecd 	bl	80017e8 <__cvt>
 8001a4e:	9b06      	ldr	r3, [sp, #24]
 8001a50:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001a52:	2b47      	cmp	r3, #71	; 0x47
 8001a54:	4680      	mov	r8, r0
 8001a56:	d108      	bne.n	8001a6a <_printf_float+0x142>
 8001a58:	1cc8      	adds	r0, r1, #3
 8001a5a:	db02      	blt.n	8001a62 <_printf_float+0x13a>
 8001a5c:	6863      	ldr	r3, [r4, #4]
 8001a5e:	4299      	cmp	r1, r3
 8001a60:	dd41      	ble.n	8001ae6 <_printf_float+0x1be>
 8001a62:	f1ab 0b02 	sub.w	fp, fp, #2
 8001a66:	fa5f fb8b 	uxtb.w	fp, fp
 8001a6a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001a6e:	d820      	bhi.n	8001ab2 <_printf_float+0x18a>
 8001a70:	3901      	subs	r1, #1
 8001a72:	465a      	mov	r2, fp
 8001a74:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001a78:	9109      	str	r1, [sp, #36]	; 0x24
 8001a7a:	f7ff ff17 	bl	80018ac <__exponent>
 8001a7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001a80:	1813      	adds	r3, r2, r0
 8001a82:	2a01      	cmp	r2, #1
 8001a84:	4681      	mov	r9, r0
 8001a86:	6123      	str	r3, [r4, #16]
 8001a88:	dc02      	bgt.n	8001a90 <_printf_float+0x168>
 8001a8a:	6822      	ldr	r2, [r4, #0]
 8001a8c:	07d2      	lsls	r2, r2, #31
 8001a8e:	d501      	bpl.n	8001a94 <_printf_float+0x16c>
 8001a90:	3301      	adds	r3, #1
 8001a92:	6123      	str	r3, [r4, #16]
 8001a94:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001a98:	2b00      	cmp	r3, #0
 8001a9a:	d09c      	beq.n	80019d6 <_printf_float+0xae>
 8001a9c:	232d      	movs	r3, #45	; 0x2d
 8001a9e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001aa2:	e798      	b.n	80019d6 <_printf_float+0xae>
 8001aa4:	9a06      	ldr	r2, [sp, #24]
 8001aa6:	2a47      	cmp	r2, #71	; 0x47
 8001aa8:	d1be      	bne.n	8001a28 <_printf_float+0x100>
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d1bc      	bne.n	8001a28 <_printf_float+0x100>
 8001aae:	2301      	movs	r3, #1
 8001ab0:	e7b9      	b.n	8001a26 <_printf_float+0xfe>
 8001ab2:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001ab6:	d118      	bne.n	8001aea <_printf_float+0x1c2>
 8001ab8:	2900      	cmp	r1, #0
 8001aba:	6863      	ldr	r3, [r4, #4]
 8001abc:	dd0b      	ble.n	8001ad6 <_printf_float+0x1ae>
 8001abe:	6121      	str	r1, [r4, #16]
 8001ac0:	b913      	cbnz	r3, 8001ac8 <_printf_float+0x1a0>
 8001ac2:	6822      	ldr	r2, [r4, #0]
 8001ac4:	07d0      	lsls	r0, r2, #31
 8001ac6:	d502      	bpl.n	8001ace <_printf_float+0x1a6>
 8001ac8:	3301      	adds	r3, #1
 8001aca:	440b      	add	r3, r1
 8001acc:	6123      	str	r3, [r4, #16]
 8001ace:	65a1      	str	r1, [r4, #88]	; 0x58
 8001ad0:	f04f 0900 	mov.w	r9, #0
 8001ad4:	e7de      	b.n	8001a94 <_printf_float+0x16c>
 8001ad6:	b913      	cbnz	r3, 8001ade <_printf_float+0x1b6>
 8001ad8:	6822      	ldr	r2, [r4, #0]
 8001ada:	07d2      	lsls	r2, r2, #31
 8001adc:	d501      	bpl.n	8001ae2 <_printf_float+0x1ba>
 8001ade:	3302      	adds	r3, #2
 8001ae0:	e7f4      	b.n	8001acc <_printf_float+0x1a4>
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	e7f2      	b.n	8001acc <_printf_float+0x1a4>
 8001ae6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001aea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001aec:	4299      	cmp	r1, r3
 8001aee:	db05      	blt.n	8001afc <_printf_float+0x1d4>
 8001af0:	6823      	ldr	r3, [r4, #0]
 8001af2:	6121      	str	r1, [r4, #16]
 8001af4:	07d8      	lsls	r0, r3, #31
 8001af6:	d5ea      	bpl.n	8001ace <_printf_float+0x1a6>
 8001af8:	1c4b      	adds	r3, r1, #1
 8001afa:	e7e7      	b.n	8001acc <_printf_float+0x1a4>
 8001afc:	2900      	cmp	r1, #0
 8001afe:	bfd4      	ite	le
 8001b00:	f1c1 0202 	rsble	r2, r1, #2
 8001b04:	2201      	movgt	r2, #1
 8001b06:	4413      	add	r3, r2
 8001b08:	e7e0      	b.n	8001acc <_printf_float+0x1a4>
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	055a      	lsls	r2, r3, #21
 8001b0e:	d407      	bmi.n	8001b20 <_printf_float+0x1f8>
 8001b10:	6923      	ldr	r3, [r4, #16]
 8001b12:	4642      	mov	r2, r8
 8001b14:	4631      	mov	r1, r6
 8001b16:	4628      	mov	r0, r5
 8001b18:	47b8      	blx	r7
 8001b1a:	3001      	adds	r0, #1
 8001b1c:	d12c      	bne.n	8001b78 <_printf_float+0x250>
 8001b1e:	e764      	b.n	80019ea <_printf_float+0xc2>
 8001b20:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001b24:	f240 80e0 	bls.w	8001ce8 <_printf_float+0x3c0>
 8001b28:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	2300      	movs	r3, #0
 8001b30:	f7fe ffd2 	bl	8000ad8 <__aeabi_dcmpeq>
 8001b34:	2800      	cmp	r0, #0
 8001b36:	d034      	beq.n	8001ba2 <_printf_float+0x27a>
 8001b38:	4a37      	ldr	r2, [pc, #220]	; (8001c18 <_printf_float+0x2f0>)
 8001b3a:	2301      	movs	r3, #1
 8001b3c:	4631      	mov	r1, r6
 8001b3e:	4628      	mov	r0, r5
 8001b40:	47b8      	blx	r7
 8001b42:	3001      	adds	r0, #1
 8001b44:	f43f af51 	beq.w	80019ea <_printf_float+0xc2>
 8001b48:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001b4c:	429a      	cmp	r2, r3
 8001b4e:	db02      	blt.n	8001b56 <_printf_float+0x22e>
 8001b50:	6823      	ldr	r3, [r4, #0]
 8001b52:	07d8      	lsls	r0, r3, #31
 8001b54:	d510      	bpl.n	8001b78 <_printf_float+0x250>
 8001b56:	ee18 3a10 	vmov	r3, s16
 8001b5a:	4652      	mov	r2, sl
 8001b5c:	4631      	mov	r1, r6
 8001b5e:	4628      	mov	r0, r5
 8001b60:	47b8      	blx	r7
 8001b62:	3001      	adds	r0, #1
 8001b64:	f43f af41 	beq.w	80019ea <_printf_float+0xc2>
 8001b68:	f04f 0800 	mov.w	r8, #0
 8001b6c:	f104 091a 	add.w	r9, r4, #26
 8001b70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001b72:	3b01      	subs	r3, #1
 8001b74:	4543      	cmp	r3, r8
 8001b76:	dc09      	bgt.n	8001b8c <_printf_float+0x264>
 8001b78:	6823      	ldr	r3, [r4, #0]
 8001b7a:	079b      	lsls	r3, r3, #30
 8001b7c:	f100 8105 	bmi.w	8001d8a <_printf_float+0x462>
 8001b80:	68e0      	ldr	r0, [r4, #12]
 8001b82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001b84:	4298      	cmp	r0, r3
 8001b86:	bfb8      	it	lt
 8001b88:	4618      	movlt	r0, r3
 8001b8a:	e730      	b.n	80019ee <_printf_float+0xc6>
 8001b8c:	2301      	movs	r3, #1
 8001b8e:	464a      	mov	r2, r9
 8001b90:	4631      	mov	r1, r6
 8001b92:	4628      	mov	r0, r5
 8001b94:	47b8      	blx	r7
 8001b96:	3001      	adds	r0, #1
 8001b98:	f43f af27 	beq.w	80019ea <_printf_float+0xc2>
 8001b9c:	f108 0801 	add.w	r8, r8, #1
 8001ba0:	e7e6      	b.n	8001b70 <_printf_float+0x248>
 8001ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	dc39      	bgt.n	8001c1c <_printf_float+0x2f4>
 8001ba8:	4a1b      	ldr	r2, [pc, #108]	; (8001c18 <_printf_float+0x2f0>)
 8001baa:	2301      	movs	r3, #1
 8001bac:	4631      	mov	r1, r6
 8001bae:	4628      	mov	r0, r5
 8001bb0:	47b8      	blx	r7
 8001bb2:	3001      	adds	r0, #1
 8001bb4:	f43f af19 	beq.w	80019ea <_printf_float+0xc2>
 8001bb8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001bbc:	4313      	orrs	r3, r2
 8001bbe:	d102      	bne.n	8001bc6 <_printf_float+0x29e>
 8001bc0:	6823      	ldr	r3, [r4, #0]
 8001bc2:	07d9      	lsls	r1, r3, #31
 8001bc4:	d5d8      	bpl.n	8001b78 <_printf_float+0x250>
 8001bc6:	ee18 3a10 	vmov	r3, s16
 8001bca:	4652      	mov	r2, sl
 8001bcc:	4631      	mov	r1, r6
 8001bce:	4628      	mov	r0, r5
 8001bd0:	47b8      	blx	r7
 8001bd2:	3001      	adds	r0, #1
 8001bd4:	f43f af09 	beq.w	80019ea <_printf_float+0xc2>
 8001bd8:	f04f 0900 	mov.w	r9, #0
 8001bdc:	f104 0a1a 	add.w	sl, r4, #26
 8001be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001be2:	425b      	negs	r3, r3
 8001be4:	454b      	cmp	r3, r9
 8001be6:	dc01      	bgt.n	8001bec <_printf_float+0x2c4>
 8001be8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001bea:	e792      	b.n	8001b12 <_printf_float+0x1ea>
 8001bec:	2301      	movs	r3, #1
 8001bee:	4652      	mov	r2, sl
 8001bf0:	4631      	mov	r1, r6
 8001bf2:	4628      	mov	r0, r5
 8001bf4:	47b8      	blx	r7
 8001bf6:	3001      	adds	r0, #1
 8001bf8:	f43f aef7 	beq.w	80019ea <_printf_float+0xc2>
 8001bfc:	f109 0901 	add.w	r9, r9, #1
 8001c00:	e7ee      	b.n	8001be0 <_printf_float+0x2b8>
 8001c02:	bf00      	nop
 8001c04:	7fefffff 	.word	0x7fefffff
 8001c08:	080041ec 	.word	0x080041ec
 8001c0c:	080041f0 	.word	0x080041f0
 8001c10:	080041f8 	.word	0x080041f8
 8001c14:	080041f4 	.word	0x080041f4
 8001c18:	080041fc 	.word	0x080041fc
 8001c1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001c1e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001c20:	429a      	cmp	r2, r3
 8001c22:	bfa8      	it	ge
 8001c24:	461a      	movge	r2, r3
 8001c26:	2a00      	cmp	r2, #0
 8001c28:	4691      	mov	r9, r2
 8001c2a:	dc37      	bgt.n	8001c9c <_printf_float+0x374>
 8001c2c:	f04f 0b00 	mov.w	fp, #0
 8001c30:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c34:	f104 021a 	add.w	r2, r4, #26
 8001c38:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001c3a:	9305      	str	r3, [sp, #20]
 8001c3c:	eba3 0309 	sub.w	r3, r3, r9
 8001c40:	455b      	cmp	r3, fp
 8001c42:	dc33      	bgt.n	8001cac <_printf_float+0x384>
 8001c44:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	db3b      	blt.n	8001cc4 <_printf_float+0x39c>
 8001c4c:	6823      	ldr	r3, [r4, #0]
 8001c4e:	07da      	lsls	r2, r3, #31
 8001c50:	d438      	bmi.n	8001cc4 <_printf_float+0x39c>
 8001c52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001c54:	9b05      	ldr	r3, [sp, #20]
 8001c56:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001c58:	1ad3      	subs	r3, r2, r3
 8001c5a:	eba2 0901 	sub.w	r9, r2, r1
 8001c5e:	4599      	cmp	r9, r3
 8001c60:	bfa8      	it	ge
 8001c62:	4699      	movge	r9, r3
 8001c64:	f1b9 0f00 	cmp.w	r9, #0
 8001c68:	dc35      	bgt.n	8001cd6 <_printf_float+0x3ae>
 8001c6a:	f04f 0800 	mov.w	r8, #0
 8001c6e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c72:	f104 0a1a 	add.w	sl, r4, #26
 8001c76:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001c7a:	1a9b      	subs	r3, r3, r2
 8001c7c:	eba3 0309 	sub.w	r3, r3, r9
 8001c80:	4543      	cmp	r3, r8
 8001c82:	f77f af79 	ble.w	8001b78 <_printf_float+0x250>
 8001c86:	2301      	movs	r3, #1
 8001c88:	4652      	mov	r2, sl
 8001c8a:	4631      	mov	r1, r6
 8001c8c:	4628      	mov	r0, r5
 8001c8e:	47b8      	blx	r7
 8001c90:	3001      	adds	r0, #1
 8001c92:	f43f aeaa 	beq.w	80019ea <_printf_float+0xc2>
 8001c96:	f108 0801 	add.w	r8, r8, #1
 8001c9a:	e7ec      	b.n	8001c76 <_printf_float+0x34e>
 8001c9c:	4613      	mov	r3, r2
 8001c9e:	4631      	mov	r1, r6
 8001ca0:	4642      	mov	r2, r8
 8001ca2:	4628      	mov	r0, r5
 8001ca4:	47b8      	blx	r7
 8001ca6:	3001      	adds	r0, #1
 8001ca8:	d1c0      	bne.n	8001c2c <_printf_float+0x304>
 8001caa:	e69e      	b.n	80019ea <_printf_float+0xc2>
 8001cac:	2301      	movs	r3, #1
 8001cae:	4631      	mov	r1, r6
 8001cb0:	4628      	mov	r0, r5
 8001cb2:	9205      	str	r2, [sp, #20]
 8001cb4:	47b8      	blx	r7
 8001cb6:	3001      	adds	r0, #1
 8001cb8:	f43f ae97 	beq.w	80019ea <_printf_float+0xc2>
 8001cbc:	9a05      	ldr	r2, [sp, #20]
 8001cbe:	f10b 0b01 	add.w	fp, fp, #1
 8001cc2:	e7b9      	b.n	8001c38 <_printf_float+0x310>
 8001cc4:	ee18 3a10 	vmov	r3, s16
 8001cc8:	4652      	mov	r2, sl
 8001cca:	4631      	mov	r1, r6
 8001ccc:	4628      	mov	r0, r5
 8001cce:	47b8      	blx	r7
 8001cd0:	3001      	adds	r0, #1
 8001cd2:	d1be      	bne.n	8001c52 <_printf_float+0x32a>
 8001cd4:	e689      	b.n	80019ea <_printf_float+0xc2>
 8001cd6:	9a05      	ldr	r2, [sp, #20]
 8001cd8:	464b      	mov	r3, r9
 8001cda:	4442      	add	r2, r8
 8001cdc:	4631      	mov	r1, r6
 8001cde:	4628      	mov	r0, r5
 8001ce0:	47b8      	blx	r7
 8001ce2:	3001      	adds	r0, #1
 8001ce4:	d1c1      	bne.n	8001c6a <_printf_float+0x342>
 8001ce6:	e680      	b.n	80019ea <_printf_float+0xc2>
 8001ce8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001cea:	2a01      	cmp	r2, #1
 8001cec:	dc01      	bgt.n	8001cf2 <_printf_float+0x3ca>
 8001cee:	07db      	lsls	r3, r3, #31
 8001cf0:	d538      	bpl.n	8001d64 <_printf_float+0x43c>
 8001cf2:	2301      	movs	r3, #1
 8001cf4:	4642      	mov	r2, r8
 8001cf6:	4631      	mov	r1, r6
 8001cf8:	4628      	mov	r0, r5
 8001cfa:	47b8      	blx	r7
 8001cfc:	3001      	adds	r0, #1
 8001cfe:	f43f ae74 	beq.w	80019ea <_printf_float+0xc2>
 8001d02:	ee18 3a10 	vmov	r3, s16
 8001d06:	4652      	mov	r2, sl
 8001d08:	4631      	mov	r1, r6
 8001d0a:	4628      	mov	r0, r5
 8001d0c:	47b8      	blx	r7
 8001d0e:	3001      	adds	r0, #1
 8001d10:	f43f ae6b 	beq.w	80019ea <_printf_float+0xc2>
 8001d14:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001d18:	2200      	movs	r2, #0
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	f7fe fedc 	bl	8000ad8 <__aeabi_dcmpeq>
 8001d20:	b9d8      	cbnz	r0, 8001d5a <_printf_float+0x432>
 8001d22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d24:	f108 0201 	add.w	r2, r8, #1
 8001d28:	3b01      	subs	r3, #1
 8001d2a:	4631      	mov	r1, r6
 8001d2c:	4628      	mov	r0, r5
 8001d2e:	47b8      	blx	r7
 8001d30:	3001      	adds	r0, #1
 8001d32:	d10e      	bne.n	8001d52 <_printf_float+0x42a>
 8001d34:	e659      	b.n	80019ea <_printf_float+0xc2>
 8001d36:	2301      	movs	r3, #1
 8001d38:	4652      	mov	r2, sl
 8001d3a:	4631      	mov	r1, r6
 8001d3c:	4628      	mov	r0, r5
 8001d3e:	47b8      	blx	r7
 8001d40:	3001      	adds	r0, #1
 8001d42:	f43f ae52 	beq.w	80019ea <_printf_float+0xc2>
 8001d46:	f108 0801 	add.w	r8, r8, #1
 8001d4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d4c:	3b01      	subs	r3, #1
 8001d4e:	4543      	cmp	r3, r8
 8001d50:	dcf1      	bgt.n	8001d36 <_printf_float+0x40e>
 8001d52:	464b      	mov	r3, r9
 8001d54:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001d58:	e6dc      	b.n	8001b14 <_printf_float+0x1ec>
 8001d5a:	f04f 0800 	mov.w	r8, #0
 8001d5e:	f104 0a1a 	add.w	sl, r4, #26
 8001d62:	e7f2      	b.n	8001d4a <_printf_float+0x422>
 8001d64:	2301      	movs	r3, #1
 8001d66:	4642      	mov	r2, r8
 8001d68:	e7df      	b.n	8001d2a <_printf_float+0x402>
 8001d6a:	2301      	movs	r3, #1
 8001d6c:	464a      	mov	r2, r9
 8001d6e:	4631      	mov	r1, r6
 8001d70:	4628      	mov	r0, r5
 8001d72:	47b8      	blx	r7
 8001d74:	3001      	adds	r0, #1
 8001d76:	f43f ae38 	beq.w	80019ea <_printf_float+0xc2>
 8001d7a:	f108 0801 	add.w	r8, r8, #1
 8001d7e:	68e3      	ldr	r3, [r4, #12]
 8001d80:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001d82:	1a5b      	subs	r3, r3, r1
 8001d84:	4543      	cmp	r3, r8
 8001d86:	dcf0      	bgt.n	8001d6a <_printf_float+0x442>
 8001d88:	e6fa      	b.n	8001b80 <_printf_float+0x258>
 8001d8a:	f04f 0800 	mov.w	r8, #0
 8001d8e:	f104 0919 	add.w	r9, r4, #25
 8001d92:	e7f4      	b.n	8001d7e <_printf_float+0x456>

08001d94 <_printf_common>:
 8001d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d98:	4616      	mov	r6, r2
 8001d9a:	4699      	mov	r9, r3
 8001d9c:	688a      	ldr	r2, [r1, #8]
 8001d9e:	690b      	ldr	r3, [r1, #16]
 8001da0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001da4:	4293      	cmp	r3, r2
 8001da6:	bfb8      	it	lt
 8001da8:	4613      	movlt	r3, r2
 8001daa:	6033      	str	r3, [r6, #0]
 8001dac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001db0:	4607      	mov	r7, r0
 8001db2:	460c      	mov	r4, r1
 8001db4:	b10a      	cbz	r2, 8001dba <_printf_common+0x26>
 8001db6:	3301      	adds	r3, #1
 8001db8:	6033      	str	r3, [r6, #0]
 8001dba:	6823      	ldr	r3, [r4, #0]
 8001dbc:	0699      	lsls	r1, r3, #26
 8001dbe:	bf42      	ittt	mi
 8001dc0:	6833      	ldrmi	r3, [r6, #0]
 8001dc2:	3302      	addmi	r3, #2
 8001dc4:	6033      	strmi	r3, [r6, #0]
 8001dc6:	6825      	ldr	r5, [r4, #0]
 8001dc8:	f015 0506 	ands.w	r5, r5, #6
 8001dcc:	d106      	bne.n	8001ddc <_printf_common+0x48>
 8001dce:	f104 0a19 	add.w	sl, r4, #25
 8001dd2:	68e3      	ldr	r3, [r4, #12]
 8001dd4:	6832      	ldr	r2, [r6, #0]
 8001dd6:	1a9b      	subs	r3, r3, r2
 8001dd8:	42ab      	cmp	r3, r5
 8001dda:	dc26      	bgt.n	8001e2a <_printf_common+0x96>
 8001ddc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001de0:	1e13      	subs	r3, r2, #0
 8001de2:	6822      	ldr	r2, [r4, #0]
 8001de4:	bf18      	it	ne
 8001de6:	2301      	movne	r3, #1
 8001de8:	0692      	lsls	r2, r2, #26
 8001dea:	d42b      	bmi.n	8001e44 <_printf_common+0xb0>
 8001dec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001df0:	4649      	mov	r1, r9
 8001df2:	4638      	mov	r0, r7
 8001df4:	47c0      	blx	r8
 8001df6:	3001      	adds	r0, #1
 8001df8:	d01e      	beq.n	8001e38 <_printf_common+0xa4>
 8001dfa:	6823      	ldr	r3, [r4, #0]
 8001dfc:	68e5      	ldr	r5, [r4, #12]
 8001dfe:	6832      	ldr	r2, [r6, #0]
 8001e00:	f003 0306 	and.w	r3, r3, #6
 8001e04:	2b04      	cmp	r3, #4
 8001e06:	bf08      	it	eq
 8001e08:	1aad      	subeq	r5, r5, r2
 8001e0a:	68a3      	ldr	r3, [r4, #8]
 8001e0c:	6922      	ldr	r2, [r4, #16]
 8001e0e:	bf0c      	ite	eq
 8001e10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001e14:	2500      	movne	r5, #0
 8001e16:	4293      	cmp	r3, r2
 8001e18:	bfc4      	itt	gt
 8001e1a:	1a9b      	subgt	r3, r3, r2
 8001e1c:	18ed      	addgt	r5, r5, r3
 8001e1e:	2600      	movs	r6, #0
 8001e20:	341a      	adds	r4, #26
 8001e22:	42b5      	cmp	r5, r6
 8001e24:	d11a      	bne.n	8001e5c <_printf_common+0xc8>
 8001e26:	2000      	movs	r0, #0
 8001e28:	e008      	b.n	8001e3c <_printf_common+0xa8>
 8001e2a:	2301      	movs	r3, #1
 8001e2c:	4652      	mov	r2, sl
 8001e2e:	4649      	mov	r1, r9
 8001e30:	4638      	mov	r0, r7
 8001e32:	47c0      	blx	r8
 8001e34:	3001      	adds	r0, #1
 8001e36:	d103      	bne.n	8001e40 <_printf_common+0xac>
 8001e38:	f04f 30ff 	mov.w	r0, #4294967295
 8001e3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e40:	3501      	adds	r5, #1
 8001e42:	e7c6      	b.n	8001dd2 <_printf_common+0x3e>
 8001e44:	18e1      	adds	r1, r4, r3
 8001e46:	1c5a      	adds	r2, r3, #1
 8001e48:	2030      	movs	r0, #48	; 0x30
 8001e4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001e4e:	4422      	add	r2, r4
 8001e50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001e54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001e58:	3302      	adds	r3, #2
 8001e5a:	e7c7      	b.n	8001dec <_printf_common+0x58>
 8001e5c:	2301      	movs	r3, #1
 8001e5e:	4622      	mov	r2, r4
 8001e60:	4649      	mov	r1, r9
 8001e62:	4638      	mov	r0, r7
 8001e64:	47c0      	blx	r8
 8001e66:	3001      	adds	r0, #1
 8001e68:	d0e6      	beq.n	8001e38 <_printf_common+0xa4>
 8001e6a:	3601      	adds	r6, #1
 8001e6c:	e7d9      	b.n	8001e22 <_printf_common+0x8e>
	...

08001e70 <_printf_i>:
 8001e70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e74:	460c      	mov	r4, r1
 8001e76:	4691      	mov	r9, r2
 8001e78:	7e27      	ldrb	r7, [r4, #24]
 8001e7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001e7c:	2f78      	cmp	r7, #120	; 0x78
 8001e7e:	4680      	mov	r8, r0
 8001e80:	469a      	mov	sl, r3
 8001e82:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001e86:	d807      	bhi.n	8001e98 <_printf_i+0x28>
 8001e88:	2f62      	cmp	r7, #98	; 0x62
 8001e8a:	d80a      	bhi.n	8001ea2 <_printf_i+0x32>
 8001e8c:	2f00      	cmp	r7, #0
 8001e8e:	f000 80d8 	beq.w	8002042 <_printf_i+0x1d2>
 8001e92:	2f58      	cmp	r7, #88	; 0x58
 8001e94:	f000 80a3 	beq.w	8001fde <_printf_i+0x16e>
 8001e98:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001e9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001ea0:	e03a      	b.n	8001f18 <_printf_i+0xa8>
 8001ea2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001ea6:	2b15      	cmp	r3, #21
 8001ea8:	d8f6      	bhi.n	8001e98 <_printf_i+0x28>
 8001eaa:	a001      	add	r0, pc, #4	; (adr r0, 8001eb0 <_printf_i+0x40>)
 8001eac:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001eb0:	08001f09 	.word	0x08001f09
 8001eb4:	08001f1d 	.word	0x08001f1d
 8001eb8:	08001e99 	.word	0x08001e99
 8001ebc:	08001e99 	.word	0x08001e99
 8001ec0:	08001e99 	.word	0x08001e99
 8001ec4:	08001e99 	.word	0x08001e99
 8001ec8:	08001f1d 	.word	0x08001f1d
 8001ecc:	08001e99 	.word	0x08001e99
 8001ed0:	08001e99 	.word	0x08001e99
 8001ed4:	08001e99 	.word	0x08001e99
 8001ed8:	08001e99 	.word	0x08001e99
 8001edc:	08002029 	.word	0x08002029
 8001ee0:	08001f4d 	.word	0x08001f4d
 8001ee4:	0800200b 	.word	0x0800200b
 8001ee8:	08001e99 	.word	0x08001e99
 8001eec:	08001e99 	.word	0x08001e99
 8001ef0:	0800204b 	.word	0x0800204b
 8001ef4:	08001e99 	.word	0x08001e99
 8001ef8:	08001f4d 	.word	0x08001f4d
 8001efc:	08001e99 	.word	0x08001e99
 8001f00:	08001e99 	.word	0x08001e99
 8001f04:	08002013 	.word	0x08002013
 8001f08:	680b      	ldr	r3, [r1, #0]
 8001f0a:	1d1a      	adds	r2, r3, #4
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	600a      	str	r2, [r1, #0]
 8001f10:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001f14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001f18:	2301      	movs	r3, #1
 8001f1a:	e0a3      	b.n	8002064 <_printf_i+0x1f4>
 8001f1c:	6825      	ldr	r5, [r4, #0]
 8001f1e:	6808      	ldr	r0, [r1, #0]
 8001f20:	062e      	lsls	r6, r5, #24
 8001f22:	f100 0304 	add.w	r3, r0, #4
 8001f26:	d50a      	bpl.n	8001f3e <_printf_i+0xce>
 8001f28:	6805      	ldr	r5, [r0, #0]
 8001f2a:	600b      	str	r3, [r1, #0]
 8001f2c:	2d00      	cmp	r5, #0
 8001f2e:	da03      	bge.n	8001f38 <_printf_i+0xc8>
 8001f30:	232d      	movs	r3, #45	; 0x2d
 8001f32:	426d      	negs	r5, r5
 8001f34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f38:	485e      	ldr	r0, [pc, #376]	; (80020b4 <_printf_i+0x244>)
 8001f3a:	230a      	movs	r3, #10
 8001f3c:	e019      	b.n	8001f72 <_printf_i+0x102>
 8001f3e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001f42:	6805      	ldr	r5, [r0, #0]
 8001f44:	600b      	str	r3, [r1, #0]
 8001f46:	bf18      	it	ne
 8001f48:	b22d      	sxthne	r5, r5
 8001f4a:	e7ef      	b.n	8001f2c <_printf_i+0xbc>
 8001f4c:	680b      	ldr	r3, [r1, #0]
 8001f4e:	6825      	ldr	r5, [r4, #0]
 8001f50:	1d18      	adds	r0, r3, #4
 8001f52:	6008      	str	r0, [r1, #0]
 8001f54:	0628      	lsls	r0, r5, #24
 8001f56:	d501      	bpl.n	8001f5c <_printf_i+0xec>
 8001f58:	681d      	ldr	r5, [r3, #0]
 8001f5a:	e002      	b.n	8001f62 <_printf_i+0xf2>
 8001f5c:	0669      	lsls	r1, r5, #25
 8001f5e:	d5fb      	bpl.n	8001f58 <_printf_i+0xe8>
 8001f60:	881d      	ldrh	r5, [r3, #0]
 8001f62:	4854      	ldr	r0, [pc, #336]	; (80020b4 <_printf_i+0x244>)
 8001f64:	2f6f      	cmp	r7, #111	; 0x6f
 8001f66:	bf0c      	ite	eq
 8001f68:	2308      	moveq	r3, #8
 8001f6a:	230a      	movne	r3, #10
 8001f6c:	2100      	movs	r1, #0
 8001f6e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001f72:	6866      	ldr	r6, [r4, #4]
 8001f74:	60a6      	str	r6, [r4, #8]
 8001f76:	2e00      	cmp	r6, #0
 8001f78:	bfa2      	ittt	ge
 8001f7a:	6821      	ldrge	r1, [r4, #0]
 8001f7c:	f021 0104 	bicge.w	r1, r1, #4
 8001f80:	6021      	strge	r1, [r4, #0]
 8001f82:	b90d      	cbnz	r5, 8001f88 <_printf_i+0x118>
 8001f84:	2e00      	cmp	r6, #0
 8001f86:	d04d      	beq.n	8002024 <_printf_i+0x1b4>
 8001f88:	4616      	mov	r6, r2
 8001f8a:	fbb5 f1f3 	udiv	r1, r5, r3
 8001f8e:	fb03 5711 	mls	r7, r3, r1, r5
 8001f92:	5dc7      	ldrb	r7, [r0, r7]
 8001f94:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001f98:	462f      	mov	r7, r5
 8001f9a:	42bb      	cmp	r3, r7
 8001f9c:	460d      	mov	r5, r1
 8001f9e:	d9f4      	bls.n	8001f8a <_printf_i+0x11a>
 8001fa0:	2b08      	cmp	r3, #8
 8001fa2:	d10b      	bne.n	8001fbc <_printf_i+0x14c>
 8001fa4:	6823      	ldr	r3, [r4, #0]
 8001fa6:	07df      	lsls	r7, r3, #31
 8001fa8:	d508      	bpl.n	8001fbc <_printf_i+0x14c>
 8001faa:	6923      	ldr	r3, [r4, #16]
 8001fac:	6861      	ldr	r1, [r4, #4]
 8001fae:	4299      	cmp	r1, r3
 8001fb0:	bfde      	ittt	le
 8001fb2:	2330      	movle	r3, #48	; 0x30
 8001fb4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001fb8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001fbc:	1b92      	subs	r2, r2, r6
 8001fbe:	6122      	str	r2, [r4, #16]
 8001fc0:	f8cd a000 	str.w	sl, [sp]
 8001fc4:	464b      	mov	r3, r9
 8001fc6:	aa03      	add	r2, sp, #12
 8001fc8:	4621      	mov	r1, r4
 8001fca:	4640      	mov	r0, r8
 8001fcc:	f7ff fee2 	bl	8001d94 <_printf_common>
 8001fd0:	3001      	adds	r0, #1
 8001fd2:	d14c      	bne.n	800206e <_printf_i+0x1fe>
 8001fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd8:	b004      	add	sp, #16
 8001fda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001fde:	4835      	ldr	r0, [pc, #212]	; (80020b4 <_printf_i+0x244>)
 8001fe0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001fe4:	6823      	ldr	r3, [r4, #0]
 8001fe6:	680e      	ldr	r6, [r1, #0]
 8001fe8:	061f      	lsls	r7, r3, #24
 8001fea:	f856 5b04 	ldr.w	r5, [r6], #4
 8001fee:	600e      	str	r6, [r1, #0]
 8001ff0:	d514      	bpl.n	800201c <_printf_i+0x1ac>
 8001ff2:	07d9      	lsls	r1, r3, #31
 8001ff4:	bf44      	itt	mi
 8001ff6:	f043 0320 	orrmi.w	r3, r3, #32
 8001ffa:	6023      	strmi	r3, [r4, #0]
 8001ffc:	b91d      	cbnz	r5, 8002006 <_printf_i+0x196>
 8001ffe:	6823      	ldr	r3, [r4, #0]
 8002000:	f023 0320 	bic.w	r3, r3, #32
 8002004:	6023      	str	r3, [r4, #0]
 8002006:	2310      	movs	r3, #16
 8002008:	e7b0      	b.n	8001f6c <_printf_i+0xfc>
 800200a:	6823      	ldr	r3, [r4, #0]
 800200c:	f043 0320 	orr.w	r3, r3, #32
 8002010:	6023      	str	r3, [r4, #0]
 8002012:	2378      	movs	r3, #120	; 0x78
 8002014:	4828      	ldr	r0, [pc, #160]	; (80020b8 <_printf_i+0x248>)
 8002016:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800201a:	e7e3      	b.n	8001fe4 <_printf_i+0x174>
 800201c:	065e      	lsls	r6, r3, #25
 800201e:	bf48      	it	mi
 8002020:	b2ad      	uxthmi	r5, r5
 8002022:	e7e6      	b.n	8001ff2 <_printf_i+0x182>
 8002024:	4616      	mov	r6, r2
 8002026:	e7bb      	b.n	8001fa0 <_printf_i+0x130>
 8002028:	680b      	ldr	r3, [r1, #0]
 800202a:	6826      	ldr	r6, [r4, #0]
 800202c:	6960      	ldr	r0, [r4, #20]
 800202e:	1d1d      	adds	r5, r3, #4
 8002030:	600d      	str	r5, [r1, #0]
 8002032:	0635      	lsls	r5, r6, #24
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	d501      	bpl.n	800203c <_printf_i+0x1cc>
 8002038:	6018      	str	r0, [r3, #0]
 800203a:	e002      	b.n	8002042 <_printf_i+0x1d2>
 800203c:	0671      	lsls	r1, r6, #25
 800203e:	d5fb      	bpl.n	8002038 <_printf_i+0x1c8>
 8002040:	8018      	strh	r0, [r3, #0]
 8002042:	2300      	movs	r3, #0
 8002044:	6123      	str	r3, [r4, #16]
 8002046:	4616      	mov	r6, r2
 8002048:	e7ba      	b.n	8001fc0 <_printf_i+0x150>
 800204a:	680b      	ldr	r3, [r1, #0]
 800204c:	1d1a      	adds	r2, r3, #4
 800204e:	600a      	str	r2, [r1, #0]
 8002050:	681e      	ldr	r6, [r3, #0]
 8002052:	6862      	ldr	r2, [r4, #4]
 8002054:	2100      	movs	r1, #0
 8002056:	4630      	mov	r0, r6
 8002058:	f7fe f8ca 	bl	80001f0 <memchr>
 800205c:	b108      	cbz	r0, 8002062 <_printf_i+0x1f2>
 800205e:	1b80      	subs	r0, r0, r6
 8002060:	6060      	str	r0, [r4, #4]
 8002062:	6863      	ldr	r3, [r4, #4]
 8002064:	6123      	str	r3, [r4, #16]
 8002066:	2300      	movs	r3, #0
 8002068:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800206c:	e7a8      	b.n	8001fc0 <_printf_i+0x150>
 800206e:	6923      	ldr	r3, [r4, #16]
 8002070:	4632      	mov	r2, r6
 8002072:	4649      	mov	r1, r9
 8002074:	4640      	mov	r0, r8
 8002076:	47d0      	blx	sl
 8002078:	3001      	adds	r0, #1
 800207a:	d0ab      	beq.n	8001fd4 <_printf_i+0x164>
 800207c:	6823      	ldr	r3, [r4, #0]
 800207e:	079b      	lsls	r3, r3, #30
 8002080:	d413      	bmi.n	80020aa <_printf_i+0x23a>
 8002082:	68e0      	ldr	r0, [r4, #12]
 8002084:	9b03      	ldr	r3, [sp, #12]
 8002086:	4298      	cmp	r0, r3
 8002088:	bfb8      	it	lt
 800208a:	4618      	movlt	r0, r3
 800208c:	e7a4      	b.n	8001fd8 <_printf_i+0x168>
 800208e:	2301      	movs	r3, #1
 8002090:	4632      	mov	r2, r6
 8002092:	4649      	mov	r1, r9
 8002094:	4640      	mov	r0, r8
 8002096:	47d0      	blx	sl
 8002098:	3001      	adds	r0, #1
 800209a:	d09b      	beq.n	8001fd4 <_printf_i+0x164>
 800209c:	3501      	adds	r5, #1
 800209e:	68e3      	ldr	r3, [r4, #12]
 80020a0:	9903      	ldr	r1, [sp, #12]
 80020a2:	1a5b      	subs	r3, r3, r1
 80020a4:	42ab      	cmp	r3, r5
 80020a6:	dcf2      	bgt.n	800208e <_printf_i+0x21e>
 80020a8:	e7eb      	b.n	8002082 <_printf_i+0x212>
 80020aa:	2500      	movs	r5, #0
 80020ac:	f104 0619 	add.w	r6, r4, #25
 80020b0:	e7f5      	b.n	800209e <_printf_i+0x22e>
 80020b2:	bf00      	nop
 80020b4:	080041fe 	.word	0x080041fe
 80020b8:	0800420f 	.word	0x0800420f

080020bc <iprintf>:
 80020bc:	b40f      	push	{r0, r1, r2, r3}
 80020be:	4b0a      	ldr	r3, [pc, #40]	; (80020e8 <iprintf+0x2c>)
 80020c0:	b513      	push	{r0, r1, r4, lr}
 80020c2:	681c      	ldr	r4, [r3, #0]
 80020c4:	b124      	cbz	r4, 80020d0 <iprintf+0x14>
 80020c6:	69a3      	ldr	r3, [r4, #24]
 80020c8:	b913      	cbnz	r3, 80020d0 <iprintf+0x14>
 80020ca:	4620      	mov	r0, r4
 80020cc:	f000 fee0 	bl	8002e90 <__sinit>
 80020d0:	ab05      	add	r3, sp, #20
 80020d2:	9a04      	ldr	r2, [sp, #16]
 80020d4:	68a1      	ldr	r1, [r4, #8]
 80020d6:	9301      	str	r3, [sp, #4]
 80020d8:	4620      	mov	r0, r4
 80020da:	f001 fbf7 	bl	80038cc <_vfiprintf_r>
 80020de:	b002      	add	sp, #8
 80020e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020e4:	b004      	add	sp, #16
 80020e6:	4770      	bx	lr
 80020e8:	20000040 	.word	0x20000040

080020ec <quorem>:
 80020ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020f0:	6903      	ldr	r3, [r0, #16]
 80020f2:	690c      	ldr	r4, [r1, #16]
 80020f4:	42a3      	cmp	r3, r4
 80020f6:	4607      	mov	r7, r0
 80020f8:	f2c0 8081 	blt.w	80021fe <quorem+0x112>
 80020fc:	3c01      	subs	r4, #1
 80020fe:	f101 0814 	add.w	r8, r1, #20
 8002102:	f100 0514 	add.w	r5, r0, #20
 8002106:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800210a:	9301      	str	r3, [sp, #4]
 800210c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002110:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002114:	3301      	adds	r3, #1
 8002116:	429a      	cmp	r2, r3
 8002118:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800211c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002120:	fbb2 f6f3 	udiv	r6, r2, r3
 8002124:	d331      	bcc.n	800218a <quorem+0x9e>
 8002126:	f04f 0e00 	mov.w	lr, #0
 800212a:	4640      	mov	r0, r8
 800212c:	46ac      	mov	ip, r5
 800212e:	46f2      	mov	sl, lr
 8002130:	f850 2b04 	ldr.w	r2, [r0], #4
 8002134:	b293      	uxth	r3, r2
 8002136:	fb06 e303 	mla	r3, r6, r3, lr
 800213a:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800213e:	b29b      	uxth	r3, r3
 8002140:	ebaa 0303 	sub.w	r3, sl, r3
 8002144:	0c12      	lsrs	r2, r2, #16
 8002146:	f8dc a000 	ldr.w	sl, [ip]
 800214a:	fb06 e202 	mla	r2, r6, r2, lr
 800214e:	fa13 f38a 	uxtah	r3, r3, sl
 8002152:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002156:	fa1f fa82 	uxth.w	sl, r2
 800215a:	f8dc 2000 	ldr.w	r2, [ip]
 800215e:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8002162:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002166:	b29b      	uxth	r3, r3
 8002168:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800216c:	4581      	cmp	r9, r0
 800216e:	f84c 3b04 	str.w	r3, [ip], #4
 8002172:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002176:	d2db      	bcs.n	8002130 <quorem+0x44>
 8002178:	f855 300b 	ldr.w	r3, [r5, fp]
 800217c:	b92b      	cbnz	r3, 800218a <quorem+0x9e>
 800217e:	9b01      	ldr	r3, [sp, #4]
 8002180:	3b04      	subs	r3, #4
 8002182:	429d      	cmp	r5, r3
 8002184:	461a      	mov	r2, r3
 8002186:	d32e      	bcc.n	80021e6 <quorem+0xfa>
 8002188:	613c      	str	r4, [r7, #16]
 800218a:	4638      	mov	r0, r7
 800218c:	f001 f9ba 	bl	8003504 <__mcmp>
 8002190:	2800      	cmp	r0, #0
 8002192:	db24      	blt.n	80021de <quorem+0xf2>
 8002194:	3601      	adds	r6, #1
 8002196:	4628      	mov	r0, r5
 8002198:	f04f 0c00 	mov.w	ip, #0
 800219c:	f858 2b04 	ldr.w	r2, [r8], #4
 80021a0:	f8d0 e000 	ldr.w	lr, [r0]
 80021a4:	b293      	uxth	r3, r2
 80021a6:	ebac 0303 	sub.w	r3, ip, r3
 80021aa:	0c12      	lsrs	r2, r2, #16
 80021ac:	fa13 f38e 	uxtah	r3, r3, lr
 80021b0:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80021b4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80021b8:	b29b      	uxth	r3, r3
 80021ba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021be:	45c1      	cmp	r9, r8
 80021c0:	f840 3b04 	str.w	r3, [r0], #4
 80021c4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80021c8:	d2e8      	bcs.n	800219c <quorem+0xb0>
 80021ca:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021ce:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80021d2:	b922      	cbnz	r2, 80021de <quorem+0xf2>
 80021d4:	3b04      	subs	r3, #4
 80021d6:	429d      	cmp	r5, r3
 80021d8:	461a      	mov	r2, r3
 80021da:	d30a      	bcc.n	80021f2 <quorem+0x106>
 80021dc:	613c      	str	r4, [r7, #16]
 80021de:	4630      	mov	r0, r6
 80021e0:	b003      	add	sp, #12
 80021e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021e6:	6812      	ldr	r2, [r2, #0]
 80021e8:	3b04      	subs	r3, #4
 80021ea:	2a00      	cmp	r2, #0
 80021ec:	d1cc      	bne.n	8002188 <quorem+0x9c>
 80021ee:	3c01      	subs	r4, #1
 80021f0:	e7c7      	b.n	8002182 <quorem+0x96>
 80021f2:	6812      	ldr	r2, [r2, #0]
 80021f4:	3b04      	subs	r3, #4
 80021f6:	2a00      	cmp	r2, #0
 80021f8:	d1f0      	bne.n	80021dc <quorem+0xf0>
 80021fa:	3c01      	subs	r4, #1
 80021fc:	e7eb      	b.n	80021d6 <quorem+0xea>
 80021fe:	2000      	movs	r0, #0
 8002200:	e7ee      	b.n	80021e0 <quorem+0xf4>
 8002202:	0000      	movs	r0, r0
 8002204:	0000      	movs	r0, r0
	...

08002208 <_dtoa_r>:
 8002208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800220c:	ed2d 8b02 	vpush	{d8}
 8002210:	ec57 6b10 	vmov	r6, r7, d0
 8002214:	b095      	sub	sp, #84	; 0x54
 8002216:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002218:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800221c:	9105      	str	r1, [sp, #20]
 800221e:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002222:	4604      	mov	r4, r0
 8002224:	9209      	str	r2, [sp, #36]	; 0x24
 8002226:	930f      	str	r3, [sp, #60]	; 0x3c
 8002228:	b975      	cbnz	r5, 8002248 <_dtoa_r+0x40>
 800222a:	2010      	movs	r0, #16
 800222c:	f000 fed6 	bl	8002fdc <malloc>
 8002230:	4602      	mov	r2, r0
 8002232:	6260      	str	r0, [r4, #36]	; 0x24
 8002234:	b920      	cbnz	r0, 8002240 <_dtoa_r+0x38>
 8002236:	4bb2      	ldr	r3, [pc, #712]	; (8002500 <_dtoa_r+0x2f8>)
 8002238:	21ea      	movs	r1, #234	; 0xea
 800223a:	48b2      	ldr	r0, [pc, #712]	; (8002504 <_dtoa_r+0x2fc>)
 800223c:	f001 fd9c 	bl	8003d78 <__assert_func>
 8002240:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002244:	6005      	str	r5, [r0, #0]
 8002246:	60c5      	str	r5, [r0, #12]
 8002248:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800224a:	6819      	ldr	r1, [r3, #0]
 800224c:	b151      	cbz	r1, 8002264 <_dtoa_r+0x5c>
 800224e:	685a      	ldr	r2, [r3, #4]
 8002250:	604a      	str	r2, [r1, #4]
 8002252:	2301      	movs	r3, #1
 8002254:	4093      	lsls	r3, r2
 8002256:	608b      	str	r3, [r1, #8]
 8002258:	4620      	mov	r0, r4
 800225a:	f000 ff15 	bl	8003088 <_Bfree>
 800225e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002260:	2200      	movs	r2, #0
 8002262:	601a      	str	r2, [r3, #0]
 8002264:	1e3b      	subs	r3, r7, #0
 8002266:	bfb9      	ittee	lt
 8002268:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800226c:	9303      	strlt	r3, [sp, #12]
 800226e:	2300      	movge	r3, #0
 8002270:	f8c8 3000 	strge.w	r3, [r8]
 8002274:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8002278:	4ba3      	ldr	r3, [pc, #652]	; (8002508 <_dtoa_r+0x300>)
 800227a:	bfbc      	itt	lt
 800227c:	2201      	movlt	r2, #1
 800227e:	f8c8 2000 	strlt.w	r2, [r8]
 8002282:	ea33 0309 	bics.w	r3, r3, r9
 8002286:	d11b      	bne.n	80022c0 <_dtoa_r+0xb8>
 8002288:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800228a:	f242 730f 	movw	r3, #9999	; 0x270f
 800228e:	6013      	str	r3, [r2, #0]
 8002290:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002294:	4333      	orrs	r3, r6
 8002296:	f000 857a 	beq.w	8002d8e <_dtoa_r+0xb86>
 800229a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800229c:	b963      	cbnz	r3, 80022b8 <_dtoa_r+0xb0>
 800229e:	4b9b      	ldr	r3, [pc, #620]	; (800250c <_dtoa_r+0x304>)
 80022a0:	e024      	b.n	80022ec <_dtoa_r+0xe4>
 80022a2:	4b9b      	ldr	r3, [pc, #620]	; (8002510 <_dtoa_r+0x308>)
 80022a4:	9300      	str	r3, [sp, #0]
 80022a6:	3308      	adds	r3, #8
 80022a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80022aa:	6013      	str	r3, [r2, #0]
 80022ac:	9800      	ldr	r0, [sp, #0]
 80022ae:	b015      	add	sp, #84	; 0x54
 80022b0:	ecbd 8b02 	vpop	{d8}
 80022b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022b8:	4b94      	ldr	r3, [pc, #592]	; (800250c <_dtoa_r+0x304>)
 80022ba:	9300      	str	r3, [sp, #0]
 80022bc:	3303      	adds	r3, #3
 80022be:	e7f3      	b.n	80022a8 <_dtoa_r+0xa0>
 80022c0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80022c4:	2200      	movs	r2, #0
 80022c6:	ec51 0b17 	vmov	r0, r1, d7
 80022ca:	2300      	movs	r3, #0
 80022cc:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 80022d0:	f7fe fc02 	bl	8000ad8 <__aeabi_dcmpeq>
 80022d4:	4680      	mov	r8, r0
 80022d6:	b158      	cbz	r0, 80022f0 <_dtoa_r+0xe8>
 80022d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80022da:	2301      	movs	r3, #1
 80022dc:	6013      	str	r3, [r2, #0]
 80022de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	f000 8551 	beq.w	8002d88 <_dtoa_r+0xb80>
 80022e6:	488b      	ldr	r0, [pc, #556]	; (8002514 <_dtoa_r+0x30c>)
 80022e8:	6018      	str	r0, [r3, #0]
 80022ea:	1e43      	subs	r3, r0, #1
 80022ec:	9300      	str	r3, [sp, #0]
 80022ee:	e7dd      	b.n	80022ac <_dtoa_r+0xa4>
 80022f0:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 80022f4:	aa12      	add	r2, sp, #72	; 0x48
 80022f6:	a913      	add	r1, sp, #76	; 0x4c
 80022f8:	4620      	mov	r0, r4
 80022fa:	f001 f9a7 	bl	800364c <__d2b>
 80022fe:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8002302:	4683      	mov	fp, r0
 8002304:	2d00      	cmp	r5, #0
 8002306:	d07c      	beq.n	8002402 <_dtoa_r+0x1fa>
 8002308:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800230a:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800230e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002312:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 8002316:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800231a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800231e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002322:	4b7d      	ldr	r3, [pc, #500]	; (8002518 <_dtoa_r+0x310>)
 8002324:	2200      	movs	r2, #0
 8002326:	4630      	mov	r0, r6
 8002328:	4639      	mov	r1, r7
 800232a:	f7fd ffb5 	bl	8000298 <__aeabi_dsub>
 800232e:	a36e      	add	r3, pc, #440	; (adr r3, 80024e8 <_dtoa_r+0x2e0>)
 8002330:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002334:	f7fe f968 	bl	8000608 <__aeabi_dmul>
 8002338:	a36d      	add	r3, pc, #436	; (adr r3, 80024f0 <_dtoa_r+0x2e8>)
 800233a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800233e:	f7fd ffad 	bl	800029c <__adddf3>
 8002342:	4606      	mov	r6, r0
 8002344:	4628      	mov	r0, r5
 8002346:	460f      	mov	r7, r1
 8002348:	f7fe f8f4 	bl	8000534 <__aeabi_i2d>
 800234c:	a36a      	add	r3, pc, #424	; (adr r3, 80024f8 <_dtoa_r+0x2f0>)
 800234e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002352:	f7fe f959 	bl	8000608 <__aeabi_dmul>
 8002356:	4602      	mov	r2, r0
 8002358:	460b      	mov	r3, r1
 800235a:	4630      	mov	r0, r6
 800235c:	4639      	mov	r1, r7
 800235e:	f7fd ff9d 	bl	800029c <__adddf3>
 8002362:	4606      	mov	r6, r0
 8002364:	460f      	mov	r7, r1
 8002366:	f7fe fbff 	bl	8000b68 <__aeabi_d2iz>
 800236a:	2200      	movs	r2, #0
 800236c:	4682      	mov	sl, r0
 800236e:	2300      	movs	r3, #0
 8002370:	4630      	mov	r0, r6
 8002372:	4639      	mov	r1, r7
 8002374:	f7fe fbba 	bl	8000aec <__aeabi_dcmplt>
 8002378:	b148      	cbz	r0, 800238e <_dtoa_r+0x186>
 800237a:	4650      	mov	r0, sl
 800237c:	f7fe f8da 	bl	8000534 <__aeabi_i2d>
 8002380:	4632      	mov	r2, r6
 8002382:	463b      	mov	r3, r7
 8002384:	f7fe fba8 	bl	8000ad8 <__aeabi_dcmpeq>
 8002388:	b908      	cbnz	r0, 800238e <_dtoa_r+0x186>
 800238a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800238e:	f1ba 0f16 	cmp.w	sl, #22
 8002392:	d854      	bhi.n	800243e <_dtoa_r+0x236>
 8002394:	4b61      	ldr	r3, [pc, #388]	; (800251c <_dtoa_r+0x314>)
 8002396:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800239a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800239e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80023a2:	f7fe fba3 	bl	8000aec <__aeabi_dcmplt>
 80023a6:	2800      	cmp	r0, #0
 80023a8:	d04b      	beq.n	8002442 <_dtoa_r+0x23a>
 80023aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80023ae:	2300      	movs	r3, #0
 80023b0:	930e      	str	r3, [sp, #56]	; 0x38
 80023b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023b4:	1b5d      	subs	r5, r3, r5
 80023b6:	1e6b      	subs	r3, r5, #1
 80023b8:	9304      	str	r3, [sp, #16]
 80023ba:	bf43      	ittte	mi
 80023bc:	2300      	movmi	r3, #0
 80023be:	f1c5 0801 	rsbmi	r8, r5, #1
 80023c2:	9304      	strmi	r3, [sp, #16]
 80023c4:	f04f 0800 	movpl.w	r8, #0
 80023c8:	f1ba 0f00 	cmp.w	sl, #0
 80023cc:	db3b      	blt.n	8002446 <_dtoa_r+0x23e>
 80023ce:	9b04      	ldr	r3, [sp, #16]
 80023d0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80023d4:	4453      	add	r3, sl
 80023d6:	9304      	str	r3, [sp, #16]
 80023d8:	2300      	movs	r3, #0
 80023da:	9306      	str	r3, [sp, #24]
 80023dc:	9b05      	ldr	r3, [sp, #20]
 80023de:	2b09      	cmp	r3, #9
 80023e0:	d869      	bhi.n	80024b6 <_dtoa_r+0x2ae>
 80023e2:	2b05      	cmp	r3, #5
 80023e4:	bfc4      	itt	gt
 80023e6:	3b04      	subgt	r3, #4
 80023e8:	9305      	strgt	r3, [sp, #20]
 80023ea:	9b05      	ldr	r3, [sp, #20]
 80023ec:	f1a3 0302 	sub.w	r3, r3, #2
 80023f0:	bfcc      	ite	gt
 80023f2:	2500      	movgt	r5, #0
 80023f4:	2501      	movle	r5, #1
 80023f6:	2b03      	cmp	r3, #3
 80023f8:	d869      	bhi.n	80024ce <_dtoa_r+0x2c6>
 80023fa:	e8df f003 	tbb	[pc, r3]
 80023fe:	4e2c      	.short	0x4e2c
 8002400:	5a4c      	.short	0x5a4c
 8002402:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8002406:	441d      	add	r5, r3
 8002408:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800240c:	2b20      	cmp	r3, #32
 800240e:	bfc1      	itttt	gt
 8002410:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002414:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8002418:	fa09 f303 	lslgt.w	r3, r9, r3
 800241c:	fa26 f000 	lsrgt.w	r0, r6, r0
 8002420:	bfda      	itte	le
 8002422:	f1c3 0320 	rsble	r3, r3, #32
 8002426:	fa06 f003 	lslle.w	r0, r6, r3
 800242a:	4318      	orrgt	r0, r3
 800242c:	f7fe f872 	bl	8000514 <__aeabi_ui2d>
 8002430:	2301      	movs	r3, #1
 8002432:	4606      	mov	r6, r0
 8002434:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8002438:	3d01      	subs	r5, #1
 800243a:	9310      	str	r3, [sp, #64]	; 0x40
 800243c:	e771      	b.n	8002322 <_dtoa_r+0x11a>
 800243e:	2301      	movs	r3, #1
 8002440:	e7b6      	b.n	80023b0 <_dtoa_r+0x1a8>
 8002442:	900e      	str	r0, [sp, #56]	; 0x38
 8002444:	e7b5      	b.n	80023b2 <_dtoa_r+0x1aa>
 8002446:	f1ca 0300 	rsb	r3, sl, #0
 800244a:	9306      	str	r3, [sp, #24]
 800244c:	2300      	movs	r3, #0
 800244e:	eba8 080a 	sub.w	r8, r8, sl
 8002452:	930d      	str	r3, [sp, #52]	; 0x34
 8002454:	e7c2      	b.n	80023dc <_dtoa_r+0x1d4>
 8002456:	2300      	movs	r3, #0
 8002458:	9308      	str	r3, [sp, #32]
 800245a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800245c:	2b00      	cmp	r3, #0
 800245e:	dc39      	bgt.n	80024d4 <_dtoa_r+0x2cc>
 8002460:	f04f 0901 	mov.w	r9, #1
 8002464:	f8cd 9004 	str.w	r9, [sp, #4]
 8002468:	464b      	mov	r3, r9
 800246a:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800246e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8002470:	2200      	movs	r2, #0
 8002472:	6042      	str	r2, [r0, #4]
 8002474:	2204      	movs	r2, #4
 8002476:	f102 0614 	add.w	r6, r2, #20
 800247a:	429e      	cmp	r6, r3
 800247c:	6841      	ldr	r1, [r0, #4]
 800247e:	d92f      	bls.n	80024e0 <_dtoa_r+0x2d8>
 8002480:	4620      	mov	r0, r4
 8002482:	f000 fdc1 	bl	8003008 <_Balloc>
 8002486:	9000      	str	r0, [sp, #0]
 8002488:	2800      	cmp	r0, #0
 800248a:	d14b      	bne.n	8002524 <_dtoa_r+0x31c>
 800248c:	4b24      	ldr	r3, [pc, #144]	; (8002520 <_dtoa_r+0x318>)
 800248e:	4602      	mov	r2, r0
 8002490:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002494:	e6d1      	b.n	800223a <_dtoa_r+0x32>
 8002496:	2301      	movs	r3, #1
 8002498:	e7de      	b.n	8002458 <_dtoa_r+0x250>
 800249a:	2300      	movs	r3, #0
 800249c:	9308      	str	r3, [sp, #32]
 800249e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80024a0:	eb0a 0903 	add.w	r9, sl, r3
 80024a4:	f109 0301 	add.w	r3, r9, #1
 80024a8:	2b01      	cmp	r3, #1
 80024aa:	9301      	str	r3, [sp, #4]
 80024ac:	bfb8      	it	lt
 80024ae:	2301      	movlt	r3, #1
 80024b0:	e7dd      	b.n	800246e <_dtoa_r+0x266>
 80024b2:	2301      	movs	r3, #1
 80024b4:	e7f2      	b.n	800249c <_dtoa_r+0x294>
 80024b6:	2501      	movs	r5, #1
 80024b8:	2300      	movs	r3, #0
 80024ba:	9305      	str	r3, [sp, #20]
 80024bc:	9508      	str	r5, [sp, #32]
 80024be:	f04f 39ff 	mov.w	r9, #4294967295
 80024c2:	2200      	movs	r2, #0
 80024c4:	f8cd 9004 	str.w	r9, [sp, #4]
 80024c8:	2312      	movs	r3, #18
 80024ca:	9209      	str	r2, [sp, #36]	; 0x24
 80024cc:	e7cf      	b.n	800246e <_dtoa_r+0x266>
 80024ce:	2301      	movs	r3, #1
 80024d0:	9308      	str	r3, [sp, #32]
 80024d2:	e7f4      	b.n	80024be <_dtoa_r+0x2b6>
 80024d4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80024d8:	f8cd 9004 	str.w	r9, [sp, #4]
 80024dc:	464b      	mov	r3, r9
 80024de:	e7c6      	b.n	800246e <_dtoa_r+0x266>
 80024e0:	3101      	adds	r1, #1
 80024e2:	6041      	str	r1, [r0, #4]
 80024e4:	0052      	lsls	r2, r2, #1
 80024e6:	e7c6      	b.n	8002476 <_dtoa_r+0x26e>
 80024e8:	636f4361 	.word	0x636f4361
 80024ec:	3fd287a7 	.word	0x3fd287a7
 80024f0:	8b60c8b3 	.word	0x8b60c8b3
 80024f4:	3fc68a28 	.word	0x3fc68a28
 80024f8:	509f79fb 	.word	0x509f79fb
 80024fc:	3fd34413 	.word	0x3fd34413
 8002500:	0800422d 	.word	0x0800422d
 8002504:	08004244 	.word	0x08004244
 8002508:	7ff00000 	.word	0x7ff00000
 800250c:	08004229 	.word	0x08004229
 8002510:	08004220 	.word	0x08004220
 8002514:	080041fd 	.word	0x080041fd
 8002518:	3ff80000 	.word	0x3ff80000
 800251c:	080043a0 	.word	0x080043a0
 8002520:	080042a3 	.word	0x080042a3
 8002524:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002526:	9a00      	ldr	r2, [sp, #0]
 8002528:	601a      	str	r2, [r3, #0]
 800252a:	9b01      	ldr	r3, [sp, #4]
 800252c:	2b0e      	cmp	r3, #14
 800252e:	f200 80ad 	bhi.w	800268c <_dtoa_r+0x484>
 8002532:	2d00      	cmp	r5, #0
 8002534:	f000 80aa 	beq.w	800268c <_dtoa_r+0x484>
 8002538:	f1ba 0f00 	cmp.w	sl, #0
 800253c:	dd36      	ble.n	80025ac <_dtoa_r+0x3a4>
 800253e:	4ac3      	ldr	r2, [pc, #780]	; (800284c <_dtoa_r+0x644>)
 8002540:	f00a 030f 	and.w	r3, sl, #15
 8002544:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002548:	ed93 7b00 	vldr	d7, [r3]
 800254c:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8002550:	ea4f 172a 	mov.w	r7, sl, asr #4
 8002554:	eeb0 8a47 	vmov.f32	s16, s14
 8002558:	eef0 8a67 	vmov.f32	s17, s15
 800255c:	d016      	beq.n	800258c <_dtoa_r+0x384>
 800255e:	4bbc      	ldr	r3, [pc, #752]	; (8002850 <_dtoa_r+0x648>)
 8002560:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002564:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002568:	f7fe f978 	bl	800085c <__aeabi_ddiv>
 800256c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002570:	f007 070f 	and.w	r7, r7, #15
 8002574:	2503      	movs	r5, #3
 8002576:	4eb6      	ldr	r6, [pc, #728]	; (8002850 <_dtoa_r+0x648>)
 8002578:	b957      	cbnz	r7, 8002590 <_dtoa_r+0x388>
 800257a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800257e:	ec53 2b18 	vmov	r2, r3, d8
 8002582:	f7fe f96b 	bl	800085c <__aeabi_ddiv>
 8002586:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800258a:	e029      	b.n	80025e0 <_dtoa_r+0x3d8>
 800258c:	2502      	movs	r5, #2
 800258e:	e7f2      	b.n	8002576 <_dtoa_r+0x36e>
 8002590:	07f9      	lsls	r1, r7, #31
 8002592:	d508      	bpl.n	80025a6 <_dtoa_r+0x39e>
 8002594:	ec51 0b18 	vmov	r0, r1, d8
 8002598:	e9d6 2300 	ldrd	r2, r3, [r6]
 800259c:	f7fe f834 	bl	8000608 <__aeabi_dmul>
 80025a0:	ec41 0b18 	vmov	d8, r0, r1
 80025a4:	3501      	adds	r5, #1
 80025a6:	107f      	asrs	r7, r7, #1
 80025a8:	3608      	adds	r6, #8
 80025aa:	e7e5      	b.n	8002578 <_dtoa_r+0x370>
 80025ac:	f000 80a6 	beq.w	80026fc <_dtoa_r+0x4f4>
 80025b0:	f1ca 0600 	rsb	r6, sl, #0
 80025b4:	4ba5      	ldr	r3, [pc, #660]	; (800284c <_dtoa_r+0x644>)
 80025b6:	4fa6      	ldr	r7, [pc, #664]	; (8002850 <_dtoa_r+0x648>)
 80025b8:	f006 020f 	and.w	r2, r6, #15
 80025bc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025c4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80025c8:	f7fe f81e 	bl	8000608 <__aeabi_dmul>
 80025cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025d0:	1136      	asrs	r6, r6, #4
 80025d2:	2300      	movs	r3, #0
 80025d4:	2502      	movs	r5, #2
 80025d6:	2e00      	cmp	r6, #0
 80025d8:	f040 8085 	bne.w	80026e6 <_dtoa_r+0x4de>
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d1d2      	bne.n	8002586 <_dtoa_r+0x37e>
 80025e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	f000 808c 	beq.w	8002700 <_dtoa_r+0x4f8>
 80025e8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80025ec:	4b99      	ldr	r3, [pc, #612]	; (8002854 <_dtoa_r+0x64c>)
 80025ee:	2200      	movs	r2, #0
 80025f0:	4630      	mov	r0, r6
 80025f2:	4639      	mov	r1, r7
 80025f4:	f7fe fa7a 	bl	8000aec <__aeabi_dcmplt>
 80025f8:	2800      	cmp	r0, #0
 80025fa:	f000 8081 	beq.w	8002700 <_dtoa_r+0x4f8>
 80025fe:	9b01      	ldr	r3, [sp, #4]
 8002600:	2b00      	cmp	r3, #0
 8002602:	d07d      	beq.n	8002700 <_dtoa_r+0x4f8>
 8002604:	f1b9 0f00 	cmp.w	r9, #0
 8002608:	dd3c      	ble.n	8002684 <_dtoa_r+0x47c>
 800260a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800260e:	9307      	str	r3, [sp, #28]
 8002610:	2200      	movs	r2, #0
 8002612:	4b91      	ldr	r3, [pc, #580]	; (8002858 <_dtoa_r+0x650>)
 8002614:	4630      	mov	r0, r6
 8002616:	4639      	mov	r1, r7
 8002618:	f7fd fff6 	bl	8000608 <__aeabi_dmul>
 800261c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002620:	3501      	adds	r5, #1
 8002622:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8002626:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800262a:	4628      	mov	r0, r5
 800262c:	f7fd ff82 	bl	8000534 <__aeabi_i2d>
 8002630:	4632      	mov	r2, r6
 8002632:	463b      	mov	r3, r7
 8002634:	f7fd ffe8 	bl	8000608 <__aeabi_dmul>
 8002638:	4b88      	ldr	r3, [pc, #544]	; (800285c <_dtoa_r+0x654>)
 800263a:	2200      	movs	r2, #0
 800263c:	f7fd fe2e 	bl	800029c <__adddf3>
 8002640:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002644:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002648:	9303      	str	r3, [sp, #12]
 800264a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800264c:	2b00      	cmp	r3, #0
 800264e:	d15c      	bne.n	800270a <_dtoa_r+0x502>
 8002650:	4b83      	ldr	r3, [pc, #524]	; (8002860 <_dtoa_r+0x658>)
 8002652:	2200      	movs	r2, #0
 8002654:	4630      	mov	r0, r6
 8002656:	4639      	mov	r1, r7
 8002658:	f7fd fe1e 	bl	8000298 <__aeabi_dsub>
 800265c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002660:	4606      	mov	r6, r0
 8002662:	460f      	mov	r7, r1
 8002664:	f7fe fa60 	bl	8000b28 <__aeabi_dcmpgt>
 8002668:	2800      	cmp	r0, #0
 800266a:	f040 8296 	bne.w	8002b9a <_dtoa_r+0x992>
 800266e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002672:	4630      	mov	r0, r6
 8002674:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002678:	4639      	mov	r1, r7
 800267a:	f7fe fa37 	bl	8000aec <__aeabi_dcmplt>
 800267e:	2800      	cmp	r0, #0
 8002680:	f040 8288 	bne.w	8002b94 <_dtoa_r+0x98c>
 8002684:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002688:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800268c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800268e:	2b00      	cmp	r3, #0
 8002690:	f2c0 8158 	blt.w	8002944 <_dtoa_r+0x73c>
 8002694:	f1ba 0f0e 	cmp.w	sl, #14
 8002698:	f300 8154 	bgt.w	8002944 <_dtoa_r+0x73c>
 800269c:	4b6b      	ldr	r3, [pc, #428]	; (800284c <_dtoa_r+0x644>)
 800269e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80026a2:	e9d3 8900 	ldrd	r8, r9, [r3]
 80026a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	f280 80e3 	bge.w	8002874 <_dtoa_r+0x66c>
 80026ae:	9b01      	ldr	r3, [sp, #4]
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	f300 80df 	bgt.w	8002874 <_dtoa_r+0x66c>
 80026b6:	f040 826d 	bne.w	8002b94 <_dtoa_r+0x98c>
 80026ba:	4b69      	ldr	r3, [pc, #420]	; (8002860 <_dtoa_r+0x658>)
 80026bc:	2200      	movs	r2, #0
 80026be:	4640      	mov	r0, r8
 80026c0:	4649      	mov	r1, r9
 80026c2:	f7fd ffa1 	bl	8000608 <__aeabi_dmul>
 80026c6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80026ca:	f7fe fa23 	bl	8000b14 <__aeabi_dcmpge>
 80026ce:	9e01      	ldr	r6, [sp, #4]
 80026d0:	4637      	mov	r7, r6
 80026d2:	2800      	cmp	r0, #0
 80026d4:	f040 8243 	bne.w	8002b5e <_dtoa_r+0x956>
 80026d8:	9d00      	ldr	r5, [sp, #0]
 80026da:	2331      	movs	r3, #49	; 0x31
 80026dc:	f805 3b01 	strb.w	r3, [r5], #1
 80026e0:	f10a 0a01 	add.w	sl, sl, #1
 80026e4:	e23f      	b.n	8002b66 <_dtoa_r+0x95e>
 80026e6:	07f2      	lsls	r2, r6, #31
 80026e8:	d505      	bpl.n	80026f6 <_dtoa_r+0x4ee>
 80026ea:	e9d7 2300 	ldrd	r2, r3, [r7]
 80026ee:	f7fd ff8b 	bl	8000608 <__aeabi_dmul>
 80026f2:	3501      	adds	r5, #1
 80026f4:	2301      	movs	r3, #1
 80026f6:	1076      	asrs	r6, r6, #1
 80026f8:	3708      	adds	r7, #8
 80026fa:	e76c      	b.n	80025d6 <_dtoa_r+0x3ce>
 80026fc:	2502      	movs	r5, #2
 80026fe:	e76f      	b.n	80025e0 <_dtoa_r+0x3d8>
 8002700:	9b01      	ldr	r3, [sp, #4]
 8002702:	f8cd a01c 	str.w	sl, [sp, #28]
 8002706:	930c      	str	r3, [sp, #48]	; 0x30
 8002708:	e78d      	b.n	8002626 <_dtoa_r+0x41e>
 800270a:	9900      	ldr	r1, [sp, #0]
 800270c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800270e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002710:	4b4e      	ldr	r3, [pc, #312]	; (800284c <_dtoa_r+0x644>)
 8002712:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002716:	4401      	add	r1, r0
 8002718:	9102      	str	r1, [sp, #8]
 800271a:	9908      	ldr	r1, [sp, #32]
 800271c:	eeb0 8a47 	vmov.f32	s16, s14
 8002720:	eef0 8a67 	vmov.f32	s17, s15
 8002724:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002728:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800272c:	2900      	cmp	r1, #0
 800272e:	d045      	beq.n	80027bc <_dtoa_r+0x5b4>
 8002730:	494c      	ldr	r1, [pc, #304]	; (8002864 <_dtoa_r+0x65c>)
 8002732:	2000      	movs	r0, #0
 8002734:	f7fe f892 	bl	800085c <__aeabi_ddiv>
 8002738:	ec53 2b18 	vmov	r2, r3, d8
 800273c:	f7fd fdac 	bl	8000298 <__aeabi_dsub>
 8002740:	9d00      	ldr	r5, [sp, #0]
 8002742:	ec41 0b18 	vmov	d8, r0, r1
 8002746:	4639      	mov	r1, r7
 8002748:	4630      	mov	r0, r6
 800274a:	f7fe fa0d 	bl	8000b68 <__aeabi_d2iz>
 800274e:	900c      	str	r0, [sp, #48]	; 0x30
 8002750:	f7fd fef0 	bl	8000534 <__aeabi_i2d>
 8002754:	4602      	mov	r2, r0
 8002756:	460b      	mov	r3, r1
 8002758:	4630      	mov	r0, r6
 800275a:	4639      	mov	r1, r7
 800275c:	f7fd fd9c 	bl	8000298 <__aeabi_dsub>
 8002760:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002762:	3330      	adds	r3, #48	; 0x30
 8002764:	f805 3b01 	strb.w	r3, [r5], #1
 8002768:	ec53 2b18 	vmov	r2, r3, d8
 800276c:	4606      	mov	r6, r0
 800276e:	460f      	mov	r7, r1
 8002770:	f7fe f9bc 	bl	8000aec <__aeabi_dcmplt>
 8002774:	2800      	cmp	r0, #0
 8002776:	d165      	bne.n	8002844 <_dtoa_r+0x63c>
 8002778:	4632      	mov	r2, r6
 800277a:	463b      	mov	r3, r7
 800277c:	4935      	ldr	r1, [pc, #212]	; (8002854 <_dtoa_r+0x64c>)
 800277e:	2000      	movs	r0, #0
 8002780:	f7fd fd8a 	bl	8000298 <__aeabi_dsub>
 8002784:	ec53 2b18 	vmov	r2, r3, d8
 8002788:	f7fe f9b0 	bl	8000aec <__aeabi_dcmplt>
 800278c:	2800      	cmp	r0, #0
 800278e:	f040 80b9 	bne.w	8002904 <_dtoa_r+0x6fc>
 8002792:	9b02      	ldr	r3, [sp, #8]
 8002794:	429d      	cmp	r5, r3
 8002796:	f43f af75 	beq.w	8002684 <_dtoa_r+0x47c>
 800279a:	4b2f      	ldr	r3, [pc, #188]	; (8002858 <_dtoa_r+0x650>)
 800279c:	ec51 0b18 	vmov	r0, r1, d8
 80027a0:	2200      	movs	r2, #0
 80027a2:	f7fd ff31 	bl	8000608 <__aeabi_dmul>
 80027a6:	4b2c      	ldr	r3, [pc, #176]	; (8002858 <_dtoa_r+0x650>)
 80027a8:	ec41 0b18 	vmov	d8, r0, r1
 80027ac:	2200      	movs	r2, #0
 80027ae:	4630      	mov	r0, r6
 80027b0:	4639      	mov	r1, r7
 80027b2:	f7fd ff29 	bl	8000608 <__aeabi_dmul>
 80027b6:	4606      	mov	r6, r0
 80027b8:	460f      	mov	r7, r1
 80027ba:	e7c4      	b.n	8002746 <_dtoa_r+0x53e>
 80027bc:	ec51 0b17 	vmov	r0, r1, d7
 80027c0:	f7fd ff22 	bl	8000608 <__aeabi_dmul>
 80027c4:	9b02      	ldr	r3, [sp, #8]
 80027c6:	9d00      	ldr	r5, [sp, #0]
 80027c8:	930c      	str	r3, [sp, #48]	; 0x30
 80027ca:	ec41 0b18 	vmov	d8, r0, r1
 80027ce:	4639      	mov	r1, r7
 80027d0:	4630      	mov	r0, r6
 80027d2:	f7fe f9c9 	bl	8000b68 <__aeabi_d2iz>
 80027d6:	9011      	str	r0, [sp, #68]	; 0x44
 80027d8:	f7fd feac 	bl	8000534 <__aeabi_i2d>
 80027dc:	4602      	mov	r2, r0
 80027de:	460b      	mov	r3, r1
 80027e0:	4630      	mov	r0, r6
 80027e2:	4639      	mov	r1, r7
 80027e4:	f7fd fd58 	bl	8000298 <__aeabi_dsub>
 80027e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80027ea:	3330      	adds	r3, #48	; 0x30
 80027ec:	f805 3b01 	strb.w	r3, [r5], #1
 80027f0:	9b02      	ldr	r3, [sp, #8]
 80027f2:	429d      	cmp	r5, r3
 80027f4:	4606      	mov	r6, r0
 80027f6:	460f      	mov	r7, r1
 80027f8:	f04f 0200 	mov.w	r2, #0
 80027fc:	d134      	bne.n	8002868 <_dtoa_r+0x660>
 80027fe:	4b19      	ldr	r3, [pc, #100]	; (8002864 <_dtoa_r+0x65c>)
 8002800:	ec51 0b18 	vmov	r0, r1, d8
 8002804:	f7fd fd4a 	bl	800029c <__adddf3>
 8002808:	4602      	mov	r2, r0
 800280a:	460b      	mov	r3, r1
 800280c:	4630      	mov	r0, r6
 800280e:	4639      	mov	r1, r7
 8002810:	f7fe f98a 	bl	8000b28 <__aeabi_dcmpgt>
 8002814:	2800      	cmp	r0, #0
 8002816:	d175      	bne.n	8002904 <_dtoa_r+0x6fc>
 8002818:	ec53 2b18 	vmov	r2, r3, d8
 800281c:	4911      	ldr	r1, [pc, #68]	; (8002864 <_dtoa_r+0x65c>)
 800281e:	2000      	movs	r0, #0
 8002820:	f7fd fd3a 	bl	8000298 <__aeabi_dsub>
 8002824:	4602      	mov	r2, r0
 8002826:	460b      	mov	r3, r1
 8002828:	4630      	mov	r0, r6
 800282a:	4639      	mov	r1, r7
 800282c:	f7fe f95e 	bl	8000aec <__aeabi_dcmplt>
 8002830:	2800      	cmp	r0, #0
 8002832:	f43f af27 	beq.w	8002684 <_dtoa_r+0x47c>
 8002836:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002838:	1e6b      	subs	r3, r5, #1
 800283a:	930c      	str	r3, [sp, #48]	; 0x30
 800283c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002840:	2b30      	cmp	r3, #48	; 0x30
 8002842:	d0f8      	beq.n	8002836 <_dtoa_r+0x62e>
 8002844:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8002848:	e04a      	b.n	80028e0 <_dtoa_r+0x6d8>
 800284a:	bf00      	nop
 800284c:	080043a0 	.word	0x080043a0
 8002850:	08004378 	.word	0x08004378
 8002854:	3ff00000 	.word	0x3ff00000
 8002858:	40240000 	.word	0x40240000
 800285c:	401c0000 	.word	0x401c0000
 8002860:	40140000 	.word	0x40140000
 8002864:	3fe00000 	.word	0x3fe00000
 8002868:	4baf      	ldr	r3, [pc, #700]	; (8002b28 <_dtoa_r+0x920>)
 800286a:	f7fd fecd 	bl	8000608 <__aeabi_dmul>
 800286e:	4606      	mov	r6, r0
 8002870:	460f      	mov	r7, r1
 8002872:	e7ac      	b.n	80027ce <_dtoa_r+0x5c6>
 8002874:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002878:	9d00      	ldr	r5, [sp, #0]
 800287a:	4642      	mov	r2, r8
 800287c:	464b      	mov	r3, r9
 800287e:	4630      	mov	r0, r6
 8002880:	4639      	mov	r1, r7
 8002882:	f7fd ffeb 	bl	800085c <__aeabi_ddiv>
 8002886:	f7fe f96f 	bl	8000b68 <__aeabi_d2iz>
 800288a:	9002      	str	r0, [sp, #8]
 800288c:	f7fd fe52 	bl	8000534 <__aeabi_i2d>
 8002890:	4642      	mov	r2, r8
 8002892:	464b      	mov	r3, r9
 8002894:	f7fd feb8 	bl	8000608 <__aeabi_dmul>
 8002898:	4602      	mov	r2, r0
 800289a:	460b      	mov	r3, r1
 800289c:	4630      	mov	r0, r6
 800289e:	4639      	mov	r1, r7
 80028a0:	f7fd fcfa 	bl	8000298 <__aeabi_dsub>
 80028a4:	9e02      	ldr	r6, [sp, #8]
 80028a6:	9f01      	ldr	r7, [sp, #4]
 80028a8:	3630      	adds	r6, #48	; 0x30
 80028aa:	f805 6b01 	strb.w	r6, [r5], #1
 80028ae:	9e00      	ldr	r6, [sp, #0]
 80028b0:	1bae      	subs	r6, r5, r6
 80028b2:	42b7      	cmp	r7, r6
 80028b4:	4602      	mov	r2, r0
 80028b6:	460b      	mov	r3, r1
 80028b8:	d137      	bne.n	800292a <_dtoa_r+0x722>
 80028ba:	f7fd fcef 	bl	800029c <__adddf3>
 80028be:	4642      	mov	r2, r8
 80028c0:	464b      	mov	r3, r9
 80028c2:	4606      	mov	r6, r0
 80028c4:	460f      	mov	r7, r1
 80028c6:	f7fe f92f 	bl	8000b28 <__aeabi_dcmpgt>
 80028ca:	b9c8      	cbnz	r0, 8002900 <_dtoa_r+0x6f8>
 80028cc:	4642      	mov	r2, r8
 80028ce:	464b      	mov	r3, r9
 80028d0:	4630      	mov	r0, r6
 80028d2:	4639      	mov	r1, r7
 80028d4:	f7fe f900 	bl	8000ad8 <__aeabi_dcmpeq>
 80028d8:	b110      	cbz	r0, 80028e0 <_dtoa_r+0x6d8>
 80028da:	9b02      	ldr	r3, [sp, #8]
 80028dc:	07d9      	lsls	r1, r3, #31
 80028de:	d40f      	bmi.n	8002900 <_dtoa_r+0x6f8>
 80028e0:	4620      	mov	r0, r4
 80028e2:	4659      	mov	r1, fp
 80028e4:	f000 fbd0 	bl	8003088 <_Bfree>
 80028e8:	2300      	movs	r3, #0
 80028ea:	702b      	strb	r3, [r5, #0]
 80028ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80028ee:	f10a 0001 	add.w	r0, sl, #1
 80028f2:	6018      	str	r0, [r3, #0]
 80028f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	f43f acd8 	beq.w	80022ac <_dtoa_r+0xa4>
 80028fc:	601d      	str	r5, [r3, #0]
 80028fe:	e4d5      	b.n	80022ac <_dtoa_r+0xa4>
 8002900:	f8cd a01c 	str.w	sl, [sp, #28]
 8002904:	462b      	mov	r3, r5
 8002906:	461d      	mov	r5, r3
 8002908:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800290c:	2a39      	cmp	r2, #57	; 0x39
 800290e:	d108      	bne.n	8002922 <_dtoa_r+0x71a>
 8002910:	9a00      	ldr	r2, [sp, #0]
 8002912:	429a      	cmp	r2, r3
 8002914:	d1f7      	bne.n	8002906 <_dtoa_r+0x6fe>
 8002916:	9a07      	ldr	r2, [sp, #28]
 8002918:	9900      	ldr	r1, [sp, #0]
 800291a:	3201      	adds	r2, #1
 800291c:	9207      	str	r2, [sp, #28]
 800291e:	2230      	movs	r2, #48	; 0x30
 8002920:	700a      	strb	r2, [r1, #0]
 8002922:	781a      	ldrb	r2, [r3, #0]
 8002924:	3201      	adds	r2, #1
 8002926:	701a      	strb	r2, [r3, #0]
 8002928:	e78c      	b.n	8002844 <_dtoa_r+0x63c>
 800292a:	4b7f      	ldr	r3, [pc, #508]	; (8002b28 <_dtoa_r+0x920>)
 800292c:	2200      	movs	r2, #0
 800292e:	f7fd fe6b 	bl	8000608 <__aeabi_dmul>
 8002932:	2200      	movs	r2, #0
 8002934:	2300      	movs	r3, #0
 8002936:	4606      	mov	r6, r0
 8002938:	460f      	mov	r7, r1
 800293a:	f7fe f8cd 	bl	8000ad8 <__aeabi_dcmpeq>
 800293e:	2800      	cmp	r0, #0
 8002940:	d09b      	beq.n	800287a <_dtoa_r+0x672>
 8002942:	e7cd      	b.n	80028e0 <_dtoa_r+0x6d8>
 8002944:	9a08      	ldr	r2, [sp, #32]
 8002946:	2a00      	cmp	r2, #0
 8002948:	f000 80c4 	beq.w	8002ad4 <_dtoa_r+0x8cc>
 800294c:	9a05      	ldr	r2, [sp, #20]
 800294e:	2a01      	cmp	r2, #1
 8002950:	f300 80a8 	bgt.w	8002aa4 <_dtoa_r+0x89c>
 8002954:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002956:	2a00      	cmp	r2, #0
 8002958:	f000 80a0 	beq.w	8002a9c <_dtoa_r+0x894>
 800295c:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002960:	9e06      	ldr	r6, [sp, #24]
 8002962:	4645      	mov	r5, r8
 8002964:	9a04      	ldr	r2, [sp, #16]
 8002966:	2101      	movs	r1, #1
 8002968:	441a      	add	r2, r3
 800296a:	4620      	mov	r0, r4
 800296c:	4498      	add	r8, r3
 800296e:	9204      	str	r2, [sp, #16]
 8002970:	f000 fc46 	bl	8003200 <__i2b>
 8002974:	4607      	mov	r7, r0
 8002976:	2d00      	cmp	r5, #0
 8002978:	dd0b      	ble.n	8002992 <_dtoa_r+0x78a>
 800297a:	9b04      	ldr	r3, [sp, #16]
 800297c:	2b00      	cmp	r3, #0
 800297e:	dd08      	ble.n	8002992 <_dtoa_r+0x78a>
 8002980:	42ab      	cmp	r3, r5
 8002982:	9a04      	ldr	r2, [sp, #16]
 8002984:	bfa8      	it	ge
 8002986:	462b      	movge	r3, r5
 8002988:	eba8 0803 	sub.w	r8, r8, r3
 800298c:	1aed      	subs	r5, r5, r3
 800298e:	1ad3      	subs	r3, r2, r3
 8002990:	9304      	str	r3, [sp, #16]
 8002992:	9b06      	ldr	r3, [sp, #24]
 8002994:	b1fb      	cbz	r3, 80029d6 <_dtoa_r+0x7ce>
 8002996:	9b08      	ldr	r3, [sp, #32]
 8002998:	2b00      	cmp	r3, #0
 800299a:	f000 809f 	beq.w	8002adc <_dtoa_r+0x8d4>
 800299e:	2e00      	cmp	r6, #0
 80029a0:	dd11      	ble.n	80029c6 <_dtoa_r+0x7be>
 80029a2:	4639      	mov	r1, r7
 80029a4:	4632      	mov	r2, r6
 80029a6:	4620      	mov	r0, r4
 80029a8:	f000 fce6 	bl	8003378 <__pow5mult>
 80029ac:	465a      	mov	r2, fp
 80029ae:	4601      	mov	r1, r0
 80029b0:	4607      	mov	r7, r0
 80029b2:	4620      	mov	r0, r4
 80029b4:	f000 fc3a 	bl	800322c <__multiply>
 80029b8:	4659      	mov	r1, fp
 80029ba:	9007      	str	r0, [sp, #28]
 80029bc:	4620      	mov	r0, r4
 80029be:	f000 fb63 	bl	8003088 <_Bfree>
 80029c2:	9b07      	ldr	r3, [sp, #28]
 80029c4:	469b      	mov	fp, r3
 80029c6:	9b06      	ldr	r3, [sp, #24]
 80029c8:	1b9a      	subs	r2, r3, r6
 80029ca:	d004      	beq.n	80029d6 <_dtoa_r+0x7ce>
 80029cc:	4659      	mov	r1, fp
 80029ce:	4620      	mov	r0, r4
 80029d0:	f000 fcd2 	bl	8003378 <__pow5mult>
 80029d4:	4683      	mov	fp, r0
 80029d6:	2101      	movs	r1, #1
 80029d8:	4620      	mov	r0, r4
 80029da:	f000 fc11 	bl	8003200 <__i2b>
 80029de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	4606      	mov	r6, r0
 80029e4:	dd7c      	ble.n	8002ae0 <_dtoa_r+0x8d8>
 80029e6:	461a      	mov	r2, r3
 80029e8:	4601      	mov	r1, r0
 80029ea:	4620      	mov	r0, r4
 80029ec:	f000 fcc4 	bl	8003378 <__pow5mult>
 80029f0:	9b05      	ldr	r3, [sp, #20]
 80029f2:	2b01      	cmp	r3, #1
 80029f4:	4606      	mov	r6, r0
 80029f6:	dd76      	ble.n	8002ae6 <_dtoa_r+0x8de>
 80029f8:	2300      	movs	r3, #0
 80029fa:	9306      	str	r3, [sp, #24]
 80029fc:	6933      	ldr	r3, [r6, #16]
 80029fe:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002a02:	6918      	ldr	r0, [r3, #16]
 8002a04:	f000 fbac 	bl	8003160 <__hi0bits>
 8002a08:	f1c0 0020 	rsb	r0, r0, #32
 8002a0c:	9b04      	ldr	r3, [sp, #16]
 8002a0e:	4418      	add	r0, r3
 8002a10:	f010 001f 	ands.w	r0, r0, #31
 8002a14:	f000 8086 	beq.w	8002b24 <_dtoa_r+0x91c>
 8002a18:	f1c0 0320 	rsb	r3, r0, #32
 8002a1c:	2b04      	cmp	r3, #4
 8002a1e:	dd7f      	ble.n	8002b20 <_dtoa_r+0x918>
 8002a20:	f1c0 001c 	rsb	r0, r0, #28
 8002a24:	9b04      	ldr	r3, [sp, #16]
 8002a26:	4403      	add	r3, r0
 8002a28:	4480      	add	r8, r0
 8002a2a:	4405      	add	r5, r0
 8002a2c:	9304      	str	r3, [sp, #16]
 8002a2e:	f1b8 0f00 	cmp.w	r8, #0
 8002a32:	dd05      	ble.n	8002a40 <_dtoa_r+0x838>
 8002a34:	4659      	mov	r1, fp
 8002a36:	4642      	mov	r2, r8
 8002a38:	4620      	mov	r0, r4
 8002a3a:	f000 fcf7 	bl	800342c <__lshift>
 8002a3e:	4683      	mov	fp, r0
 8002a40:	9b04      	ldr	r3, [sp, #16]
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	dd05      	ble.n	8002a52 <_dtoa_r+0x84a>
 8002a46:	4631      	mov	r1, r6
 8002a48:	461a      	mov	r2, r3
 8002a4a:	4620      	mov	r0, r4
 8002a4c:	f000 fcee 	bl	800342c <__lshift>
 8002a50:	4606      	mov	r6, r0
 8002a52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	d069      	beq.n	8002b2c <_dtoa_r+0x924>
 8002a58:	4631      	mov	r1, r6
 8002a5a:	4658      	mov	r0, fp
 8002a5c:	f000 fd52 	bl	8003504 <__mcmp>
 8002a60:	2800      	cmp	r0, #0
 8002a62:	da63      	bge.n	8002b2c <_dtoa_r+0x924>
 8002a64:	2300      	movs	r3, #0
 8002a66:	4659      	mov	r1, fp
 8002a68:	220a      	movs	r2, #10
 8002a6a:	4620      	mov	r0, r4
 8002a6c:	f000 fb2e 	bl	80030cc <__multadd>
 8002a70:	9b08      	ldr	r3, [sp, #32]
 8002a72:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a76:	4683      	mov	fp, r0
 8002a78:	2b00      	cmp	r3, #0
 8002a7a:	f000 818f 	beq.w	8002d9c <_dtoa_r+0xb94>
 8002a7e:	4639      	mov	r1, r7
 8002a80:	2300      	movs	r3, #0
 8002a82:	220a      	movs	r2, #10
 8002a84:	4620      	mov	r0, r4
 8002a86:	f000 fb21 	bl	80030cc <__multadd>
 8002a8a:	f1b9 0f00 	cmp.w	r9, #0
 8002a8e:	4607      	mov	r7, r0
 8002a90:	f300 808e 	bgt.w	8002bb0 <_dtoa_r+0x9a8>
 8002a94:	9b05      	ldr	r3, [sp, #20]
 8002a96:	2b02      	cmp	r3, #2
 8002a98:	dc50      	bgt.n	8002b3c <_dtoa_r+0x934>
 8002a9a:	e089      	b.n	8002bb0 <_dtoa_r+0x9a8>
 8002a9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a9e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002aa2:	e75d      	b.n	8002960 <_dtoa_r+0x758>
 8002aa4:	9b01      	ldr	r3, [sp, #4]
 8002aa6:	1e5e      	subs	r6, r3, #1
 8002aa8:	9b06      	ldr	r3, [sp, #24]
 8002aaa:	42b3      	cmp	r3, r6
 8002aac:	bfbf      	itttt	lt
 8002aae:	9b06      	ldrlt	r3, [sp, #24]
 8002ab0:	9606      	strlt	r6, [sp, #24]
 8002ab2:	1af2      	sublt	r2, r6, r3
 8002ab4:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 8002ab6:	bfb6      	itet	lt
 8002ab8:	189b      	addlt	r3, r3, r2
 8002aba:	1b9e      	subge	r6, r3, r6
 8002abc:	930d      	strlt	r3, [sp, #52]	; 0x34
 8002abe:	9b01      	ldr	r3, [sp, #4]
 8002ac0:	bfb8      	it	lt
 8002ac2:	2600      	movlt	r6, #0
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	bfb5      	itete	lt
 8002ac8:	eba8 0503 	sublt.w	r5, r8, r3
 8002acc:	9b01      	ldrge	r3, [sp, #4]
 8002ace:	2300      	movlt	r3, #0
 8002ad0:	4645      	movge	r5, r8
 8002ad2:	e747      	b.n	8002964 <_dtoa_r+0x75c>
 8002ad4:	9e06      	ldr	r6, [sp, #24]
 8002ad6:	9f08      	ldr	r7, [sp, #32]
 8002ad8:	4645      	mov	r5, r8
 8002ada:	e74c      	b.n	8002976 <_dtoa_r+0x76e>
 8002adc:	9a06      	ldr	r2, [sp, #24]
 8002ade:	e775      	b.n	80029cc <_dtoa_r+0x7c4>
 8002ae0:	9b05      	ldr	r3, [sp, #20]
 8002ae2:	2b01      	cmp	r3, #1
 8002ae4:	dc18      	bgt.n	8002b18 <_dtoa_r+0x910>
 8002ae6:	9b02      	ldr	r3, [sp, #8]
 8002ae8:	b9b3      	cbnz	r3, 8002b18 <_dtoa_r+0x910>
 8002aea:	9b03      	ldr	r3, [sp, #12]
 8002aec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002af0:	b9a3      	cbnz	r3, 8002b1c <_dtoa_r+0x914>
 8002af2:	9b03      	ldr	r3, [sp, #12]
 8002af4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002af8:	0d1b      	lsrs	r3, r3, #20
 8002afa:	051b      	lsls	r3, r3, #20
 8002afc:	b12b      	cbz	r3, 8002b0a <_dtoa_r+0x902>
 8002afe:	9b04      	ldr	r3, [sp, #16]
 8002b00:	3301      	adds	r3, #1
 8002b02:	9304      	str	r3, [sp, #16]
 8002b04:	f108 0801 	add.w	r8, r8, #1
 8002b08:	2301      	movs	r3, #1
 8002b0a:	9306      	str	r3, [sp, #24]
 8002b0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	f47f af74 	bne.w	80029fc <_dtoa_r+0x7f4>
 8002b14:	2001      	movs	r0, #1
 8002b16:	e779      	b.n	8002a0c <_dtoa_r+0x804>
 8002b18:	2300      	movs	r3, #0
 8002b1a:	e7f6      	b.n	8002b0a <_dtoa_r+0x902>
 8002b1c:	9b02      	ldr	r3, [sp, #8]
 8002b1e:	e7f4      	b.n	8002b0a <_dtoa_r+0x902>
 8002b20:	d085      	beq.n	8002a2e <_dtoa_r+0x826>
 8002b22:	4618      	mov	r0, r3
 8002b24:	301c      	adds	r0, #28
 8002b26:	e77d      	b.n	8002a24 <_dtoa_r+0x81c>
 8002b28:	40240000 	.word	0x40240000
 8002b2c:	9b01      	ldr	r3, [sp, #4]
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	dc38      	bgt.n	8002ba4 <_dtoa_r+0x99c>
 8002b32:	9b05      	ldr	r3, [sp, #20]
 8002b34:	2b02      	cmp	r3, #2
 8002b36:	dd35      	ble.n	8002ba4 <_dtoa_r+0x99c>
 8002b38:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8002b3c:	f1b9 0f00 	cmp.w	r9, #0
 8002b40:	d10d      	bne.n	8002b5e <_dtoa_r+0x956>
 8002b42:	4631      	mov	r1, r6
 8002b44:	464b      	mov	r3, r9
 8002b46:	2205      	movs	r2, #5
 8002b48:	4620      	mov	r0, r4
 8002b4a:	f000 fabf 	bl	80030cc <__multadd>
 8002b4e:	4601      	mov	r1, r0
 8002b50:	4606      	mov	r6, r0
 8002b52:	4658      	mov	r0, fp
 8002b54:	f000 fcd6 	bl	8003504 <__mcmp>
 8002b58:	2800      	cmp	r0, #0
 8002b5a:	f73f adbd 	bgt.w	80026d8 <_dtoa_r+0x4d0>
 8002b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b60:	9d00      	ldr	r5, [sp, #0]
 8002b62:	ea6f 0a03 	mvn.w	sl, r3
 8002b66:	f04f 0800 	mov.w	r8, #0
 8002b6a:	4631      	mov	r1, r6
 8002b6c:	4620      	mov	r0, r4
 8002b6e:	f000 fa8b 	bl	8003088 <_Bfree>
 8002b72:	2f00      	cmp	r7, #0
 8002b74:	f43f aeb4 	beq.w	80028e0 <_dtoa_r+0x6d8>
 8002b78:	f1b8 0f00 	cmp.w	r8, #0
 8002b7c:	d005      	beq.n	8002b8a <_dtoa_r+0x982>
 8002b7e:	45b8      	cmp	r8, r7
 8002b80:	d003      	beq.n	8002b8a <_dtoa_r+0x982>
 8002b82:	4641      	mov	r1, r8
 8002b84:	4620      	mov	r0, r4
 8002b86:	f000 fa7f 	bl	8003088 <_Bfree>
 8002b8a:	4639      	mov	r1, r7
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	f000 fa7b 	bl	8003088 <_Bfree>
 8002b92:	e6a5      	b.n	80028e0 <_dtoa_r+0x6d8>
 8002b94:	2600      	movs	r6, #0
 8002b96:	4637      	mov	r7, r6
 8002b98:	e7e1      	b.n	8002b5e <_dtoa_r+0x956>
 8002b9a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8002b9c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8002ba0:	4637      	mov	r7, r6
 8002ba2:	e599      	b.n	80026d8 <_dtoa_r+0x4d0>
 8002ba4:	9b08      	ldr	r3, [sp, #32]
 8002ba6:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	f000 80fd 	beq.w	8002daa <_dtoa_r+0xba2>
 8002bb0:	2d00      	cmp	r5, #0
 8002bb2:	dd05      	ble.n	8002bc0 <_dtoa_r+0x9b8>
 8002bb4:	4639      	mov	r1, r7
 8002bb6:	462a      	mov	r2, r5
 8002bb8:	4620      	mov	r0, r4
 8002bba:	f000 fc37 	bl	800342c <__lshift>
 8002bbe:	4607      	mov	r7, r0
 8002bc0:	9b06      	ldr	r3, [sp, #24]
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d05c      	beq.n	8002c80 <_dtoa_r+0xa78>
 8002bc6:	6879      	ldr	r1, [r7, #4]
 8002bc8:	4620      	mov	r0, r4
 8002bca:	f000 fa1d 	bl	8003008 <_Balloc>
 8002bce:	4605      	mov	r5, r0
 8002bd0:	b928      	cbnz	r0, 8002bde <_dtoa_r+0x9d6>
 8002bd2:	4b80      	ldr	r3, [pc, #512]	; (8002dd4 <_dtoa_r+0xbcc>)
 8002bd4:	4602      	mov	r2, r0
 8002bd6:	f240 21ea 	movw	r1, #746	; 0x2ea
 8002bda:	f7ff bb2e 	b.w	800223a <_dtoa_r+0x32>
 8002bde:	693a      	ldr	r2, [r7, #16]
 8002be0:	3202      	adds	r2, #2
 8002be2:	0092      	lsls	r2, r2, #2
 8002be4:	f107 010c 	add.w	r1, r7, #12
 8002be8:	300c      	adds	r0, #12
 8002bea:	f000 f9ff 	bl	8002fec <memcpy>
 8002bee:	2201      	movs	r2, #1
 8002bf0:	4629      	mov	r1, r5
 8002bf2:	4620      	mov	r0, r4
 8002bf4:	f000 fc1a 	bl	800342c <__lshift>
 8002bf8:	9b00      	ldr	r3, [sp, #0]
 8002bfa:	3301      	adds	r3, #1
 8002bfc:	9301      	str	r3, [sp, #4]
 8002bfe:	9b00      	ldr	r3, [sp, #0]
 8002c00:	444b      	add	r3, r9
 8002c02:	9307      	str	r3, [sp, #28]
 8002c04:	9b02      	ldr	r3, [sp, #8]
 8002c06:	f003 0301 	and.w	r3, r3, #1
 8002c0a:	46b8      	mov	r8, r7
 8002c0c:	9306      	str	r3, [sp, #24]
 8002c0e:	4607      	mov	r7, r0
 8002c10:	9b01      	ldr	r3, [sp, #4]
 8002c12:	4631      	mov	r1, r6
 8002c14:	3b01      	subs	r3, #1
 8002c16:	4658      	mov	r0, fp
 8002c18:	9302      	str	r3, [sp, #8]
 8002c1a:	f7ff fa67 	bl	80020ec <quorem>
 8002c1e:	4603      	mov	r3, r0
 8002c20:	3330      	adds	r3, #48	; 0x30
 8002c22:	9004      	str	r0, [sp, #16]
 8002c24:	4641      	mov	r1, r8
 8002c26:	4658      	mov	r0, fp
 8002c28:	9308      	str	r3, [sp, #32]
 8002c2a:	f000 fc6b 	bl	8003504 <__mcmp>
 8002c2e:	463a      	mov	r2, r7
 8002c30:	4681      	mov	r9, r0
 8002c32:	4631      	mov	r1, r6
 8002c34:	4620      	mov	r0, r4
 8002c36:	f000 fc81 	bl	800353c <__mdiff>
 8002c3a:	68c2      	ldr	r2, [r0, #12]
 8002c3c:	9b08      	ldr	r3, [sp, #32]
 8002c3e:	4605      	mov	r5, r0
 8002c40:	bb02      	cbnz	r2, 8002c84 <_dtoa_r+0xa7c>
 8002c42:	4601      	mov	r1, r0
 8002c44:	4658      	mov	r0, fp
 8002c46:	f000 fc5d 	bl	8003504 <__mcmp>
 8002c4a:	9b08      	ldr	r3, [sp, #32]
 8002c4c:	4602      	mov	r2, r0
 8002c4e:	4629      	mov	r1, r5
 8002c50:	4620      	mov	r0, r4
 8002c52:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8002c56:	f000 fa17 	bl	8003088 <_Bfree>
 8002c5a:	9b05      	ldr	r3, [sp, #20]
 8002c5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002c5e:	9d01      	ldr	r5, [sp, #4]
 8002c60:	ea43 0102 	orr.w	r1, r3, r2
 8002c64:	9b06      	ldr	r3, [sp, #24]
 8002c66:	430b      	orrs	r3, r1
 8002c68:	9b08      	ldr	r3, [sp, #32]
 8002c6a:	d10d      	bne.n	8002c88 <_dtoa_r+0xa80>
 8002c6c:	2b39      	cmp	r3, #57	; 0x39
 8002c6e:	d029      	beq.n	8002cc4 <_dtoa_r+0xabc>
 8002c70:	f1b9 0f00 	cmp.w	r9, #0
 8002c74:	dd01      	ble.n	8002c7a <_dtoa_r+0xa72>
 8002c76:	9b04      	ldr	r3, [sp, #16]
 8002c78:	3331      	adds	r3, #49	; 0x31
 8002c7a:	9a02      	ldr	r2, [sp, #8]
 8002c7c:	7013      	strb	r3, [r2, #0]
 8002c7e:	e774      	b.n	8002b6a <_dtoa_r+0x962>
 8002c80:	4638      	mov	r0, r7
 8002c82:	e7b9      	b.n	8002bf8 <_dtoa_r+0x9f0>
 8002c84:	2201      	movs	r2, #1
 8002c86:	e7e2      	b.n	8002c4e <_dtoa_r+0xa46>
 8002c88:	f1b9 0f00 	cmp.w	r9, #0
 8002c8c:	db06      	blt.n	8002c9c <_dtoa_r+0xa94>
 8002c8e:	9905      	ldr	r1, [sp, #20]
 8002c90:	ea41 0909 	orr.w	r9, r1, r9
 8002c94:	9906      	ldr	r1, [sp, #24]
 8002c96:	ea59 0101 	orrs.w	r1, r9, r1
 8002c9a:	d120      	bne.n	8002cde <_dtoa_r+0xad6>
 8002c9c:	2a00      	cmp	r2, #0
 8002c9e:	ddec      	ble.n	8002c7a <_dtoa_r+0xa72>
 8002ca0:	4659      	mov	r1, fp
 8002ca2:	2201      	movs	r2, #1
 8002ca4:	4620      	mov	r0, r4
 8002ca6:	9301      	str	r3, [sp, #4]
 8002ca8:	f000 fbc0 	bl	800342c <__lshift>
 8002cac:	4631      	mov	r1, r6
 8002cae:	4683      	mov	fp, r0
 8002cb0:	f000 fc28 	bl	8003504 <__mcmp>
 8002cb4:	2800      	cmp	r0, #0
 8002cb6:	9b01      	ldr	r3, [sp, #4]
 8002cb8:	dc02      	bgt.n	8002cc0 <_dtoa_r+0xab8>
 8002cba:	d1de      	bne.n	8002c7a <_dtoa_r+0xa72>
 8002cbc:	07da      	lsls	r2, r3, #31
 8002cbe:	d5dc      	bpl.n	8002c7a <_dtoa_r+0xa72>
 8002cc0:	2b39      	cmp	r3, #57	; 0x39
 8002cc2:	d1d8      	bne.n	8002c76 <_dtoa_r+0xa6e>
 8002cc4:	9a02      	ldr	r2, [sp, #8]
 8002cc6:	2339      	movs	r3, #57	; 0x39
 8002cc8:	7013      	strb	r3, [r2, #0]
 8002cca:	462b      	mov	r3, r5
 8002ccc:	461d      	mov	r5, r3
 8002cce:	3b01      	subs	r3, #1
 8002cd0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002cd4:	2a39      	cmp	r2, #57	; 0x39
 8002cd6:	d050      	beq.n	8002d7a <_dtoa_r+0xb72>
 8002cd8:	3201      	adds	r2, #1
 8002cda:	701a      	strb	r2, [r3, #0]
 8002cdc:	e745      	b.n	8002b6a <_dtoa_r+0x962>
 8002cde:	2a00      	cmp	r2, #0
 8002ce0:	dd03      	ble.n	8002cea <_dtoa_r+0xae2>
 8002ce2:	2b39      	cmp	r3, #57	; 0x39
 8002ce4:	d0ee      	beq.n	8002cc4 <_dtoa_r+0xabc>
 8002ce6:	3301      	adds	r3, #1
 8002ce8:	e7c7      	b.n	8002c7a <_dtoa_r+0xa72>
 8002cea:	9a01      	ldr	r2, [sp, #4]
 8002cec:	9907      	ldr	r1, [sp, #28]
 8002cee:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002cf2:	428a      	cmp	r2, r1
 8002cf4:	d02a      	beq.n	8002d4c <_dtoa_r+0xb44>
 8002cf6:	4659      	mov	r1, fp
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	220a      	movs	r2, #10
 8002cfc:	4620      	mov	r0, r4
 8002cfe:	f000 f9e5 	bl	80030cc <__multadd>
 8002d02:	45b8      	cmp	r8, r7
 8002d04:	4683      	mov	fp, r0
 8002d06:	f04f 0300 	mov.w	r3, #0
 8002d0a:	f04f 020a 	mov.w	r2, #10
 8002d0e:	4641      	mov	r1, r8
 8002d10:	4620      	mov	r0, r4
 8002d12:	d107      	bne.n	8002d24 <_dtoa_r+0xb1c>
 8002d14:	f000 f9da 	bl	80030cc <__multadd>
 8002d18:	4680      	mov	r8, r0
 8002d1a:	4607      	mov	r7, r0
 8002d1c:	9b01      	ldr	r3, [sp, #4]
 8002d1e:	3301      	adds	r3, #1
 8002d20:	9301      	str	r3, [sp, #4]
 8002d22:	e775      	b.n	8002c10 <_dtoa_r+0xa08>
 8002d24:	f000 f9d2 	bl	80030cc <__multadd>
 8002d28:	4639      	mov	r1, r7
 8002d2a:	4680      	mov	r8, r0
 8002d2c:	2300      	movs	r3, #0
 8002d2e:	220a      	movs	r2, #10
 8002d30:	4620      	mov	r0, r4
 8002d32:	f000 f9cb 	bl	80030cc <__multadd>
 8002d36:	4607      	mov	r7, r0
 8002d38:	e7f0      	b.n	8002d1c <_dtoa_r+0xb14>
 8002d3a:	f1b9 0f00 	cmp.w	r9, #0
 8002d3e:	9a00      	ldr	r2, [sp, #0]
 8002d40:	bfcc      	ite	gt
 8002d42:	464d      	movgt	r5, r9
 8002d44:	2501      	movle	r5, #1
 8002d46:	4415      	add	r5, r2
 8002d48:	f04f 0800 	mov.w	r8, #0
 8002d4c:	4659      	mov	r1, fp
 8002d4e:	2201      	movs	r2, #1
 8002d50:	4620      	mov	r0, r4
 8002d52:	9301      	str	r3, [sp, #4]
 8002d54:	f000 fb6a 	bl	800342c <__lshift>
 8002d58:	4631      	mov	r1, r6
 8002d5a:	4683      	mov	fp, r0
 8002d5c:	f000 fbd2 	bl	8003504 <__mcmp>
 8002d60:	2800      	cmp	r0, #0
 8002d62:	dcb2      	bgt.n	8002cca <_dtoa_r+0xac2>
 8002d64:	d102      	bne.n	8002d6c <_dtoa_r+0xb64>
 8002d66:	9b01      	ldr	r3, [sp, #4]
 8002d68:	07db      	lsls	r3, r3, #31
 8002d6a:	d4ae      	bmi.n	8002cca <_dtoa_r+0xac2>
 8002d6c:	462b      	mov	r3, r5
 8002d6e:	461d      	mov	r5, r3
 8002d70:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d74:	2a30      	cmp	r2, #48	; 0x30
 8002d76:	d0fa      	beq.n	8002d6e <_dtoa_r+0xb66>
 8002d78:	e6f7      	b.n	8002b6a <_dtoa_r+0x962>
 8002d7a:	9a00      	ldr	r2, [sp, #0]
 8002d7c:	429a      	cmp	r2, r3
 8002d7e:	d1a5      	bne.n	8002ccc <_dtoa_r+0xac4>
 8002d80:	f10a 0a01 	add.w	sl, sl, #1
 8002d84:	2331      	movs	r3, #49	; 0x31
 8002d86:	e779      	b.n	8002c7c <_dtoa_r+0xa74>
 8002d88:	4b13      	ldr	r3, [pc, #76]	; (8002dd8 <_dtoa_r+0xbd0>)
 8002d8a:	f7ff baaf 	b.w	80022ec <_dtoa_r+0xe4>
 8002d8e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d90:	2b00      	cmp	r3, #0
 8002d92:	f47f aa86 	bne.w	80022a2 <_dtoa_r+0x9a>
 8002d96:	4b11      	ldr	r3, [pc, #68]	; (8002ddc <_dtoa_r+0xbd4>)
 8002d98:	f7ff baa8 	b.w	80022ec <_dtoa_r+0xe4>
 8002d9c:	f1b9 0f00 	cmp.w	r9, #0
 8002da0:	dc03      	bgt.n	8002daa <_dtoa_r+0xba2>
 8002da2:	9b05      	ldr	r3, [sp, #20]
 8002da4:	2b02      	cmp	r3, #2
 8002da6:	f73f aec9 	bgt.w	8002b3c <_dtoa_r+0x934>
 8002daa:	9d00      	ldr	r5, [sp, #0]
 8002dac:	4631      	mov	r1, r6
 8002dae:	4658      	mov	r0, fp
 8002db0:	f7ff f99c 	bl	80020ec <quorem>
 8002db4:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8002db8:	f805 3b01 	strb.w	r3, [r5], #1
 8002dbc:	9a00      	ldr	r2, [sp, #0]
 8002dbe:	1aaa      	subs	r2, r5, r2
 8002dc0:	4591      	cmp	r9, r2
 8002dc2:	ddba      	ble.n	8002d3a <_dtoa_r+0xb32>
 8002dc4:	4659      	mov	r1, fp
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	220a      	movs	r2, #10
 8002dca:	4620      	mov	r0, r4
 8002dcc:	f000 f97e 	bl	80030cc <__multadd>
 8002dd0:	4683      	mov	fp, r0
 8002dd2:	e7eb      	b.n	8002dac <_dtoa_r+0xba4>
 8002dd4:	080042a3 	.word	0x080042a3
 8002dd8:	080041fc 	.word	0x080041fc
 8002ddc:	08004220 	.word	0x08004220

08002de0 <std>:
 8002de0:	2300      	movs	r3, #0
 8002de2:	b510      	push	{r4, lr}
 8002de4:	4604      	mov	r4, r0
 8002de6:	e9c0 3300 	strd	r3, r3, [r0]
 8002dea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002dee:	6083      	str	r3, [r0, #8]
 8002df0:	8181      	strh	r1, [r0, #12]
 8002df2:	6643      	str	r3, [r0, #100]	; 0x64
 8002df4:	81c2      	strh	r2, [r0, #14]
 8002df6:	6183      	str	r3, [r0, #24]
 8002df8:	4619      	mov	r1, r3
 8002dfa:	2208      	movs	r2, #8
 8002dfc:	305c      	adds	r0, #92	; 0x5c
 8002dfe:	f7fe fceb 	bl	80017d8 <memset>
 8002e02:	4b05      	ldr	r3, [pc, #20]	; (8002e18 <std+0x38>)
 8002e04:	6263      	str	r3, [r4, #36]	; 0x24
 8002e06:	4b05      	ldr	r3, [pc, #20]	; (8002e1c <std+0x3c>)
 8002e08:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e0a:	4b05      	ldr	r3, [pc, #20]	; (8002e20 <std+0x40>)
 8002e0c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002e0e:	4b05      	ldr	r3, [pc, #20]	; (8002e24 <std+0x44>)
 8002e10:	6224      	str	r4, [r4, #32]
 8002e12:	6323      	str	r3, [r4, #48]	; 0x30
 8002e14:	bd10      	pop	{r4, pc}
 8002e16:	bf00      	nop
 8002e18:	08003b4d 	.word	0x08003b4d
 8002e1c:	08003b6f 	.word	0x08003b6f
 8002e20:	08003ba7 	.word	0x08003ba7
 8002e24:	08003bcb 	.word	0x08003bcb

08002e28 <_cleanup_r>:
 8002e28:	4901      	ldr	r1, [pc, #4]	; (8002e30 <_cleanup_r+0x8>)
 8002e2a:	f000 b8af 	b.w	8002f8c <_fwalk_reent>
 8002e2e:	bf00      	nop
 8002e30:	08003ee1 	.word	0x08003ee1

08002e34 <__sfmoreglue>:
 8002e34:	b570      	push	{r4, r5, r6, lr}
 8002e36:	1e4a      	subs	r2, r1, #1
 8002e38:	2568      	movs	r5, #104	; 0x68
 8002e3a:	4355      	muls	r5, r2
 8002e3c:	460e      	mov	r6, r1
 8002e3e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002e42:	f000 fcbf 	bl	80037c4 <_malloc_r>
 8002e46:	4604      	mov	r4, r0
 8002e48:	b140      	cbz	r0, 8002e5c <__sfmoreglue+0x28>
 8002e4a:	2100      	movs	r1, #0
 8002e4c:	e9c0 1600 	strd	r1, r6, [r0]
 8002e50:	300c      	adds	r0, #12
 8002e52:	60a0      	str	r0, [r4, #8]
 8002e54:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002e58:	f7fe fcbe 	bl	80017d8 <memset>
 8002e5c:	4620      	mov	r0, r4
 8002e5e:	bd70      	pop	{r4, r5, r6, pc}

08002e60 <__sfp_lock_acquire>:
 8002e60:	4801      	ldr	r0, [pc, #4]	; (8002e68 <__sfp_lock_acquire+0x8>)
 8002e62:	f000 b8b8 	b.w	8002fd6 <__retarget_lock_acquire_recursive>
 8002e66:	bf00      	nop
 8002e68:	200002c0 	.word	0x200002c0

08002e6c <__sfp_lock_release>:
 8002e6c:	4801      	ldr	r0, [pc, #4]	; (8002e74 <__sfp_lock_release+0x8>)
 8002e6e:	f000 b8b3 	b.w	8002fd8 <__retarget_lock_release_recursive>
 8002e72:	bf00      	nop
 8002e74:	200002c0 	.word	0x200002c0

08002e78 <__sinit_lock_acquire>:
 8002e78:	4801      	ldr	r0, [pc, #4]	; (8002e80 <__sinit_lock_acquire+0x8>)
 8002e7a:	f000 b8ac 	b.w	8002fd6 <__retarget_lock_acquire_recursive>
 8002e7e:	bf00      	nop
 8002e80:	200002bb 	.word	0x200002bb

08002e84 <__sinit_lock_release>:
 8002e84:	4801      	ldr	r0, [pc, #4]	; (8002e8c <__sinit_lock_release+0x8>)
 8002e86:	f000 b8a7 	b.w	8002fd8 <__retarget_lock_release_recursive>
 8002e8a:	bf00      	nop
 8002e8c:	200002bb 	.word	0x200002bb

08002e90 <__sinit>:
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4604      	mov	r4, r0
 8002e94:	f7ff fff0 	bl	8002e78 <__sinit_lock_acquire>
 8002e98:	69a3      	ldr	r3, [r4, #24]
 8002e9a:	b11b      	cbz	r3, 8002ea4 <__sinit+0x14>
 8002e9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ea0:	f7ff bff0 	b.w	8002e84 <__sinit_lock_release>
 8002ea4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002ea8:	6523      	str	r3, [r4, #80]	; 0x50
 8002eaa:	4b13      	ldr	r3, [pc, #76]	; (8002ef8 <__sinit+0x68>)
 8002eac:	4a13      	ldr	r2, [pc, #76]	; (8002efc <__sinit+0x6c>)
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	62a2      	str	r2, [r4, #40]	; 0x28
 8002eb2:	42a3      	cmp	r3, r4
 8002eb4:	bf04      	itt	eq
 8002eb6:	2301      	moveq	r3, #1
 8002eb8:	61a3      	streq	r3, [r4, #24]
 8002eba:	4620      	mov	r0, r4
 8002ebc:	f000 f820 	bl	8002f00 <__sfp>
 8002ec0:	6060      	str	r0, [r4, #4]
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	f000 f81c 	bl	8002f00 <__sfp>
 8002ec8:	60a0      	str	r0, [r4, #8]
 8002eca:	4620      	mov	r0, r4
 8002ecc:	f000 f818 	bl	8002f00 <__sfp>
 8002ed0:	2200      	movs	r2, #0
 8002ed2:	60e0      	str	r0, [r4, #12]
 8002ed4:	2104      	movs	r1, #4
 8002ed6:	6860      	ldr	r0, [r4, #4]
 8002ed8:	f7ff ff82 	bl	8002de0 <std>
 8002edc:	68a0      	ldr	r0, [r4, #8]
 8002ede:	2201      	movs	r2, #1
 8002ee0:	2109      	movs	r1, #9
 8002ee2:	f7ff ff7d 	bl	8002de0 <std>
 8002ee6:	68e0      	ldr	r0, [r4, #12]
 8002ee8:	2202      	movs	r2, #2
 8002eea:	2112      	movs	r1, #18
 8002eec:	f7ff ff78 	bl	8002de0 <std>
 8002ef0:	2301      	movs	r3, #1
 8002ef2:	61a3      	str	r3, [r4, #24]
 8002ef4:	e7d2      	b.n	8002e9c <__sinit+0xc>
 8002ef6:	bf00      	nop
 8002ef8:	080041e8 	.word	0x080041e8
 8002efc:	08002e29 	.word	0x08002e29

08002f00 <__sfp>:
 8002f00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f02:	4607      	mov	r7, r0
 8002f04:	f7ff ffac 	bl	8002e60 <__sfp_lock_acquire>
 8002f08:	4b1e      	ldr	r3, [pc, #120]	; (8002f84 <__sfp+0x84>)
 8002f0a:	681e      	ldr	r6, [r3, #0]
 8002f0c:	69b3      	ldr	r3, [r6, #24]
 8002f0e:	b913      	cbnz	r3, 8002f16 <__sfp+0x16>
 8002f10:	4630      	mov	r0, r6
 8002f12:	f7ff ffbd 	bl	8002e90 <__sinit>
 8002f16:	3648      	adds	r6, #72	; 0x48
 8002f18:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002f1c:	3b01      	subs	r3, #1
 8002f1e:	d503      	bpl.n	8002f28 <__sfp+0x28>
 8002f20:	6833      	ldr	r3, [r6, #0]
 8002f22:	b30b      	cbz	r3, 8002f68 <__sfp+0x68>
 8002f24:	6836      	ldr	r6, [r6, #0]
 8002f26:	e7f7      	b.n	8002f18 <__sfp+0x18>
 8002f28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002f2c:	b9d5      	cbnz	r5, 8002f64 <__sfp+0x64>
 8002f2e:	4b16      	ldr	r3, [pc, #88]	; (8002f88 <__sfp+0x88>)
 8002f30:	60e3      	str	r3, [r4, #12]
 8002f32:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002f36:	6665      	str	r5, [r4, #100]	; 0x64
 8002f38:	f000 f84c 	bl	8002fd4 <__retarget_lock_init_recursive>
 8002f3c:	f7ff ff96 	bl	8002e6c <__sfp_lock_release>
 8002f40:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002f44:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002f48:	6025      	str	r5, [r4, #0]
 8002f4a:	61a5      	str	r5, [r4, #24]
 8002f4c:	2208      	movs	r2, #8
 8002f4e:	4629      	mov	r1, r5
 8002f50:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002f54:	f7fe fc40 	bl	80017d8 <memset>
 8002f58:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002f5c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002f60:	4620      	mov	r0, r4
 8002f62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f64:	3468      	adds	r4, #104	; 0x68
 8002f66:	e7d9      	b.n	8002f1c <__sfp+0x1c>
 8002f68:	2104      	movs	r1, #4
 8002f6a:	4638      	mov	r0, r7
 8002f6c:	f7ff ff62 	bl	8002e34 <__sfmoreglue>
 8002f70:	4604      	mov	r4, r0
 8002f72:	6030      	str	r0, [r6, #0]
 8002f74:	2800      	cmp	r0, #0
 8002f76:	d1d5      	bne.n	8002f24 <__sfp+0x24>
 8002f78:	f7ff ff78 	bl	8002e6c <__sfp_lock_release>
 8002f7c:	230c      	movs	r3, #12
 8002f7e:	603b      	str	r3, [r7, #0]
 8002f80:	e7ee      	b.n	8002f60 <__sfp+0x60>
 8002f82:	bf00      	nop
 8002f84:	080041e8 	.word	0x080041e8
 8002f88:	ffff0001 	.word	0xffff0001

08002f8c <_fwalk_reent>:
 8002f8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f90:	4606      	mov	r6, r0
 8002f92:	4688      	mov	r8, r1
 8002f94:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002f98:	2700      	movs	r7, #0
 8002f9a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002f9e:	f1b9 0901 	subs.w	r9, r9, #1
 8002fa2:	d505      	bpl.n	8002fb0 <_fwalk_reent+0x24>
 8002fa4:	6824      	ldr	r4, [r4, #0]
 8002fa6:	2c00      	cmp	r4, #0
 8002fa8:	d1f7      	bne.n	8002f9a <_fwalk_reent+0xe>
 8002faa:	4638      	mov	r0, r7
 8002fac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002fb0:	89ab      	ldrh	r3, [r5, #12]
 8002fb2:	2b01      	cmp	r3, #1
 8002fb4:	d907      	bls.n	8002fc6 <_fwalk_reent+0x3a>
 8002fb6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002fba:	3301      	adds	r3, #1
 8002fbc:	d003      	beq.n	8002fc6 <_fwalk_reent+0x3a>
 8002fbe:	4629      	mov	r1, r5
 8002fc0:	4630      	mov	r0, r6
 8002fc2:	47c0      	blx	r8
 8002fc4:	4307      	orrs	r7, r0
 8002fc6:	3568      	adds	r5, #104	; 0x68
 8002fc8:	e7e9      	b.n	8002f9e <_fwalk_reent+0x12>
	...

08002fcc <_localeconv_r>:
 8002fcc:	4800      	ldr	r0, [pc, #0]	; (8002fd0 <_localeconv_r+0x4>)
 8002fce:	4770      	bx	lr
 8002fd0:	20000194 	.word	0x20000194

08002fd4 <__retarget_lock_init_recursive>:
 8002fd4:	4770      	bx	lr

08002fd6 <__retarget_lock_acquire_recursive>:
 8002fd6:	4770      	bx	lr

08002fd8 <__retarget_lock_release_recursive>:
 8002fd8:	4770      	bx	lr
	...

08002fdc <malloc>:
 8002fdc:	4b02      	ldr	r3, [pc, #8]	; (8002fe8 <malloc+0xc>)
 8002fde:	4601      	mov	r1, r0
 8002fe0:	6818      	ldr	r0, [r3, #0]
 8002fe2:	f000 bbef 	b.w	80037c4 <_malloc_r>
 8002fe6:	bf00      	nop
 8002fe8:	20000040 	.word	0x20000040

08002fec <memcpy>:
 8002fec:	440a      	add	r2, r1
 8002fee:	4291      	cmp	r1, r2
 8002ff0:	f100 33ff 	add.w	r3, r0, #4294967295
 8002ff4:	d100      	bne.n	8002ff8 <memcpy+0xc>
 8002ff6:	4770      	bx	lr
 8002ff8:	b510      	push	{r4, lr}
 8002ffa:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002ffe:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003002:	4291      	cmp	r1, r2
 8003004:	d1f9      	bne.n	8002ffa <memcpy+0xe>
 8003006:	bd10      	pop	{r4, pc}

08003008 <_Balloc>:
 8003008:	b570      	push	{r4, r5, r6, lr}
 800300a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800300c:	4604      	mov	r4, r0
 800300e:	460d      	mov	r5, r1
 8003010:	b976      	cbnz	r6, 8003030 <_Balloc+0x28>
 8003012:	2010      	movs	r0, #16
 8003014:	f7ff ffe2 	bl	8002fdc <malloc>
 8003018:	4602      	mov	r2, r0
 800301a:	6260      	str	r0, [r4, #36]	; 0x24
 800301c:	b920      	cbnz	r0, 8003028 <_Balloc+0x20>
 800301e:	4b18      	ldr	r3, [pc, #96]	; (8003080 <_Balloc+0x78>)
 8003020:	4818      	ldr	r0, [pc, #96]	; (8003084 <_Balloc+0x7c>)
 8003022:	2166      	movs	r1, #102	; 0x66
 8003024:	f000 fea8 	bl	8003d78 <__assert_func>
 8003028:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800302c:	6006      	str	r6, [r0, #0]
 800302e:	60c6      	str	r6, [r0, #12]
 8003030:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003032:	68f3      	ldr	r3, [r6, #12]
 8003034:	b183      	cbz	r3, 8003058 <_Balloc+0x50>
 8003036:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003038:	68db      	ldr	r3, [r3, #12]
 800303a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800303e:	b9b8      	cbnz	r0, 8003070 <_Balloc+0x68>
 8003040:	2101      	movs	r1, #1
 8003042:	fa01 f605 	lsl.w	r6, r1, r5
 8003046:	1d72      	adds	r2, r6, #5
 8003048:	0092      	lsls	r2, r2, #2
 800304a:	4620      	mov	r0, r4
 800304c:	f000 fb5a 	bl	8003704 <_calloc_r>
 8003050:	b160      	cbz	r0, 800306c <_Balloc+0x64>
 8003052:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003056:	e00e      	b.n	8003076 <_Balloc+0x6e>
 8003058:	2221      	movs	r2, #33	; 0x21
 800305a:	2104      	movs	r1, #4
 800305c:	4620      	mov	r0, r4
 800305e:	f000 fb51 	bl	8003704 <_calloc_r>
 8003062:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003064:	60f0      	str	r0, [r6, #12]
 8003066:	68db      	ldr	r3, [r3, #12]
 8003068:	2b00      	cmp	r3, #0
 800306a:	d1e4      	bne.n	8003036 <_Balloc+0x2e>
 800306c:	2000      	movs	r0, #0
 800306e:	bd70      	pop	{r4, r5, r6, pc}
 8003070:	6802      	ldr	r2, [r0, #0]
 8003072:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003076:	2300      	movs	r3, #0
 8003078:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800307c:	e7f7      	b.n	800306e <_Balloc+0x66>
 800307e:	bf00      	nop
 8003080:	0800422d 	.word	0x0800422d
 8003084:	08004314 	.word	0x08004314

08003088 <_Bfree>:
 8003088:	b570      	push	{r4, r5, r6, lr}
 800308a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800308c:	4605      	mov	r5, r0
 800308e:	460c      	mov	r4, r1
 8003090:	b976      	cbnz	r6, 80030b0 <_Bfree+0x28>
 8003092:	2010      	movs	r0, #16
 8003094:	f7ff ffa2 	bl	8002fdc <malloc>
 8003098:	4602      	mov	r2, r0
 800309a:	6268      	str	r0, [r5, #36]	; 0x24
 800309c:	b920      	cbnz	r0, 80030a8 <_Bfree+0x20>
 800309e:	4b09      	ldr	r3, [pc, #36]	; (80030c4 <_Bfree+0x3c>)
 80030a0:	4809      	ldr	r0, [pc, #36]	; (80030c8 <_Bfree+0x40>)
 80030a2:	218a      	movs	r1, #138	; 0x8a
 80030a4:	f000 fe68 	bl	8003d78 <__assert_func>
 80030a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80030ac:	6006      	str	r6, [r0, #0]
 80030ae:	60c6      	str	r6, [r0, #12]
 80030b0:	b13c      	cbz	r4, 80030c2 <_Bfree+0x3a>
 80030b2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80030b4:	6862      	ldr	r2, [r4, #4]
 80030b6:	68db      	ldr	r3, [r3, #12]
 80030b8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80030bc:	6021      	str	r1, [r4, #0]
 80030be:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80030c2:	bd70      	pop	{r4, r5, r6, pc}
 80030c4:	0800422d 	.word	0x0800422d
 80030c8:	08004314 	.word	0x08004314

080030cc <__multadd>:
 80030cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030d0:	690e      	ldr	r6, [r1, #16]
 80030d2:	4607      	mov	r7, r0
 80030d4:	4698      	mov	r8, r3
 80030d6:	460c      	mov	r4, r1
 80030d8:	f101 0014 	add.w	r0, r1, #20
 80030dc:	2300      	movs	r3, #0
 80030de:	6805      	ldr	r5, [r0, #0]
 80030e0:	b2a9      	uxth	r1, r5
 80030e2:	fb02 8101 	mla	r1, r2, r1, r8
 80030e6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 80030ea:	0c2d      	lsrs	r5, r5, #16
 80030ec:	fb02 c505 	mla	r5, r2, r5, ip
 80030f0:	b289      	uxth	r1, r1
 80030f2:	3301      	adds	r3, #1
 80030f4:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80030f8:	429e      	cmp	r6, r3
 80030fa:	f840 1b04 	str.w	r1, [r0], #4
 80030fe:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8003102:	dcec      	bgt.n	80030de <__multadd+0x12>
 8003104:	f1b8 0f00 	cmp.w	r8, #0
 8003108:	d022      	beq.n	8003150 <__multadd+0x84>
 800310a:	68a3      	ldr	r3, [r4, #8]
 800310c:	42b3      	cmp	r3, r6
 800310e:	dc19      	bgt.n	8003144 <__multadd+0x78>
 8003110:	6861      	ldr	r1, [r4, #4]
 8003112:	4638      	mov	r0, r7
 8003114:	3101      	adds	r1, #1
 8003116:	f7ff ff77 	bl	8003008 <_Balloc>
 800311a:	4605      	mov	r5, r0
 800311c:	b928      	cbnz	r0, 800312a <__multadd+0x5e>
 800311e:	4602      	mov	r2, r0
 8003120:	4b0d      	ldr	r3, [pc, #52]	; (8003158 <__multadd+0x8c>)
 8003122:	480e      	ldr	r0, [pc, #56]	; (800315c <__multadd+0x90>)
 8003124:	21b5      	movs	r1, #181	; 0xb5
 8003126:	f000 fe27 	bl	8003d78 <__assert_func>
 800312a:	6922      	ldr	r2, [r4, #16]
 800312c:	3202      	adds	r2, #2
 800312e:	f104 010c 	add.w	r1, r4, #12
 8003132:	0092      	lsls	r2, r2, #2
 8003134:	300c      	adds	r0, #12
 8003136:	f7ff ff59 	bl	8002fec <memcpy>
 800313a:	4621      	mov	r1, r4
 800313c:	4638      	mov	r0, r7
 800313e:	f7ff ffa3 	bl	8003088 <_Bfree>
 8003142:	462c      	mov	r4, r5
 8003144:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8003148:	3601      	adds	r6, #1
 800314a:	f8c3 8014 	str.w	r8, [r3, #20]
 800314e:	6126      	str	r6, [r4, #16]
 8003150:	4620      	mov	r0, r4
 8003152:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003156:	bf00      	nop
 8003158:	080042a3 	.word	0x080042a3
 800315c:	08004314 	.word	0x08004314

08003160 <__hi0bits>:
 8003160:	0c03      	lsrs	r3, r0, #16
 8003162:	041b      	lsls	r3, r3, #16
 8003164:	b9d3      	cbnz	r3, 800319c <__hi0bits+0x3c>
 8003166:	0400      	lsls	r0, r0, #16
 8003168:	2310      	movs	r3, #16
 800316a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800316e:	bf04      	itt	eq
 8003170:	0200      	lsleq	r0, r0, #8
 8003172:	3308      	addeq	r3, #8
 8003174:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003178:	bf04      	itt	eq
 800317a:	0100      	lsleq	r0, r0, #4
 800317c:	3304      	addeq	r3, #4
 800317e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003182:	bf04      	itt	eq
 8003184:	0080      	lsleq	r0, r0, #2
 8003186:	3302      	addeq	r3, #2
 8003188:	2800      	cmp	r0, #0
 800318a:	db05      	blt.n	8003198 <__hi0bits+0x38>
 800318c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003190:	f103 0301 	add.w	r3, r3, #1
 8003194:	bf08      	it	eq
 8003196:	2320      	moveq	r3, #32
 8003198:	4618      	mov	r0, r3
 800319a:	4770      	bx	lr
 800319c:	2300      	movs	r3, #0
 800319e:	e7e4      	b.n	800316a <__hi0bits+0xa>

080031a0 <__lo0bits>:
 80031a0:	6803      	ldr	r3, [r0, #0]
 80031a2:	f013 0207 	ands.w	r2, r3, #7
 80031a6:	4601      	mov	r1, r0
 80031a8:	d00b      	beq.n	80031c2 <__lo0bits+0x22>
 80031aa:	07da      	lsls	r2, r3, #31
 80031ac:	d424      	bmi.n	80031f8 <__lo0bits+0x58>
 80031ae:	0798      	lsls	r0, r3, #30
 80031b0:	bf49      	itett	mi
 80031b2:	085b      	lsrmi	r3, r3, #1
 80031b4:	089b      	lsrpl	r3, r3, #2
 80031b6:	2001      	movmi	r0, #1
 80031b8:	600b      	strmi	r3, [r1, #0]
 80031ba:	bf5c      	itt	pl
 80031bc:	600b      	strpl	r3, [r1, #0]
 80031be:	2002      	movpl	r0, #2
 80031c0:	4770      	bx	lr
 80031c2:	b298      	uxth	r0, r3
 80031c4:	b9b0      	cbnz	r0, 80031f4 <__lo0bits+0x54>
 80031c6:	0c1b      	lsrs	r3, r3, #16
 80031c8:	2010      	movs	r0, #16
 80031ca:	f013 0fff 	tst.w	r3, #255	; 0xff
 80031ce:	bf04      	itt	eq
 80031d0:	0a1b      	lsreq	r3, r3, #8
 80031d2:	3008      	addeq	r0, #8
 80031d4:	071a      	lsls	r2, r3, #28
 80031d6:	bf04      	itt	eq
 80031d8:	091b      	lsreq	r3, r3, #4
 80031da:	3004      	addeq	r0, #4
 80031dc:	079a      	lsls	r2, r3, #30
 80031de:	bf04      	itt	eq
 80031e0:	089b      	lsreq	r3, r3, #2
 80031e2:	3002      	addeq	r0, #2
 80031e4:	07da      	lsls	r2, r3, #31
 80031e6:	d403      	bmi.n	80031f0 <__lo0bits+0x50>
 80031e8:	085b      	lsrs	r3, r3, #1
 80031ea:	f100 0001 	add.w	r0, r0, #1
 80031ee:	d005      	beq.n	80031fc <__lo0bits+0x5c>
 80031f0:	600b      	str	r3, [r1, #0]
 80031f2:	4770      	bx	lr
 80031f4:	4610      	mov	r0, r2
 80031f6:	e7e8      	b.n	80031ca <__lo0bits+0x2a>
 80031f8:	2000      	movs	r0, #0
 80031fa:	4770      	bx	lr
 80031fc:	2020      	movs	r0, #32
 80031fe:	4770      	bx	lr

08003200 <__i2b>:
 8003200:	b510      	push	{r4, lr}
 8003202:	460c      	mov	r4, r1
 8003204:	2101      	movs	r1, #1
 8003206:	f7ff feff 	bl	8003008 <_Balloc>
 800320a:	4602      	mov	r2, r0
 800320c:	b928      	cbnz	r0, 800321a <__i2b+0x1a>
 800320e:	4b05      	ldr	r3, [pc, #20]	; (8003224 <__i2b+0x24>)
 8003210:	4805      	ldr	r0, [pc, #20]	; (8003228 <__i2b+0x28>)
 8003212:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003216:	f000 fdaf 	bl	8003d78 <__assert_func>
 800321a:	2301      	movs	r3, #1
 800321c:	6144      	str	r4, [r0, #20]
 800321e:	6103      	str	r3, [r0, #16]
 8003220:	bd10      	pop	{r4, pc}
 8003222:	bf00      	nop
 8003224:	080042a3 	.word	0x080042a3
 8003228:	08004314 	.word	0x08004314

0800322c <__multiply>:
 800322c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003230:	4614      	mov	r4, r2
 8003232:	690a      	ldr	r2, [r1, #16]
 8003234:	6923      	ldr	r3, [r4, #16]
 8003236:	429a      	cmp	r2, r3
 8003238:	bfb8      	it	lt
 800323a:	460b      	movlt	r3, r1
 800323c:	460d      	mov	r5, r1
 800323e:	bfbc      	itt	lt
 8003240:	4625      	movlt	r5, r4
 8003242:	461c      	movlt	r4, r3
 8003244:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8003248:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800324c:	68ab      	ldr	r3, [r5, #8]
 800324e:	6869      	ldr	r1, [r5, #4]
 8003250:	eb0a 0709 	add.w	r7, sl, r9
 8003254:	42bb      	cmp	r3, r7
 8003256:	b085      	sub	sp, #20
 8003258:	bfb8      	it	lt
 800325a:	3101      	addlt	r1, #1
 800325c:	f7ff fed4 	bl	8003008 <_Balloc>
 8003260:	b930      	cbnz	r0, 8003270 <__multiply+0x44>
 8003262:	4602      	mov	r2, r0
 8003264:	4b42      	ldr	r3, [pc, #264]	; (8003370 <__multiply+0x144>)
 8003266:	4843      	ldr	r0, [pc, #268]	; (8003374 <__multiply+0x148>)
 8003268:	f240 115d 	movw	r1, #349	; 0x15d
 800326c:	f000 fd84 	bl	8003d78 <__assert_func>
 8003270:	f100 0614 	add.w	r6, r0, #20
 8003274:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8003278:	4633      	mov	r3, r6
 800327a:	2200      	movs	r2, #0
 800327c:	4543      	cmp	r3, r8
 800327e:	d31e      	bcc.n	80032be <__multiply+0x92>
 8003280:	f105 0c14 	add.w	ip, r5, #20
 8003284:	f104 0314 	add.w	r3, r4, #20
 8003288:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 800328c:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8003290:	9202      	str	r2, [sp, #8]
 8003292:	ebac 0205 	sub.w	r2, ip, r5
 8003296:	3a15      	subs	r2, #21
 8003298:	f022 0203 	bic.w	r2, r2, #3
 800329c:	3204      	adds	r2, #4
 800329e:	f105 0115 	add.w	r1, r5, #21
 80032a2:	458c      	cmp	ip, r1
 80032a4:	bf38      	it	cc
 80032a6:	2204      	movcc	r2, #4
 80032a8:	9201      	str	r2, [sp, #4]
 80032aa:	9a02      	ldr	r2, [sp, #8]
 80032ac:	9303      	str	r3, [sp, #12]
 80032ae:	429a      	cmp	r2, r3
 80032b0:	d808      	bhi.n	80032c4 <__multiply+0x98>
 80032b2:	2f00      	cmp	r7, #0
 80032b4:	dc55      	bgt.n	8003362 <__multiply+0x136>
 80032b6:	6107      	str	r7, [r0, #16]
 80032b8:	b005      	add	sp, #20
 80032ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032be:	f843 2b04 	str.w	r2, [r3], #4
 80032c2:	e7db      	b.n	800327c <__multiply+0x50>
 80032c4:	f8b3 a000 	ldrh.w	sl, [r3]
 80032c8:	f1ba 0f00 	cmp.w	sl, #0
 80032cc:	d020      	beq.n	8003310 <__multiply+0xe4>
 80032ce:	f105 0e14 	add.w	lr, r5, #20
 80032d2:	46b1      	mov	r9, r6
 80032d4:	2200      	movs	r2, #0
 80032d6:	f85e 4b04 	ldr.w	r4, [lr], #4
 80032da:	f8d9 b000 	ldr.w	fp, [r9]
 80032de:	b2a1      	uxth	r1, r4
 80032e0:	fa1f fb8b 	uxth.w	fp, fp
 80032e4:	fb0a b101 	mla	r1, sl, r1, fp
 80032e8:	4411      	add	r1, r2
 80032ea:	f8d9 2000 	ldr.w	r2, [r9]
 80032ee:	0c24      	lsrs	r4, r4, #16
 80032f0:	0c12      	lsrs	r2, r2, #16
 80032f2:	fb0a 2404 	mla	r4, sl, r4, r2
 80032f6:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 80032fa:	b289      	uxth	r1, r1
 80032fc:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8003300:	45f4      	cmp	ip, lr
 8003302:	f849 1b04 	str.w	r1, [r9], #4
 8003306:	ea4f 4214 	mov.w	r2, r4, lsr #16
 800330a:	d8e4      	bhi.n	80032d6 <__multiply+0xaa>
 800330c:	9901      	ldr	r1, [sp, #4]
 800330e:	5072      	str	r2, [r6, r1]
 8003310:	9a03      	ldr	r2, [sp, #12]
 8003312:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003316:	3304      	adds	r3, #4
 8003318:	f1b9 0f00 	cmp.w	r9, #0
 800331c:	d01f      	beq.n	800335e <__multiply+0x132>
 800331e:	6834      	ldr	r4, [r6, #0]
 8003320:	f105 0114 	add.w	r1, r5, #20
 8003324:	46b6      	mov	lr, r6
 8003326:	f04f 0a00 	mov.w	sl, #0
 800332a:	880a      	ldrh	r2, [r1, #0]
 800332c:	f8be b002 	ldrh.w	fp, [lr, #2]
 8003330:	fb09 b202 	mla	r2, r9, r2, fp
 8003334:	4492      	add	sl, r2
 8003336:	b2a4      	uxth	r4, r4
 8003338:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800333c:	f84e 4b04 	str.w	r4, [lr], #4
 8003340:	f851 4b04 	ldr.w	r4, [r1], #4
 8003344:	f8be 2000 	ldrh.w	r2, [lr]
 8003348:	0c24      	lsrs	r4, r4, #16
 800334a:	fb09 2404 	mla	r4, r9, r4, r2
 800334e:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8003352:	458c      	cmp	ip, r1
 8003354:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003358:	d8e7      	bhi.n	800332a <__multiply+0xfe>
 800335a:	9a01      	ldr	r2, [sp, #4]
 800335c:	50b4      	str	r4, [r6, r2]
 800335e:	3604      	adds	r6, #4
 8003360:	e7a3      	b.n	80032aa <__multiply+0x7e>
 8003362:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003366:	2b00      	cmp	r3, #0
 8003368:	d1a5      	bne.n	80032b6 <__multiply+0x8a>
 800336a:	3f01      	subs	r7, #1
 800336c:	e7a1      	b.n	80032b2 <__multiply+0x86>
 800336e:	bf00      	nop
 8003370:	080042a3 	.word	0x080042a3
 8003374:	08004314 	.word	0x08004314

08003378 <__pow5mult>:
 8003378:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800337c:	4615      	mov	r5, r2
 800337e:	f012 0203 	ands.w	r2, r2, #3
 8003382:	4606      	mov	r6, r0
 8003384:	460f      	mov	r7, r1
 8003386:	d007      	beq.n	8003398 <__pow5mult+0x20>
 8003388:	4c25      	ldr	r4, [pc, #148]	; (8003420 <__pow5mult+0xa8>)
 800338a:	3a01      	subs	r2, #1
 800338c:	2300      	movs	r3, #0
 800338e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003392:	f7ff fe9b 	bl	80030cc <__multadd>
 8003396:	4607      	mov	r7, r0
 8003398:	10ad      	asrs	r5, r5, #2
 800339a:	d03d      	beq.n	8003418 <__pow5mult+0xa0>
 800339c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800339e:	b97c      	cbnz	r4, 80033c0 <__pow5mult+0x48>
 80033a0:	2010      	movs	r0, #16
 80033a2:	f7ff fe1b 	bl	8002fdc <malloc>
 80033a6:	4602      	mov	r2, r0
 80033a8:	6270      	str	r0, [r6, #36]	; 0x24
 80033aa:	b928      	cbnz	r0, 80033b8 <__pow5mult+0x40>
 80033ac:	4b1d      	ldr	r3, [pc, #116]	; (8003424 <__pow5mult+0xac>)
 80033ae:	481e      	ldr	r0, [pc, #120]	; (8003428 <__pow5mult+0xb0>)
 80033b0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80033b4:	f000 fce0 	bl	8003d78 <__assert_func>
 80033b8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80033bc:	6004      	str	r4, [r0, #0]
 80033be:	60c4      	str	r4, [r0, #12]
 80033c0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80033c4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80033c8:	b94c      	cbnz	r4, 80033de <__pow5mult+0x66>
 80033ca:	f240 2171 	movw	r1, #625	; 0x271
 80033ce:	4630      	mov	r0, r6
 80033d0:	f7ff ff16 	bl	8003200 <__i2b>
 80033d4:	2300      	movs	r3, #0
 80033d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80033da:	4604      	mov	r4, r0
 80033dc:	6003      	str	r3, [r0, #0]
 80033de:	f04f 0900 	mov.w	r9, #0
 80033e2:	07eb      	lsls	r3, r5, #31
 80033e4:	d50a      	bpl.n	80033fc <__pow5mult+0x84>
 80033e6:	4639      	mov	r1, r7
 80033e8:	4622      	mov	r2, r4
 80033ea:	4630      	mov	r0, r6
 80033ec:	f7ff ff1e 	bl	800322c <__multiply>
 80033f0:	4639      	mov	r1, r7
 80033f2:	4680      	mov	r8, r0
 80033f4:	4630      	mov	r0, r6
 80033f6:	f7ff fe47 	bl	8003088 <_Bfree>
 80033fa:	4647      	mov	r7, r8
 80033fc:	106d      	asrs	r5, r5, #1
 80033fe:	d00b      	beq.n	8003418 <__pow5mult+0xa0>
 8003400:	6820      	ldr	r0, [r4, #0]
 8003402:	b938      	cbnz	r0, 8003414 <__pow5mult+0x9c>
 8003404:	4622      	mov	r2, r4
 8003406:	4621      	mov	r1, r4
 8003408:	4630      	mov	r0, r6
 800340a:	f7ff ff0f 	bl	800322c <__multiply>
 800340e:	6020      	str	r0, [r4, #0]
 8003410:	f8c0 9000 	str.w	r9, [r0]
 8003414:	4604      	mov	r4, r0
 8003416:	e7e4      	b.n	80033e2 <__pow5mult+0x6a>
 8003418:	4638      	mov	r0, r7
 800341a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800341e:	bf00      	nop
 8003420:	08004468 	.word	0x08004468
 8003424:	0800422d 	.word	0x0800422d
 8003428:	08004314 	.word	0x08004314

0800342c <__lshift>:
 800342c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003430:	460c      	mov	r4, r1
 8003432:	6849      	ldr	r1, [r1, #4]
 8003434:	6923      	ldr	r3, [r4, #16]
 8003436:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800343a:	68a3      	ldr	r3, [r4, #8]
 800343c:	4607      	mov	r7, r0
 800343e:	4691      	mov	r9, r2
 8003440:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003444:	f108 0601 	add.w	r6, r8, #1
 8003448:	42b3      	cmp	r3, r6
 800344a:	db0b      	blt.n	8003464 <__lshift+0x38>
 800344c:	4638      	mov	r0, r7
 800344e:	f7ff fddb 	bl	8003008 <_Balloc>
 8003452:	4605      	mov	r5, r0
 8003454:	b948      	cbnz	r0, 800346a <__lshift+0x3e>
 8003456:	4602      	mov	r2, r0
 8003458:	4b28      	ldr	r3, [pc, #160]	; (80034fc <__lshift+0xd0>)
 800345a:	4829      	ldr	r0, [pc, #164]	; (8003500 <__lshift+0xd4>)
 800345c:	f240 11d9 	movw	r1, #473	; 0x1d9
 8003460:	f000 fc8a 	bl	8003d78 <__assert_func>
 8003464:	3101      	adds	r1, #1
 8003466:	005b      	lsls	r3, r3, #1
 8003468:	e7ee      	b.n	8003448 <__lshift+0x1c>
 800346a:	2300      	movs	r3, #0
 800346c:	f100 0114 	add.w	r1, r0, #20
 8003470:	f100 0210 	add.w	r2, r0, #16
 8003474:	4618      	mov	r0, r3
 8003476:	4553      	cmp	r3, sl
 8003478:	db33      	blt.n	80034e2 <__lshift+0xb6>
 800347a:	6920      	ldr	r0, [r4, #16]
 800347c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003480:	f104 0314 	add.w	r3, r4, #20
 8003484:	f019 091f 	ands.w	r9, r9, #31
 8003488:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800348c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003490:	d02b      	beq.n	80034ea <__lshift+0xbe>
 8003492:	f1c9 0e20 	rsb	lr, r9, #32
 8003496:	468a      	mov	sl, r1
 8003498:	2200      	movs	r2, #0
 800349a:	6818      	ldr	r0, [r3, #0]
 800349c:	fa00 f009 	lsl.w	r0, r0, r9
 80034a0:	4302      	orrs	r2, r0
 80034a2:	f84a 2b04 	str.w	r2, [sl], #4
 80034a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80034aa:	459c      	cmp	ip, r3
 80034ac:	fa22 f20e 	lsr.w	r2, r2, lr
 80034b0:	d8f3      	bhi.n	800349a <__lshift+0x6e>
 80034b2:	ebac 0304 	sub.w	r3, ip, r4
 80034b6:	3b15      	subs	r3, #21
 80034b8:	f023 0303 	bic.w	r3, r3, #3
 80034bc:	3304      	adds	r3, #4
 80034be:	f104 0015 	add.w	r0, r4, #21
 80034c2:	4584      	cmp	ip, r0
 80034c4:	bf38      	it	cc
 80034c6:	2304      	movcc	r3, #4
 80034c8:	50ca      	str	r2, [r1, r3]
 80034ca:	b10a      	cbz	r2, 80034d0 <__lshift+0xa4>
 80034cc:	f108 0602 	add.w	r6, r8, #2
 80034d0:	3e01      	subs	r6, #1
 80034d2:	4638      	mov	r0, r7
 80034d4:	612e      	str	r6, [r5, #16]
 80034d6:	4621      	mov	r1, r4
 80034d8:	f7ff fdd6 	bl	8003088 <_Bfree>
 80034dc:	4628      	mov	r0, r5
 80034de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034e2:	f842 0f04 	str.w	r0, [r2, #4]!
 80034e6:	3301      	adds	r3, #1
 80034e8:	e7c5      	b.n	8003476 <__lshift+0x4a>
 80034ea:	3904      	subs	r1, #4
 80034ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80034f0:	f841 2f04 	str.w	r2, [r1, #4]!
 80034f4:	459c      	cmp	ip, r3
 80034f6:	d8f9      	bhi.n	80034ec <__lshift+0xc0>
 80034f8:	e7ea      	b.n	80034d0 <__lshift+0xa4>
 80034fa:	bf00      	nop
 80034fc:	080042a3 	.word	0x080042a3
 8003500:	08004314 	.word	0x08004314

08003504 <__mcmp>:
 8003504:	b530      	push	{r4, r5, lr}
 8003506:	6902      	ldr	r2, [r0, #16]
 8003508:	690c      	ldr	r4, [r1, #16]
 800350a:	1b12      	subs	r2, r2, r4
 800350c:	d10e      	bne.n	800352c <__mcmp+0x28>
 800350e:	f100 0314 	add.w	r3, r0, #20
 8003512:	3114      	adds	r1, #20
 8003514:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003518:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800351c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003520:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003524:	42a5      	cmp	r5, r4
 8003526:	d003      	beq.n	8003530 <__mcmp+0x2c>
 8003528:	d305      	bcc.n	8003536 <__mcmp+0x32>
 800352a:	2201      	movs	r2, #1
 800352c:	4610      	mov	r0, r2
 800352e:	bd30      	pop	{r4, r5, pc}
 8003530:	4283      	cmp	r3, r0
 8003532:	d3f3      	bcc.n	800351c <__mcmp+0x18>
 8003534:	e7fa      	b.n	800352c <__mcmp+0x28>
 8003536:	f04f 32ff 	mov.w	r2, #4294967295
 800353a:	e7f7      	b.n	800352c <__mcmp+0x28>

0800353c <__mdiff>:
 800353c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003540:	460c      	mov	r4, r1
 8003542:	4606      	mov	r6, r0
 8003544:	4611      	mov	r1, r2
 8003546:	4620      	mov	r0, r4
 8003548:	4617      	mov	r7, r2
 800354a:	f7ff ffdb 	bl	8003504 <__mcmp>
 800354e:	1e05      	subs	r5, r0, #0
 8003550:	d110      	bne.n	8003574 <__mdiff+0x38>
 8003552:	4629      	mov	r1, r5
 8003554:	4630      	mov	r0, r6
 8003556:	f7ff fd57 	bl	8003008 <_Balloc>
 800355a:	b930      	cbnz	r0, 800356a <__mdiff+0x2e>
 800355c:	4b39      	ldr	r3, [pc, #228]	; (8003644 <__mdiff+0x108>)
 800355e:	4602      	mov	r2, r0
 8003560:	f240 2132 	movw	r1, #562	; 0x232
 8003564:	4838      	ldr	r0, [pc, #224]	; (8003648 <__mdiff+0x10c>)
 8003566:	f000 fc07 	bl	8003d78 <__assert_func>
 800356a:	2301      	movs	r3, #1
 800356c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003570:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003574:	bfa4      	itt	ge
 8003576:	463b      	movge	r3, r7
 8003578:	4627      	movge	r7, r4
 800357a:	4630      	mov	r0, r6
 800357c:	6879      	ldr	r1, [r7, #4]
 800357e:	bfa6      	itte	ge
 8003580:	461c      	movge	r4, r3
 8003582:	2500      	movge	r5, #0
 8003584:	2501      	movlt	r5, #1
 8003586:	f7ff fd3f 	bl	8003008 <_Balloc>
 800358a:	b920      	cbnz	r0, 8003596 <__mdiff+0x5a>
 800358c:	4b2d      	ldr	r3, [pc, #180]	; (8003644 <__mdiff+0x108>)
 800358e:	4602      	mov	r2, r0
 8003590:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003594:	e7e6      	b.n	8003564 <__mdiff+0x28>
 8003596:	693e      	ldr	r6, [r7, #16]
 8003598:	60c5      	str	r5, [r0, #12]
 800359a:	6925      	ldr	r5, [r4, #16]
 800359c:	f107 0114 	add.w	r1, r7, #20
 80035a0:	f104 0914 	add.w	r9, r4, #20
 80035a4:	f100 0e14 	add.w	lr, r0, #20
 80035a8:	f107 0210 	add.w	r2, r7, #16
 80035ac:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 80035b0:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80035b4:	46f2      	mov	sl, lr
 80035b6:	2700      	movs	r7, #0
 80035b8:	f859 3b04 	ldr.w	r3, [r9], #4
 80035bc:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80035c0:	fa1f f883 	uxth.w	r8, r3
 80035c4:	fa17 f78b 	uxtah	r7, r7, fp
 80035c8:	0c1b      	lsrs	r3, r3, #16
 80035ca:	eba7 0808 	sub.w	r8, r7, r8
 80035ce:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80035d2:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80035d6:	fa1f f888 	uxth.w	r8, r8
 80035da:	141f      	asrs	r7, r3, #16
 80035dc:	454d      	cmp	r5, r9
 80035de:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80035e2:	f84a 3b04 	str.w	r3, [sl], #4
 80035e6:	d8e7      	bhi.n	80035b8 <__mdiff+0x7c>
 80035e8:	1b2b      	subs	r3, r5, r4
 80035ea:	3b15      	subs	r3, #21
 80035ec:	f023 0303 	bic.w	r3, r3, #3
 80035f0:	3304      	adds	r3, #4
 80035f2:	3415      	adds	r4, #21
 80035f4:	42a5      	cmp	r5, r4
 80035f6:	bf38      	it	cc
 80035f8:	2304      	movcc	r3, #4
 80035fa:	4419      	add	r1, r3
 80035fc:	4473      	add	r3, lr
 80035fe:	469e      	mov	lr, r3
 8003600:	460d      	mov	r5, r1
 8003602:	4565      	cmp	r5, ip
 8003604:	d30e      	bcc.n	8003624 <__mdiff+0xe8>
 8003606:	f10c 0203 	add.w	r2, ip, #3
 800360a:	1a52      	subs	r2, r2, r1
 800360c:	f022 0203 	bic.w	r2, r2, #3
 8003610:	3903      	subs	r1, #3
 8003612:	458c      	cmp	ip, r1
 8003614:	bf38      	it	cc
 8003616:	2200      	movcc	r2, #0
 8003618:	441a      	add	r2, r3
 800361a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800361e:	b17b      	cbz	r3, 8003640 <__mdiff+0x104>
 8003620:	6106      	str	r6, [r0, #16]
 8003622:	e7a5      	b.n	8003570 <__mdiff+0x34>
 8003624:	f855 8b04 	ldr.w	r8, [r5], #4
 8003628:	fa17 f488 	uxtah	r4, r7, r8
 800362c:	1422      	asrs	r2, r4, #16
 800362e:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 8003632:	b2a4      	uxth	r4, r4
 8003634:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8003638:	f84e 4b04 	str.w	r4, [lr], #4
 800363c:	1417      	asrs	r7, r2, #16
 800363e:	e7e0      	b.n	8003602 <__mdiff+0xc6>
 8003640:	3e01      	subs	r6, #1
 8003642:	e7ea      	b.n	800361a <__mdiff+0xde>
 8003644:	080042a3 	.word	0x080042a3
 8003648:	08004314 	.word	0x08004314

0800364c <__d2b>:
 800364c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003650:	4689      	mov	r9, r1
 8003652:	2101      	movs	r1, #1
 8003654:	ec57 6b10 	vmov	r6, r7, d0
 8003658:	4690      	mov	r8, r2
 800365a:	f7ff fcd5 	bl	8003008 <_Balloc>
 800365e:	4604      	mov	r4, r0
 8003660:	b930      	cbnz	r0, 8003670 <__d2b+0x24>
 8003662:	4602      	mov	r2, r0
 8003664:	4b25      	ldr	r3, [pc, #148]	; (80036fc <__d2b+0xb0>)
 8003666:	4826      	ldr	r0, [pc, #152]	; (8003700 <__d2b+0xb4>)
 8003668:	f240 310a 	movw	r1, #778	; 0x30a
 800366c:	f000 fb84 	bl	8003d78 <__assert_func>
 8003670:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8003674:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003678:	bb35      	cbnz	r5, 80036c8 <__d2b+0x7c>
 800367a:	2e00      	cmp	r6, #0
 800367c:	9301      	str	r3, [sp, #4]
 800367e:	d028      	beq.n	80036d2 <__d2b+0x86>
 8003680:	4668      	mov	r0, sp
 8003682:	9600      	str	r6, [sp, #0]
 8003684:	f7ff fd8c 	bl	80031a0 <__lo0bits>
 8003688:	9900      	ldr	r1, [sp, #0]
 800368a:	b300      	cbz	r0, 80036ce <__d2b+0x82>
 800368c:	9a01      	ldr	r2, [sp, #4]
 800368e:	f1c0 0320 	rsb	r3, r0, #32
 8003692:	fa02 f303 	lsl.w	r3, r2, r3
 8003696:	430b      	orrs	r3, r1
 8003698:	40c2      	lsrs	r2, r0
 800369a:	6163      	str	r3, [r4, #20]
 800369c:	9201      	str	r2, [sp, #4]
 800369e:	9b01      	ldr	r3, [sp, #4]
 80036a0:	61a3      	str	r3, [r4, #24]
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	bf14      	ite	ne
 80036a6:	2202      	movne	r2, #2
 80036a8:	2201      	moveq	r2, #1
 80036aa:	6122      	str	r2, [r4, #16]
 80036ac:	b1d5      	cbz	r5, 80036e4 <__d2b+0x98>
 80036ae:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80036b2:	4405      	add	r5, r0
 80036b4:	f8c9 5000 	str.w	r5, [r9]
 80036b8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80036bc:	f8c8 0000 	str.w	r0, [r8]
 80036c0:	4620      	mov	r0, r4
 80036c2:	b003      	add	sp, #12
 80036c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036c8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80036cc:	e7d5      	b.n	800367a <__d2b+0x2e>
 80036ce:	6161      	str	r1, [r4, #20]
 80036d0:	e7e5      	b.n	800369e <__d2b+0x52>
 80036d2:	a801      	add	r0, sp, #4
 80036d4:	f7ff fd64 	bl	80031a0 <__lo0bits>
 80036d8:	9b01      	ldr	r3, [sp, #4]
 80036da:	6163      	str	r3, [r4, #20]
 80036dc:	2201      	movs	r2, #1
 80036de:	6122      	str	r2, [r4, #16]
 80036e0:	3020      	adds	r0, #32
 80036e2:	e7e3      	b.n	80036ac <__d2b+0x60>
 80036e4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80036e8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80036ec:	f8c9 0000 	str.w	r0, [r9]
 80036f0:	6918      	ldr	r0, [r3, #16]
 80036f2:	f7ff fd35 	bl	8003160 <__hi0bits>
 80036f6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80036fa:	e7df      	b.n	80036bc <__d2b+0x70>
 80036fc:	080042a3 	.word	0x080042a3
 8003700:	08004314 	.word	0x08004314

08003704 <_calloc_r>:
 8003704:	b513      	push	{r0, r1, r4, lr}
 8003706:	434a      	muls	r2, r1
 8003708:	4611      	mov	r1, r2
 800370a:	9201      	str	r2, [sp, #4]
 800370c:	f000 f85a 	bl	80037c4 <_malloc_r>
 8003710:	4604      	mov	r4, r0
 8003712:	b118      	cbz	r0, 800371c <_calloc_r+0x18>
 8003714:	9a01      	ldr	r2, [sp, #4]
 8003716:	2100      	movs	r1, #0
 8003718:	f7fe f85e 	bl	80017d8 <memset>
 800371c:	4620      	mov	r0, r4
 800371e:	b002      	add	sp, #8
 8003720:	bd10      	pop	{r4, pc}
	...

08003724 <_free_r>:
 8003724:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003726:	2900      	cmp	r1, #0
 8003728:	d048      	beq.n	80037bc <_free_r+0x98>
 800372a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800372e:	9001      	str	r0, [sp, #4]
 8003730:	2b00      	cmp	r3, #0
 8003732:	f1a1 0404 	sub.w	r4, r1, #4
 8003736:	bfb8      	it	lt
 8003738:	18e4      	addlt	r4, r4, r3
 800373a:	f000 fca7 	bl	800408c <__malloc_lock>
 800373e:	4a20      	ldr	r2, [pc, #128]	; (80037c0 <_free_r+0x9c>)
 8003740:	9801      	ldr	r0, [sp, #4]
 8003742:	6813      	ldr	r3, [r2, #0]
 8003744:	4615      	mov	r5, r2
 8003746:	b933      	cbnz	r3, 8003756 <_free_r+0x32>
 8003748:	6063      	str	r3, [r4, #4]
 800374a:	6014      	str	r4, [r2, #0]
 800374c:	b003      	add	sp, #12
 800374e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003752:	f000 bca1 	b.w	8004098 <__malloc_unlock>
 8003756:	42a3      	cmp	r3, r4
 8003758:	d90b      	bls.n	8003772 <_free_r+0x4e>
 800375a:	6821      	ldr	r1, [r4, #0]
 800375c:	1862      	adds	r2, r4, r1
 800375e:	4293      	cmp	r3, r2
 8003760:	bf04      	itt	eq
 8003762:	681a      	ldreq	r2, [r3, #0]
 8003764:	685b      	ldreq	r3, [r3, #4]
 8003766:	6063      	str	r3, [r4, #4]
 8003768:	bf04      	itt	eq
 800376a:	1852      	addeq	r2, r2, r1
 800376c:	6022      	streq	r2, [r4, #0]
 800376e:	602c      	str	r4, [r5, #0]
 8003770:	e7ec      	b.n	800374c <_free_r+0x28>
 8003772:	461a      	mov	r2, r3
 8003774:	685b      	ldr	r3, [r3, #4]
 8003776:	b10b      	cbz	r3, 800377c <_free_r+0x58>
 8003778:	42a3      	cmp	r3, r4
 800377a:	d9fa      	bls.n	8003772 <_free_r+0x4e>
 800377c:	6811      	ldr	r1, [r2, #0]
 800377e:	1855      	adds	r5, r2, r1
 8003780:	42a5      	cmp	r5, r4
 8003782:	d10b      	bne.n	800379c <_free_r+0x78>
 8003784:	6824      	ldr	r4, [r4, #0]
 8003786:	4421      	add	r1, r4
 8003788:	1854      	adds	r4, r2, r1
 800378a:	42a3      	cmp	r3, r4
 800378c:	6011      	str	r1, [r2, #0]
 800378e:	d1dd      	bne.n	800374c <_free_r+0x28>
 8003790:	681c      	ldr	r4, [r3, #0]
 8003792:	685b      	ldr	r3, [r3, #4]
 8003794:	6053      	str	r3, [r2, #4]
 8003796:	4421      	add	r1, r4
 8003798:	6011      	str	r1, [r2, #0]
 800379a:	e7d7      	b.n	800374c <_free_r+0x28>
 800379c:	d902      	bls.n	80037a4 <_free_r+0x80>
 800379e:	230c      	movs	r3, #12
 80037a0:	6003      	str	r3, [r0, #0]
 80037a2:	e7d3      	b.n	800374c <_free_r+0x28>
 80037a4:	6825      	ldr	r5, [r4, #0]
 80037a6:	1961      	adds	r1, r4, r5
 80037a8:	428b      	cmp	r3, r1
 80037aa:	bf04      	itt	eq
 80037ac:	6819      	ldreq	r1, [r3, #0]
 80037ae:	685b      	ldreq	r3, [r3, #4]
 80037b0:	6063      	str	r3, [r4, #4]
 80037b2:	bf04      	itt	eq
 80037b4:	1949      	addeq	r1, r1, r5
 80037b6:	6021      	streq	r1, [r4, #0]
 80037b8:	6054      	str	r4, [r2, #4]
 80037ba:	e7c7      	b.n	800374c <_free_r+0x28>
 80037bc:	b003      	add	sp, #12
 80037be:	bd30      	pop	{r4, r5, pc}
 80037c0:	20000230 	.word	0x20000230

080037c4 <_malloc_r>:
 80037c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037c6:	1ccd      	adds	r5, r1, #3
 80037c8:	f025 0503 	bic.w	r5, r5, #3
 80037cc:	3508      	adds	r5, #8
 80037ce:	2d0c      	cmp	r5, #12
 80037d0:	bf38      	it	cc
 80037d2:	250c      	movcc	r5, #12
 80037d4:	2d00      	cmp	r5, #0
 80037d6:	4606      	mov	r6, r0
 80037d8:	db01      	blt.n	80037de <_malloc_r+0x1a>
 80037da:	42a9      	cmp	r1, r5
 80037dc:	d903      	bls.n	80037e6 <_malloc_r+0x22>
 80037de:	230c      	movs	r3, #12
 80037e0:	6033      	str	r3, [r6, #0]
 80037e2:	2000      	movs	r0, #0
 80037e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037e6:	f000 fc51 	bl	800408c <__malloc_lock>
 80037ea:	4921      	ldr	r1, [pc, #132]	; (8003870 <_malloc_r+0xac>)
 80037ec:	680a      	ldr	r2, [r1, #0]
 80037ee:	4614      	mov	r4, r2
 80037f0:	b99c      	cbnz	r4, 800381a <_malloc_r+0x56>
 80037f2:	4f20      	ldr	r7, [pc, #128]	; (8003874 <_malloc_r+0xb0>)
 80037f4:	683b      	ldr	r3, [r7, #0]
 80037f6:	b923      	cbnz	r3, 8003802 <_malloc_r+0x3e>
 80037f8:	4621      	mov	r1, r4
 80037fa:	4630      	mov	r0, r6
 80037fc:	f000 f996 	bl	8003b2c <_sbrk_r>
 8003800:	6038      	str	r0, [r7, #0]
 8003802:	4629      	mov	r1, r5
 8003804:	4630      	mov	r0, r6
 8003806:	f000 f991 	bl	8003b2c <_sbrk_r>
 800380a:	1c43      	adds	r3, r0, #1
 800380c:	d123      	bne.n	8003856 <_malloc_r+0x92>
 800380e:	230c      	movs	r3, #12
 8003810:	6033      	str	r3, [r6, #0]
 8003812:	4630      	mov	r0, r6
 8003814:	f000 fc40 	bl	8004098 <__malloc_unlock>
 8003818:	e7e3      	b.n	80037e2 <_malloc_r+0x1e>
 800381a:	6823      	ldr	r3, [r4, #0]
 800381c:	1b5b      	subs	r3, r3, r5
 800381e:	d417      	bmi.n	8003850 <_malloc_r+0x8c>
 8003820:	2b0b      	cmp	r3, #11
 8003822:	d903      	bls.n	800382c <_malloc_r+0x68>
 8003824:	6023      	str	r3, [r4, #0]
 8003826:	441c      	add	r4, r3
 8003828:	6025      	str	r5, [r4, #0]
 800382a:	e004      	b.n	8003836 <_malloc_r+0x72>
 800382c:	6863      	ldr	r3, [r4, #4]
 800382e:	42a2      	cmp	r2, r4
 8003830:	bf0c      	ite	eq
 8003832:	600b      	streq	r3, [r1, #0]
 8003834:	6053      	strne	r3, [r2, #4]
 8003836:	4630      	mov	r0, r6
 8003838:	f000 fc2e 	bl	8004098 <__malloc_unlock>
 800383c:	f104 000b 	add.w	r0, r4, #11
 8003840:	1d23      	adds	r3, r4, #4
 8003842:	f020 0007 	bic.w	r0, r0, #7
 8003846:	1ac2      	subs	r2, r0, r3
 8003848:	d0cc      	beq.n	80037e4 <_malloc_r+0x20>
 800384a:	1a1b      	subs	r3, r3, r0
 800384c:	50a3      	str	r3, [r4, r2]
 800384e:	e7c9      	b.n	80037e4 <_malloc_r+0x20>
 8003850:	4622      	mov	r2, r4
 8003852:	6864      	ldr	r4, [r4, #4]
 8003854:	e7cc      	b.n	80037f0 <_malloc_r+0x2c>
 8003856:	1cc4      	adds	r4, r0, #3
 8003858:	f024 0403 	bic.w	r4, r4, #3
 800385c:	42a0      	cmp	r0, r4
 800385e:	d0e3      	beq.n	8003828 <_malloc_r+0x64>
 8003860:	1a21      	subs	r1, r4, r0
 8003862:	4630      	mov	r0, r6
 8003864:	f000 f962 	bl	8003b2c <_sbrk_r>
 8003868:	3001      	adds	r0, #1
 800386a:	d1dd      	bne.n	8003828 <_malloc_r+0x64>
 800386c:	e7cf      	b.n	800380e <_malloc_r+0x4a>
 800386e:	bf00      	nop
 8003870:	20000230 	.word	0x20000230
 8003874:	20000234 	.word	0x20000234

08003878 <__sfputc_r>:
 8003878:	6893      	ldr	r3, [r2, #8]
 800387a:	3b01      	subs	r3, #1
 800387c:	2b00      	cmp	r3, #0
 800387e:	b410      	push	{r4}
 8003880:	6093      	str	r3, [r2, #8]
 8003882:	da08      	bge.n	8003896 <__sfputc_r+0x1e>
 8003884:	6994      	ldr	r4, [r2, #24]
 8003886:	42a3      	cmp	r3, r4
 8003888:	db01      	blt.n	800388e <__sfputc_r+0x16>
 800388a:	290a      	cmp	r1, #10
 800388c:	d103      	bne.n	8003896 <__sfputc_r+0x1e>
 800388e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003892:	f000 b99f 	b.w	8003bd4 <__swbuf_r>
 8003896:	6813      	ldr	r3, [r2, #0]
 8003898:	1c58      	adds	r0, r3, #1
 800389a:	6010      	str	r0, [r2, #0]
 800389c:	7019      	strb	r1, [r3, #0]
 800389e:	4608      	mov	r0, r1
 80038a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80038a4:	4770      	bx	lr

080038a6 <__sfputs_r>:
 80038a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038a8:	4606      	mov	r6, r0
 80038aa:	460f      	mov	r7, r1
 80038ac:	4614      	mov	r4, r2
 80038ae:	18d5      	adds	r5, r2, r3
 80038b0:	42ac      	cmp	r4, r5
 80038b2:	d101      	bne.n	80038b8 <__sfputs_r+0x12>
 80038b4:	2000      	movs	r0, #0
 80038b6:	e007      	b.n	80038c8 <__sfputs_r+0x22>
 80038b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038bc:	463a      	mov	r2, r7
 80038be:	4630      	mov	r0, r6
 80038c0:	f7ff ffda 	bl	8003878 <__sfputc_r>
 80038c4:	1c43      	adds	r3, r0, #1
 80038c6:	d1f3      	bne.n	80038b0 <__sfputs_r+0xa>
 80038c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080038cc <_vfiprintf_r>:
 80038cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038d0:	460d      	mov	r5, r1
 80038d2:	b09d      	sub	sp, #116	; 0x74
 80038d4:	4614      	mov	r4, r2
 80038d6:	4698      	mov	r8, r3
 80038d8:	4606      	mov	r6, r0
 80038da:	b118      	cbz	r0, 80038e4 <_vfiprintf_r+0x18>
 80038dc:	6983      	ldr	r3, [r0, #24]
 80038de:	b90b      	cbnz	r3, 80038e4 <_vfiprintf_r+0x18>
 80038e0:	f7ff fad6 	bl	8002e90 <__sinit>
 80038e4:	4b89      	ldr	r3, [pc, #548]	; (8003b0c <_vfiprintf_r+0x240>)
 80038e6:	429d      	cmp	r5, r3
 80038e8:	d11b      	bne.n	8003922 <_vfiprintf_r+0x56>
 80038ea:	6875      	ldr	r5, [r6, #4]
 80038ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80038ee:	07d9      	lsls	r1, r3, #31
 80038f0:	d405      	bmi.n	80038fe <_vfiprintf_r+0x32>
 80038f2:	89ab      	ldrh	r3, [r5, #12]
 80038f4:	059a      	lsls	r2, r3, #22
 80038f6:	d402      	bmi.n	80038fe <_vfiprintf_r+0x32>
 80038f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80038fa:	f7ff fb6c 	bl	8002fd6 <__retarget_lock_acquire_recursive>
 80038fe:	89ab      	ldrh	r3, [r5, #12]
 8003900:	071b      	lsls	r3, r3, #28
 8003902:	d501      	bpl.n	8003908 <_vfiprintf_r+0x3c>
 8003904:	692b      	ldr	r3, [r5, #16]
 8003906:	b9eb      	cbnz	r3, 8003944 <_vfiprintf_r+0x78>
 8003908:	4629      	mov	r1, r5
 800390a:	4630      	mov	r0, r6
 800390c:	f000 f9c6 	bl	8003c9c <__swsetup_r>
 8003910:	b1c0      	cbz	r0, 8003944 <_vfiprintf_r+0x78>
 8003912:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003914:	07dc      	lsls	r4, r3, #31
 8003916:	d50e      	bpl.n	8003936 <_vfiprintf_r+0x6a>
 8003918:	f04f 30ff 	mov.w	r0, #4294967295
 800391c:	b01d      	add	sp, #116	; 0x74
 800391e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003922:	4b7b      	ldr	r3, [pc, #492]	; (8003b10 <_vfiprintf_r+0x244>)
 8003924:	429d      	cmp	r5, r3
 8003926:	d101      	bne.n	800392c <_vfiprintf_r+0x60>
 8003928:	68b5      	ldr	r5, [r6, #8]
 800392a:	e7df      	b.n	80038ec <_vfiprintf_r+0x20>
 800392c:	4b79      	ldr	r3, [pc, #484]	; (8003b14 <_vfiprintf_r+0x248>)
 800392e:	429d      	cmp	r5, r3
 8003930:	bf08      	it	eq
 8003932:	68f5      	ldreq	r5, [r6, #12]
 8003934:	e7da      	b.n	80038ec <_vfiprintf_r+0x20>
 8003936:	89ab      	ldrh	r3, [r5, #12]
 8003938:	0598      	lsls	r0, r3, #22
 800393a:	d4ed      	bmi.n	8003918 <_vfiprintf_r+0x4c>
 800393c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800393e:	f7ff fb4b 	bl	8002fd8 <__retarget_lock_release_recursive>
 8003942:	e7e9      	b.n	8003918 <_vfiprintf_r+0x4c>
 8003944:	2300      	movs	r3, #0
 8003946:	9309      	str	r3, [sp, #36]	; 0x24
 8003948:	2320      	movs	r3, #32
 800394a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800394e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003952:	2330      	movs	r3, #48	; 0x30
 8003954:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8003b18 <_vfiprintf_r+0x24c>
 8003958:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800395c:	f04f 0901 	mov.w	r9, #1
 8003960:	4623      	mov	r3, r4
 8003962:	469a      	mov	sl, r3
 8003964:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003968:	b10a      	cbz	r2, 800396e <_vfiprintf_r+0xa2>
 800396a:	2a25      	cmp	r2, #37	; 0x25
 800396c:	d1f9      	bne.n	8003962 <_vfiprintf_r+0x96>
 800396e:	ebba 0b04 	subs.w	fp, sl, r4
 8003972:	d00b      	beq.n	800398c <_vfiprintf_r+0xc0>
 8003974:	465b      	mov	r3, fp
 8003976:	4622      	mov	r2, r4
 8003978:	4629      	mov	r1, r5
 800397a:	4630      	mov	r0, r6
 800397c:	f7ff ff93 	bl	80038a6 <__sfputs_r>
 8003980:	3001      	adds	r0, #1
 8003982:	f000 80aa 	beq.w	8003ada <_vfiprintf_r+0x20e>
 8003986:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003988:	445a      	add	r2, fp
 800398a:	9209      	str	r2, [sp, #36]	; 0x24
 800398c:	f89a 3000 	ldrb.w	r3, [sl]
 8003990:	2b00      	cmp	r3, #0
 8003992:	f000 80a2 	beq.w	8003ada <_vfiprintf_r+0x20e>
 8003996:	2300      	movs	r3, #0
 8003998:	f04f 32ff 	mov.w	r2, #4294967295
 800399c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80039a0:	f10a 0a01 	add.w	sl, sl, #1
 80039a4:	9304      	str	r3, [sp, #16]
 80039a6:	9307      	str	r3, [sp, #28]
 80039a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80039ac:	931a      	str	r3, [sp, #104]	; 0x68
 80039ae:	4654      	mov	r4, sl
 80039b0:	2205      	movs	r2, #5
 80039b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80039b6:	4858      	ldr	r0, [pc, #352]	; (8003b18 <_vfiprintf_r+0x24c>)
 80039b8:	f7fc fc1a 	bl	80001f0 <memchr>
 80039bc:	9a04      	ldr	r2, [sp, #16]
 80039be:	b9d8      	cbnz	r0, 80039f8 <_vfiprintf_r+0x12c>
 80039c0:	06d1      	lsls	r1, r2, #27
 80039c2:	bf44      	itt	mi
 80039c4:	2320      	movmi	r3, #32
 80039c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80039ca:	0713      	lsls	r3, r2, #28
 80039cc:	bf44      	itt	mi
 80039ce:	232b      	movmi	r3, #43	; 0x2b
 80039d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80039d4:	f89a 3000 	ldrb.w	r3, [sl]
 80039d8:	2b2a      	cmp	r3, #42	; 0x2a
 80039da:	d015      	beq.n	8003a08 <_vfiprintf_r+0x13c>
 80039dc:	9a07      	ldr	r2, [sp, #28]
 80039de:	4654      	mov	r4, sl
 80039e0:	2000      	movs	r0, #0
 80039e2:	f04f 0c0a 	mov.w	ip, #10
 80039e6:	4621      	mov	r1, r4
 80039e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80039ec:	3b30      	subs	r3, #48	; 0x30
 80039ee:	2b09      	cmp	r3, #9
 80039f0:	d94e      	bls.n	8003a90 <_vfiprintf_r+0x1c4>
 80039f2:	b1b0      	cbz	r0, 8003a22 <_vfiprintf_r+0x156>
 80039f4:	9207      	str	r2, [sp, #28]
 80039f6:	e014      	b.n	8003a22 <_vfiprintf_r+0x156>
 80039f8:	eba0 0308 	sub.w	r3, r0, r8
 80039fc:	fa09 f303 	lsl.w	r3, r9, r3
 8003a00:	4313      	orrs	r3, r2
 8003a02:	9304      	str	r3, [sp, #16]
 8003a04:	46a2      	mov	sl, r4
 8003a06:	e7d2      	b.n	80039ae <_vfiprintf_r+0xe2>
 8003a08:	9b03      	ldr	r3, [sp, #12]
 8003a0a:	1d19      	adds	r1, r3, #4
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	9103      	str	r1, [sp, #12]
 8003a10:	2b00      	cmp	r3, #0
 8003a12:	bfbb      	ittet	lt
 8003a14:	425b      	neglt	r3, r3
 8003a16:	f042 0202 	orrlt.w	r2, r2, #2
 8003a1a:	9307      	strge	r3, [sp, #28]
 8003a1c:	9307      	strlt	r3, [sp, #28]
 8003a1e:	bfb8      	it	lt
 8003a20:	9204      	strlt	r2, [sp, #16]
 8003a22:	7823      	ldrb	r3, [r4, #0]
 8003a24:	2b2e      	cmp	r3, #46	; 0x2e
 8003a26:	d10c      	bne.n	8003a42 <_vfiprintf_r+0x176>
 8003a28:	7863      	ldrb	r3, [r4, #1]
 8003a2a:	2b2a      	cmp	r3, #42	; 0x2a
 8003a2c:	d135      	bne.n	8003a9a <_vfiprintf_r+0x1ce>
 8003a2e:	9b03      	ldr	r3, [sp, #12]
 8003a30:	1d1a      	adds	r2, r3, #4
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	9203      	str	r2, [sp, #12]
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	bfb8      	it	lt
 8003a3a:	f04f 33ff 	movlt.w	r3, #4294967295
 8003a3e:	3402      	adds	r4, #2
 8003a40:	9305      	str	r3, [sp, #20]
 8003a42:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003b28 <_vfiprintf_r+0x25c>
 8003a46:	7821      	ldrb	r1, [r4, #0]
 8003a48:	2203      	movs	r2, #3
 8003a4a:	4650      	mov	r0, sl
 8003a4c:	f7fc fbd0 	bl	80001f0 <memchr>
 8003a50:	b140      	cbz	r0, 8003a64 <_vfiprintf_r+0x198>
 8003a52:	2340      	movs	r3, #64	; 0x40
 8003a54:	eba0 000a 	sub.w	r0, r0, sl
 8003a58:	fa03 f000 	lsl.w	r0, r3, r0
 8003a5c:	9b04      	ldr	r3, [sp, #16]
 8003a5e:	4303      	orrs	r3, r0
 8003a60:	3401      	adds	r4, #1
 8003a62:	9304      	str	r3, [sp, #16]
 8003a64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a68:	482c      	ldr	r0, [pc, #176]	; (8003b1c <_vfiprintf_r+0x250>)
 8003a6a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003a6e:	2206      	movs	r2, #6
 8003a70:	f7fc fbbe 	bl	80001f0 <memchr>
 8003a74:	2800      	cmp	r0, #0
 8003a76:	d03f      	beq.n	8003af8 <_vfiprintf_r+0x22c>
 8003a78:	4b29      	ldr	r3, [pc, #164]	; (8003b20 <_vfiprintf_r+0x254>)
 8003a7a:	bb1b      	cbnz	r3, 8003ac4 <_vfiprintf_r+0x1f8>
 8003a7c:	9b03      	ldr	r3, [sp, #12]
 8003a7e:	3307      	adds	r3, #7
 8003a80:	f023 0307 	bic.w	r3, r3, #7
 8003a84:	3308      	adds	r3, #8
 8003a86:	9303      	str	r3, [sp, #12]
 8003a88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a8a:	443b      	add	r3, r7
 8003a8c:	9309      	str	r3, [sp, #36]	; 0x24
 8003a8e:	e767      	b.n	8003960 <_vfiprintf_r+0x94>
 8003a90:	fb0c 3202 	mla	r2, ip, r2, r3
 8003a94:	460c      	mov	r4, r1
 8003a96:	2001      	movs	r0, #1
 8003a98:	e7a5      	b.n	80039e6 <_vfiprintf_r+0x11a>
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	3401      	adds	r4, #1
 8003a9e:	9305      	str	r3, [sp, #20]
 8003aa0:	4619      	mov	r1, r3
 8003aa2:	f04f 0c0a 	mov.w	ip, #10
 8003aa6:	4620      	mov	r0, r4
 8003aa8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003aac:	3a30      	subs	r2, #48	; 0x30
 8003aae:	2a09      	cmp	r2, #9
 8003ab0:	d903      	bls.n	8003aba <_vfiprintf_r+0x1ee>
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d0c5      	beq.n	8003a42 <_vfiprintf_r+0x176>
 8003ab6:	9105      	str	r1, [sp, #20]
 8003ab8:	e7c3      	b.n	8003a42 <_vfiprintf_r+0x176>
 8003aba:	fb0c 2101 	mla	r1, ip, r1, r2
 8003abe:	4604      	mov	r4, r0
 8003ac0:	2301      	movs	r3, #1
 8003ac2:	e7f0      	b.n	8003aa6 <_vfiprintf_r+0x1da>
 8003ac4:	ab03      	add	r3, sp, #12
 8003ac6:	9300      	str	r3, [sp, #0]
 8003ac8:	462a      	mov	r2, r5
 8003aca:	4b16      	ldr	r3, [pc, #88]	; (8003b24 <_vfiprintf_r+0x258>)
 8003acc:	a904      	add	r1, sp, #16
 8003ace:	4630      	mov	r0, r6
 8003ad0:	f7fd ff2a 	bl	8001928 <_printf_float>
 8003ad4:	4607      	mov	r7, r0
 8003ad6:	1c78      	adds	r0, r7, #1
 8003ad8:	d1d6      	bne.n	8003a88 <_vfiprintf_r+0x1bc>
 8003ada:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003adc:	07d9      	lsls	r1, r3, #31
 8003ade:	d405      	bmi.n	8003aec <_vfiprintf_r+0x220>
 8003ae0:	89ab      	ldrh	r3, [r5, #12]
 8003ae2:	059a      	lsls	r2, r3, #22
 8003ae4:	d402      	bmi.n	8003aec <_vfiprintf_r+0x220>
 8003ae6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003ae8:	f7ff fa76 	bl	8002fd8 <__retarget_lock_release_recursive>
 8003aec:	89ab      	ldrh	r3, [r5, #12]
 8003aee:	065b      	lsls	r3, r3, #25
 8003af0:	f53f af12 	bmi.w	8003918 <_vfiprintf_r+0x4c>
 8003af4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003af6:	e711      	b.n	800391c <_vfiprintf_r+0x50>
 8003af8:	ab03      	add	r3, sp, #12
 8003afa:	9300      	str	r3, [sp, #0]
 8003afc:	462a      	mov	r2, r5
 8003afe:	4b09      	ldr	r3, [pc, #36]	; (8003b24 <_vfiprintf_r+0x258>)
 8003b00:	a904      	add	r1, sp, #16
 8003b02:	4630      	mov	r0, r6
 8003b04:	f7fe f9b4 	bl	8001e70 <_printf_i>
 8003b08:	e7e4      	b.n	8003ad4 <_vfiprintf_r+0x208>
 8003b0a:	bf00      	nop
 8003b0c:	080042d4 	.word	0x080042d4
 8003b10:	080042f4 	.word	0x080042f4
 8003b14:	080042b4 	.word	0x080042b4
 8003b18:	08004474 	.word	0x08004474
 8003b1c:	0800447e 	.word	0x0800447e
 8003b20:	08001929 	.word	0x08001929
 8003b24:	080038a7 	.word	0x080038a7
 8003b28:	0800447a 	.word	0x0800447a

08003b2c <_sbrk_r>:
 8003b2c:	b538      	push	{r3, r4, r5, lr}
 8003b2e:	4d06      	ldr	r5, [pc, #24]	; (8003b48 <_sbrk_r+0x1c>)
 8003b30:	2300      	movs	r3, #0
 8003b32:	4604      	mov	r4, r0
 8003b34:	4608      	mov	r0, r1
 8003b36:	602b      	str	r3, [r5, #0]
 8003b38:	f7fd fd3a 	bl	80015b0 <_sbrk>
 8003b3c:	1c43      	adds	r3, r0, #1
 8003b3e:	d102      	bne.n	8003b46 <_sbrk_r+0x1a>
 8003b40:	682b      	ldr	r3, [r5, #0]
 8003b42:	b103      	cbz	r3, 8003b46 <_sbrk_r+0x1a>
 8003b44:	6023      	str	r3, [r4, #0]
 8003b46:	bd38      	pop	{r3, r4, r5, pc}
 8003b48:	200002c4 	.word	0x200002c4

08003b4c <__sread>:
 8003b4c:	b510      	push	{r4, lr}
 8003b4e:	460c      	mov	r4, r1
 8003b50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003b54:	f000 faa6 	bl	80040a4 <_read_r>
 8003b58:	2800      	cmp	r0, #0
 8003b5a:	bfab      	itete	ge
 8003b5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003b5e:	89a3      	ldrhlt	r3, [r4, #12]
 8003b60:	181b      	addge	r3, r3, r0
 8003b62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003b66:	bfac      	ite	ge
 8003b68:	6563      	strge	r3, [r4, #84]	; 0x54
 8003b6a:	81a3      	strhlt	r3, [r4, #12]
 8003b6c:	bd10      	pop	{r4, pc}

08003b6e <__swrite>:
 8003b6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b72:	461f      	mov	r7, r3
 8003b74:	898b      	ldrh	r3, [r1, #12]
 8003b76:	05db      	lsls	r3, r3, #23
 8003b78:	4605      	mov	r5, r0
 8003b7a:	460c      	mov	r4, r1
 8003b7c:	4616      	mov	r6, r2
 8003b7e:	d505      	bpl.n	8003b8c <__swrite+0x1e>
 8003b80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003b84:	2302      	movs	r3, #2
 8003b86:	2200      	movs	r2, #0
 8003b88:	f000 f9f8 	bl	8003f7c <_lseek_r>
 8003b8c:	89a3      	ldrh	r3, [r4, #12]
 8003b8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003b92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003b96:	81a3      	strh	r3, [r4, #12]
 8003b98:	4632      	mov	r2, r6
 8003b9a:	463b      	mov	r3, r7
 8003b9c:	4628      	mov	r0, r5
 8003b9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003ba2:	f000 b869 	b.w	8003c78 <_write_r>

08003ba6 <__sseek>:
 8003ba6:	b510      	push	{r4, lr}
 8003ba8:	460c      	mov	r4, r1
 8003baa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bae:	f000 f9e5 	bl	8003f7c <_lseek_r>
 8003bb2:	1c43      	adds	r3, r0, #1
 8003bb4:	89a3      	ldrh	r3, [r4, #12]
 8003bb6:	bf15      	itete	ne
 8003bb8:	6560      	strne	r0, [r4, #84]	; 0x54
 8003bba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003bbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003bc2:	81a3      	strheq	r3, [r4, #12]
 8003bc4:	bf18      	it	ne
 8003bc6:	81a3      	strhne	r3, [r4, #12]
 8003bc8:	bd10      	pop	{r4, pc}

08003bca <__sclose>:
 8003bca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bce:	f000 b8f1 	b.w	8003db4 <_close_r>
	...

08003bd4 <__swbuf_r>:
 8003bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bd6:	460e      	mov	r6, r1
 8003bd8:	4614      	mov	r4, r2
 8003bda:	4605      	mov	r5, r0
 8003bdc:	b118      	cbz	r0, 8003be6 <__swbuf_r+0x12>
 8003bde:	6983      	ldr	r3, [r0, #24]
 8003be0:	b90b      	cbnz	r3, 8003be6 <__swbuf_r+0x12>
 8003be2:	f7ff f955 	bl	8002e90 <__sinit>
 8003be6:	4b21      	ldr	r3, [pc, #132]	; (8003c6c <__swbuf_r+0x98>)
 8003be8:	429c      	cmp	r4, r3
 8003bea:	d12b      	bne.n	8003c44 <__swbuf_r+0x70>
 8003bec:	686c      	ldr	r4, [r5, #4]
 8003bee:	69a3      	ldr	r3, [r4, #24]
 8003bf0:	60a3      	str	r3, [r4, #8]
 8003bf2:	89a3      	ldrh	r3, [r4, #12]
 8003bf4:	071a      	lsls	r2, r3, #28
 8003bf6:	d52f      	bpl.n	8003c58 <__swbuf_r+0x84>
 8003bf8:	6923      	ldr	r3, [r4, #16]
 8003bfa:	b36b      	cbz	r3, 8003c58 <__swbuf_r+0x84>
 8003bfc:	6923      	ldr	r3, [r4, #16]
 8003bfe:	6820      	ldr	r0, [r4, #0]
 8003c00:	1ac0      	subs	r0, r0, r3
 8003c02:	6963      	ldr	r3, [r4, #20]
 8003c04:	b2f6      	uxtb	r6, r6
 8003c06:	4283      	cmp	r3, r0
 8003c08:	4637      	mov	r7, r6
 8003c0a:	dc04      	bgt.n	8003c16 <__swbuf_r+0x42>
 8003c0c:	4621      	mov	r1, r4
 8003c0e:	4628      	mov	r0, r5
 8003c10:	f000 f966 	bl	8003ee0 <_fflush_r>
 8003c14:	bb30      	cbnz	r0, 8003c64 <__swbuf_r+0x90>
 8003c16:	68a3      	ldr	r3, [r4, #8]
 8003c18:	3b01      	subs	r3, #1
 8003c1a:	60a3      	str	r3, [r4, #8]
 8003c1c:	6823      	ldr	r3, [r4, #0]
 8003c1e:	1c5a      	adds	r2, r3, #1
 8003c20:	6022      	str	r2, [r4, #0]
 8003c22:	701e      	strb	r6, [r3, #0]
 8003c24:	6963      	ldr	r3, [r4, #20]
 8003c26:	3001      	adds	r0, #1
 8003c28:	4283      	cmp	r3, r0
 8003c2a:	d004      	beq.n	8003c36 <__swbuf_r+0x62>
 8003c2c:	89a3      	ldrh	r3, [r4, #12]
 8003c2e:	07db      	lsls	r3, r3, #31
 8003c30:	d506      	bpl.n	8003c40 <__swbuf_r+0x6c>
 8003c32:	2e0a      	cmp	r6, #10
 8003c34:	d104      	bne.n	8003c40 <__swbuf_r+0x6c>
 8003c36:	4621      	mov	r1, r4
 8003c38:	4628      	mov	r0, r5
 8003c3a:	f000 f951 	bl	8003ee0 <_fflush_r>
 8003c3e:	b988      	cbnz	r0, 8003c64 <__swbuf_r+0x90>
 8003c40:	4638      	mov	r0, r7
 8003c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c44:	4b0a      	ldr	r3, [pc, #40]	; (8003c70 <__swbuf_r+0x9c>)
 8003c46:	429c      	cmp	r4, r3
 8003c48:	d101      	bne.n	8003c4e <__swbuf_r+0x7a>
 8003c4a:	68ac      	ldr	r4, [r5, #8]
 8003c4c:	e7cf      	b.n	8003bee <__swbuf_r+0x1a>
 8003c4e:	4b09      	ldr	r3, [pc, #36]	; (8003c74 <__swbuf_r+0xa0>)
 8003c50:	429c      	cmp	r4, r3
 8003c52:	bf08      	it	eq
 8003c54:	68ec      	ldreq	r4, [r5, #12]
 8003c56:	e7ca      	b.n	8003bee <__swbuf_r+0x1a>
 8003c58:	4621      	mov	r1, r4
 8003c5a:	4628      	mov	r0, r5
 8003c5c:	f000 f81e 	bl	8003c9c <__swsetup_r>
 8003c60:	2800      	cmp	r0, #0
 8003c62:	d0cb      	beq.n	8003bfc <__swbuf_r+0x28>
 8003c64:	f04f 37ff 	mov.w	r7, #4294967295
 8003c68:	e7ea      	b.n	8003c40 <__swbuf_r+0x6c>
 8003c6a:	bf00      	nop
 8003c6c:	080042d4 	.word	0x080042d4
 8003c70:	080042f4 	.word	0x080042f4
 8003c74:	080042b4 	.word	0x080042b4

08003c78 <_write_r>:
 8003c78:	b538      	push	{r3, r4, r5, lr}
 8003c7a:	4d07      	ldr	r5, [pc, #28]	; (8003c98 <_write_r+0x20>)
 8003c7c:	4604      	mov	r4, r0
 8003c7e:	4608      	mov	r0, r1
 8003c80:	4611      	mov	r1, r2
 8003c82:	2200      	movs	r2, #0
 8003c84:	602a      	str	r2, [r5, #0]
 8003c86:	461a      	mov	r2, r3
 8003c88:	f7fd fc41 	bl	800150e <_write>
 8003c8c:	1c43      	adds	r3, r0, #1
 8003c8e:	d102      	bne.n	8003c96 <_write_r+0x1e>
 8003c90:	682b      	ldr	r3, [r5, #0]
 8003c92:	b103      	cbz	r3, 8003c96 <_write_r+0x1e>
 8003c94:	6023      	str	r3, [r4, #0]
 8003c96:	bd38      	pop	{r3, r4, r5, pc}
 8003c98:	200002c4 	.word	0x200002c4

08003c9c <__swsetup_r>:
 8003c9c:	4b32      	ldr	r3, [pc, #200]	; (8003d68 <__swsetup_r+0xcc>)
 8003c9e:	b570      	push	{r4, r5, r6, lr}
 8003ca0:	681d      	ldr	r5, [r3, #0]
 8003ca2:	4606      	mov	r6, r0
 8003ca4:	460c      	mov	r4, r1
 8003ca6:	b125      	cbz	r5, 8003cb2 <__swsetup_r+0x16>
 8003ca8:	69ab      	ldr	r3, [r5, #24]
 8003caa:	b913      	cbnz	r3, 8003cb2 <__swsetup_r+0x16>
 8003cac:	4628      	mov	r0, r5
 8003cae:	f7ff f8ef 	bl	8002e90 <__sinit>
 8003cb2:	4b2e      	ldr	r3, [pc, #184]	; (8003d6c <__swsetup_r+0xd0>)
 8003cb4:	429c      	cmp	r4, r3
 8003cb6:	d10f      	bne.n	8003cd8 <__swsetup_r+0x3c>
 8003cb8:	686c      	ldr	r4, [r5, #4]
 8003cba:	89a3      	ldrh	r3, [r4, #12]
 8003cbc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003cc0:	0719      	lsls	r1, r3, #28
 8003cc2:	d42c      	bmi.n	8003d1e <__swsetup_r+0x82>
 8003cc4:	06dd      	lsls	r5, r3, #27
 8003cc6:	d411      	bmi.n	8003cec <__swsetup_r+0x50>
 8003cc8:	2309      	movs	r3, #9
 8003cca:	6033      	str	r3, [r6, #0]
 8003ccc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003cd0:	81a3      	strh	r3, [r4, #12]
 8003cd2:	f04f 30ff 	mov.w	r0, #4294967295
 8003cd6:	e03e      	b.n	8003d56 <__swsetup_r+0xba>
 8003cd8:	4b25      	ldr	r3, [pc, #148]	; (8003d70 <__swsetup_r+0xd4>)
 8003cda:	429c      	cmp	r4, r3
 8003cdc:	d101      	bne.n	8003ce2 <__swsetup_r+0x46>
 8003cde:	68ac      	ldr	r4, [r5, #8]
 8003ce0:	e7eb      	b.n	8003cba <__swsetup_r+0x1e>
 8003ce2:	4b24      	ldr	r3, [pc, #144]	; (8003d74 <__swsetup_r+0xd8>)
 8003ce4:	429c      	cmp	r4, r3
 8003ce6:	bf08      	it	eq
 8003ce8:	68ec      	ldreq	r4, [r5, #12]
 8003cea:	e7e6      	b.n	8003cba <__swsetup_r+0x1e>
 8003cec:	0758      	lsls	r0, r3, #29
 8003cee:	d512      	bpl.n	8003d16 <__swsetup_r+0x7a>
 8003cf0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003cf2:	b141      	cbz	r1, 8003d06 <__swsetup_r+0x6a>
 8003cf4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003cf8:	4299      	cmp	r1, r3
 8003cfa:	d002      	beq.n	8003d02 <__swsetup_r+0x66>
 8003cfc:	4630      	mov	r0, r6
 8003cfe:	f7ff fd11 	bl	8003724 <_free_r>
 8003d02:	2300      	movs	r3, #0
 8003d04:	6363      	str	r3, [r4, #52]	; 0x34
 8003d06:	89a3      	ldrh	r3, [r4, #12]
 8003d08:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003d0c:	81a3      	strh	r3, [r4, #12]
 8003d0e:	2300      	movs	r3, #0
 8003d10:	6063      	str	r3, [r4, #4]
 8003d12:	6923      	ldr	r3, [r4, #16]
 8003d14:	6023      	str	r3, [r4, #0]
 8003d16:	89a3      	ldrh	r3, [r4, #12]
 8003d18:	f043 0308 	orr.w	r3, r3, #8
 8003d1c:	81a3      	strh	r3, [r4, #12]
 8003d1e:	6923      	ldr	r3, [r4, #16]
 8003d20:	b94b      	cbnz	r3, 8003d36 <__swsetup_r+0x9a>
 8003d22:	89a3      	ldrh	r3, [r4, #12]
 8003d24:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003d28:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003d2c:	d003      	beq.n	8003d36 <__swsetup_r+0x9a>
 8003d2e:	4621      	mov	r1, r4
 8003d30:	4630      	mov	r0, r6
 8003d32:	f000 f959 	bl	8003fe8 <__smakebuf_r>
 8003d36:	89a0      	ldrh	r0, [r4, #12]
 8003d38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003d3c:	f010 0301 	ands.w	r3, r0, #1
 8003d40:	d00a      	beq.n	8003d58 <__swsetup_r+0xbc>
 8003d42:	2300      	movs	r3, #0
 8003d44:	60a3      	str	r3, [r4, #8]
 8003d46:	6963      	ldr	r3, [r4, #20]
 8003d48:	425b      	negs	r3, r3
 8003d4a:	61a3      	str	r3, [r4, #24]
 8003d4c:	6923      	ldr	r3, [r4, #16]
 8003d4e:	b943      	cbnz	r3, 8003d62 <__swsetup_r+0xc6>
 8003d50:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003d54:	d1ba      	bne.n	8003ccc <__swsetup_r+0x30>
 8003d56:	bd70      	pop	{r4, r5, r6, pc}
 8003d58:	0781      	lsls	r1, r0, #30
 8003d5a:	bf58      	it	pl
 8003d5c:	6963      	ldrpl	r3, [r4, #20]
 8003d5e:	60a3      	str	r3, [r4, #8]
 8003d60:	e7f4      	b.n	8003d4c <__swsetup_r+0xb0>
 8003d62:	2000      	movs	r0, #0
 8003d64:	e7f7      	b.n	8003d56 <__swsetup_r+0xba>
 8003d66:	bf00      	nop
 8003d68:	20000040 	.word	0x20000040
 8003d6c:	080042d4 	.word	0x080042d4
 8003d70:	080042f4 	.word	0x080042f4
 8003d74:	080042b4 	.word	0x080042b4

08003d78 <__assert_func>:
 8003d78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003d7a:	4614      	mov	r4, r2
 8003d7c:	461a      	mov	r2, r3
 8003d7e:	4b09      	ldr	r3, [pc, #36]	; (8003da4 <__assert_func+0x2c>)
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	4605      	mov	r5, r0
 8003d84:	68d8      	ldr	r0, [r3, #12]
 8003d86:	b14c      	cbz	r4, 8003d9c <__assert_func+0x24>
 8003d88:	4b07      	ldr	r3, [pc, #28]	; (8003da8 <__assert_func+0x30>)
 8003d8a:	9100      	str	r1, [sp, #0]
 8003d8c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003d90:	4906      	ldr	r1, [pc, #24]	; (8003dac <__assert_func+0x34>)
 8003d92:	462b      	mov	r3, r5
 8003d94:	f000 f8e0 	bl	8003f58 <fiprintf>
 8003d98:	f000 f9a3 	bl	80040e2 <abort>
 8003d9c:	4b04      	ldr	r3, [pc, #16]	; (8003db0 <__assert_func+0x38>)
 8003d9e:	461c      	mov	r4, r3
 8003da0:	e7f3      	b.n	8003d8a <__assert_func+0x12>
 8003da2:	bf00      	nop
 8003da4:	20000040 	.word	0x20000040
 8003da8:	08004485 	.word	0x08004485
 8003dac:	08004492 	.word	0x08004492
 8003db0:	080044c0 	.word	0x080044c0

08003db4 <_close_r>:
 8003db4:	b538      	push	{r3, r4, r5, lr}
 8003db6:	4d06      	ldr	r5, [pc, #24]	; (8003dd0 <_close_r+0x1c>)
 8003db8:	2300      	movs	r3, #0
 8003dba:	4604      	mov	r4, r0
 8003dbc:	4608      	mov	r0, r1
 8003dbe:	602b      	str	r3, [r5, #0]
 8003dc0:	f7fd fbc1 	bl	8001546 <_close>
 8003dc4:	1c43      	adds	r3, r0, #1
 8003dc6:	d102      	bne.n	8003dce <_close_r+0x1a>
 8003dc8:	682b      	ldr	r3, [r5, #0]
 8003dca:	b103      	cbz	r3, 8003dce <_close_r+0x1a>
 8003dcc:	6023      	str	r3, [r4, #0]
 8003dce:	bd38      	pop	{r3, r4, r5, pc}
 8003dd0:	200002c4 	.word	0x200002c4

08003dd4 <__sflush_r>:
 8003dd4:	898a      	ldrh	r2, [r1, #12]
 8003dd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dda:	4605      	mov	r5, r0
 8003ddc:	0710      	lsls	r0, r2, #28
 8003dde:	460c      	mov	r4, r1
 8003de0:	d458      	bmi.n	8003e94 <__sflush_r+0xc0>
 8003de2:	684b      	ldr	r3, [r1, #4]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	dc05      	bgt.n	8003df4 <__sflush_r+0x20>
 8003de8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	dc02      	bgt.n	8003df4 <__sflush_r+0x20>
 8003dee:	2000      	movs	r0, #0
 8003df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003df4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003df6:	2e00      	cmp	r6, #0
 8003df8:	d0f9      	beq.n	8003dee <__sflush_r+0x1a>
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003e00:	682f      	ldr	r7, [r5, #0]
 8003e02:	602b      	str	r3, [r5, #0]
 8003e04:	d032      	beq.n	8003e6c <__sflush_r+0x98>
 8003e06:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003e08:	89a3      	ldrh	r3, [r4, #12]
 8003e0a:	075a      	lsls	r2, r3, #29
 8003e0c:	d505      	bpl.n	8003e1a <__sflush_r+0x46>
 8003e0e:	6863      	ldr	r3, [r4, #4]
 8003e10:	1ac0      	subs	r0, r0, r3
 8003e12:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003e14:	b10b      	cbz	r3, 8003e1a <__sflush_r+0x46>
 8003e16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003e18:	1ac0      	subs	r0, r0, r3
 8003e1a:	2300      	movs	r3, #0
 8003e1c:	4602      	mov	r2, r0
 8003e1e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003e20:	6a21      	ldr	r1, [r4, #32]
 8003e22:	4628      	mov	r0, r5
 8003e24:	47b0      	blx	r6
 8003e26:	1c43      	adds	r3, r0, #1
 8003e28:	89a3      	ldrh	r3, [r4, #12]
 8003e2a:	d106      	bne.n	8003e3a <__sflush_r+0x66>
 8003e2c:	6829      	ldr	r1, [r5, #0]
 8003e2e:	291d      	cmp	r1, #29
 8003e30:	d82c      	bhi.n	8003e8c <__sflush_r+0xb8>
 8003e32:	4a2a      	ldr	r2, [pc, #168]	; (8003edc <__sflush_r+0x108>)
 8003e34:	40ca      	lsrs	r2, r1
 8003e36:	07d6      	lsls	r6, r2, #31
 8003e38:	d528      	bpl.n	8003e8c <__sflush_r+0xb8>
 8003e3a:	2200      	movs	r2, #0
 8003e3c:	6062      	str	r2, [r4, #4]
 8003e3e:	04d9      	lsls	r1, r3, #19
 8003e40:	6922      	ldr	r2, [r4, #16]
 8003e42:	6022      	str	r2, [r4, #0]
 8003e44:	d504      	bpl.n	8003e50 <__sflush_r+0x7c>
 8003e46:	1c42      	adds	r2, r0, #1
 8003e48:	d101      	bne.n	8003e4e <__sflush_r+0x7a>
 8003e4a:	682b      	ldr	r3, [r5, #0]
 8003e4c:	b903      	cbnz	r3, 8003e50 <__sflush_r+0x7c>
 8003e4e:	6560      	str	r0, [r4, #84]	; 0x54
 8003e50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e52:	602f      	str	r7, [r5, #0]
 8003e54:	2900      	cmp	r1, #0
 8003e56:	d0ca      	beq.n	8003dee <__sflush_r+0x1a>
 8003e58:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e5c:	4299      	cmp	r1, r3
 8003e5e:	d002      	beq.n	8003e66 <__sflush_r+0x92>
 8003e60:	4628      	mov	r0, r5
 8003e62:	f7ff fc5f 	bl	8003724 <_free_r>
 8003e66:	2000      	movs	r0, #0
 8003e68:	6360      	str	r0, [r4, #52]	; 0x34
 8003e6a:	e7c1      	b.n	8003df0 <__sflush_r+0x1c>
 8003e6c:	6a21      	ldr	r1, [r4, #32]
 8003e6e:	2301      	movs	r3, #1
 8003e70:	4628      	mov	r0, r5
 8003e72:	47b0      	blx	r6
 8003e74:	1c41      	adds	r1, r0, #1
 8003e76:	d1c7      	bne.n	8003e08 <__sflush_r+0x34>
 8003e78:	682b      	ldr	r3, [r5, #0]
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d0c4      	beq.n	8003e08 <__sflush_r+0x34>
 8003e7e:	2b1d      	cmp	r3, #29
 8003e80:	d001      	beq.n	8003e86 <__sflush_r+0xb2>
 8003e82:	2b16      	cmp	r3, #22
 8003e84:	d101      	bne.n	8003e8a <__sflush_r+0xb6>
 8003e86:	602f      	str	r7, [r5, #0]
 8003e88:	e7b1      	b.n	8003dee <__sflush_r+0x1a>
 8003e8a:	89a3      	ldrh	r3, [r4, #12]
 8003e8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003e90:	81a3      	strh	r3, [r4, #12]
 8003e92:	e7ad      	b.n	8003df0 <__sflush_r+0x1c>
 8003e94:	690f      	ldr	r7, [r1, #16]
 8003e96:	2f00      	cmp	r7, #0
 8003e98:	d0a9      	beq.n	8003dee <__sflush_r+0x1a>
 8003e9a:	0793      	lsls	r3, r2, #30
 8003e9c:	680e      	ldr	r6, [r1, #0]
 8003e9e:	bf08      	it	eq
 8003ea0:	694b      	ldreq	r3, [r1, #20]
 8003ea2:	600f      	str	r7, [r1, #0]
 8003ea4:	bf18      	it	ne
 8003ea6:	2300      	movne	r3, #0
 8003ea8:	eba6 0807 	sub.w	r8, r6, r7
 8003eac:	608b      	str	r3, [r1, #8]
 8003eae:	f1b8 0f00 	cmp.w	r8, #0
 8003eb2:	dd9c      	ble.n	8003dee <__sflush_r+0x1a>
 8003eb4:	6a21      	ldr	r1, [r4, #32]
 8003eb6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003eb8:	4643      	mov	r3, r8
 8003eba:	463a      	mov	r2, r7
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	47b0      	blx	r6
 8003ec0:	2800      	cmp	r0, #0
 8003ec2:	dc06      	bgt.n	8003ed2 <__sflush_r+0xfe>
 8003ec4:	89a3      	ldrh	r3, [r4, #12]
 8003ec6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003eca:	81a3      	strh	r3, [r4, #12]
 8003ecc:	f04f 30ff 	mov.w	r0, #4294967295
 8003ed0:	e78e      	b.n	8003df0 <__sflush_r+0x1c>
 8003ed2:	4407      	add	r7, r0
 8003ed4:	eba8 0800 	sub.w	r8, r8, r0
 8003ed8:	e7e9      	b.n	8003eae <__sflush_r+0xda>
 8003eda:	bf00      	nop
 8003edc:	20400001 	.word	0x20400001

08003ee0 <_fflush_r>:
 8003ee0:	b538      	push	{r3, r4, r5, lr}
 8003ee2:	690b      	ldr	r3, [r1, #16]
 8003ee4:	4605      	mov	r5, r0
 8003ee6:	460c      	mov	r4, r1
 8003ee8:	b913      	cbnz	r3, 8003ef0 <_fflush_r+0x10>
 8003eea:	2500      	movs	r5, #0
 8003eec:	4628      	mov	r0, r5
 8003eee:	bd38      	pop	{r3, r4, r5, pc}
 8003ef0:	b118      	cbz	r0, 8003efa <_fflush_r+0x1a>
 8003ef2:	6983      	ldr	r3, [r0, #24]
 8003ef4:	b90b      	cbnz	r3, 8003efa <_fflush_r+0x1a>
 8003ef6:	f7fe ffcb 	bl	8002e90 <__sinit>
 8003efa:	4b14      	ldr	r3, [pc, #80]	; (8003f4c <_fflush_r+0x6c>)
 8003efc:	429c      	cmp	r4, r3
 8003efe:	d11b      	bne.n	8003f38 <_fflush_r+0x58>
 8003f00:	686c      	ldr	r4, [r5, #4]
 8003f02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d0ef      	beq.n	8003eea <_fflush_r+0xa>
 8003f0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003f0c:	07d0      	lsls	r0, r2, #31
 8003f0e:	d404      	bmi.n	8003f1a <_fflush_r+0x3a>
 8003f10:	0599      	lsls	r1, r3, #22
 8003f12:	d402      	bmi.n	8003f1a <_fflush_r+0x3a>
 8003f14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f16:	f7ff f85e 	bl	8002fd6 <__retarget_lock_acquire_recursive>
 8003f1a:	4628      	mov	r0, r5
 8003f1c:	4621      	mov	r1, r4
 8003f1e:	f7ff ff59 	bl	8003dd4 <__sflush_r>
 8003f22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003f24:	07da      	lsls	r2, r3, #31
 8003f26:	4605      	mov	r5, r0
 8003f28:	d4e0      	bmi.n	8003eec <_fflush_r+0xc>
 8003f2a:	89a3      	ldrh	r3, [r4, #12]
 8003f2c:	059b      	lsls	r3, r3, #22
 8003f2e:	d4dd      	bmi.n	8003eec <_fflush_r+0xc>
 8003f30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f32:	f7ff f851 	bl	8002fd8 <__retarget_lock_release_recursive>
 8003f36:	e7d9      	b.n	8003eec <_fflush_r+0xc>
 8003f38:	4b05      	ldr	r3, [pc, #20]	; (8003f50 <_fflush_r+0x70>)
 8003f3a:	429c      	cmp	r4, r3
 8003f3c:	d101      	bne.n	8003f42 <_fflush_r+0x62>
 8003f3e:	68ac      	ldr	r4, [r5, #8]
 8003f40:	e7df      	b.n	8003f02 <_fflush_r+0x22>
 8003f42:	4b04      	ldr	r3, [pc, #16]	; (8003f54 <_fflush_r+0x74>)
 8003f44:	429c      	cmp	r4, r3
 8003f46:	bf08      	it	eq
 8003f48:	68ec      	ldreq	r4, [r5, #12]
 8003f4a:	e7da      	b.n	8003f02 <_fflush_r+0x22>
 8003f4c:	080042d4 	.word	0x080042d4
 8003f50:	080042f4 	.word	0x080042f4
 8003f54:	080042b4 	.word	0x080042b4

08003f58 <fiprintf>:
 8003f58:	b40e      	push	{r1, r2, r3}
 8003f5a:	b503      	push	{r0, r1, lr}
 8003f5c:	4601      	mov	r1, r0
 8003f5e:	ab03      	add	r3, sp, #12
 8003f60:	4805      	ldr	r0, [pc, #20]	; (8003f78 <fiprintf+0x20>)
 8003f62:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f66:	6800      	ldr	r0, [r0, #0]
 8003f68:	9301      	str	r3, [sp, #4]
 8003f6a:	f7ff fcaf 	bl	80038cc <_vfiprintf_r>
 8003f6e:	b002      	add	sp, #8
 8003f70:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f74:	b003      	add	sp, #12
 8003f76:	4770      	bx	lr
 8003f78:	20000040 	.word	0x20000040

08003f7c <_lseek_r>:
 8003f7c:	b538      	push	{r3, r4, r5, lr}
 8003f7e:	4d07      	ldr	r5, [pc, #28]	; (8003f9c <_lseek_r+0x20>)
 8003f80:	4604      	mov	r4, r0
 8003f82:	4608      	mov	r0, r1
 8003f84:	4611      	mov	r1, r2
 8003f86:	2200      	movs	r2, #0
 8003f88:	602a      	str	r2, [r5, #0]
 8003f8a:	461a      	mov	r2, r3
 8003f8c:	f7fd fb02 	bl	8001594 <_lseek>
 8003f90:	1c43      	adds	r3, r0, #1
 8003f92:	d102      	bne.n	8003f9a <_lseek_r+0x1e>
 8003f94:	682b      	ldr	r3, [r5, #0]
 8003f96:	b103      	cbz	r3, 8003f9a <_lseek_r+0x1e>
 8003f98:	6023      	str	r3, [r4, #0]
 8003f9a:	bd38      	pop	{r3, r4, r5, pc}
 8003f9c:	200002c4 	.word	0x200002c4

08003fa0 <__swhatbuf_r>:
 8003fa0:	b570      	push	{r4, r5, r6, lr}
 8003fa2:	460e      	mov	r6, r1
 8003fa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003fa8:	2900      	cmp	r1, #0
 8003faa:	b096      	sub	sp, #88	; 0x58
 8003fac:	4614      	mov	r4, r2
 8003fae:	461d      	mov	r5, r3
 8003fb0:	da07      	bge.n	8003fc2 <__swhatbuf_r+0x22>
 8003fb2:	2300      	movs	r3, #0
 8003fb4:	602b      	str	r3, [r5, #0]
 8003fb6:	89b3      	ldrh	r3, [r6, #12]
 8003fb8:	061a      	lsls	r2, r3, #24
 8003fba:	d410      	bmi.n	8003fde <__swhatbuf_r+0x3e>
 8003fbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003fc0:	e00e      	b.n	8003fe0 <__swhatbuf_r+0x40>
 8003fc2:	466a      	mov	r2, sp
 8003fc4:	f000 f894 	bl	80040f0 <_fstat_r>
 8003fc8:	2800      	cmp	r0, #0
 8003fca:	dbf2      	blt.n	8003fb2 <__swhatbuf_r+0x12>
 8003fcc:	9a01      	ldr	r2, [sp, #4]
 8003fce:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003fd2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003fd6:	425a      	negs	r2, r3
 8003fd8:	415a      	adcs	r2, r3
 8003fda:	602a      	str	r2, [r5, #0]
 8003fdc:	e7ee      	b.n	8003fbc <__swhatbuf_r+0x1c>
 8003fde:	2340      	movs	r3, #64	; 0x40
 8003fe0:	2000      	movs	r0, #0
 8003fe2:	6023      	str	r3, [r4, #0]
 8003fe4:	b016      	add	sp, #88	; 0x58
 8003fe6:	bd70      	pop	{r4, r5, r6, pc}

08003fe8 <__smakebuf_r>:
 8003fe8:	898b      	ldrh	r3, [r1, #12]
 8003fea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003fec:	079d      	lsls	r5, r3, #30
 8003fee:	4606      	mov	r6, r0
 8003ff0:	460c      	mov	r4, r1
 8003ff2:	d507      	bpl.n	8004004 <__smakebuf_r+0x1c>
 8003ff4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003ff8:	6023      	str	r3, [r4, #0]
 8003ffa:	6123      	str	r3, [r4, #16]
 8003ffc:	2301      	movs	r3, #1
 8003ffe:	6163      	str	r3, [r4, #20]
 8004000:	b002      	add	sp, #8
 8004002:	bd70      	pop	{r4, r5, r6, pc}
 8004004:	ab01      	add	r3, sp, #4
 8004006:	466a      	mov	r2, sp
 8004008:	f7ff ffca 	bl	8003fa0 <__swhatbuf_r>
 800400c:	9900      	ldr	r1, [sp, #0]
 800400e:	4605      	mov	r5, r0
 8004010:	4630      	mov	r0, r6
 8004012:	f7ff fbd7 	bl	80037c4 <_malloc_r>
 8004016:	b948      	cbnz	r0, 800402c <__smakebuf_r+0x44>
 8004018:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800401c:	059a      	lsls	r2, r3, #22
 800401e:	d4ef      	bmi.n	8004000 <__smakebuf_r+0x18>
 8004020:	f023 0303 	bic.w	r3, r3, #3
 8004024:	f043 0302 	orr.w	r3, r3, #2
 8004028:	81a3      	strh	r3, [r4, #12]
 800402a:	e7e3      	b.n	8003ff4 <__smakebuf_r+0xc>
 800402c:	4b0d      	ldr	r3, [pc, #52]	; (8004064 <__smakebuf_r+0x7c>)
 800402e:	62b3      	str	r3, [r6, #40]	; 0x28
 8004030:	89a3      	ldrh	r3, [r4, #12]
 8004032:	6020      	str	r0, [r4, #0]
 8004034:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004038:	81a3      	strh	r3, [r4, #12]
 800403a:	9b00      	ldr	r3, [sp, #0]
 800403c:	6163      	str	r3, [r4, #20]
 800403e:	9b01      	ldr	r3, [sp, #4]
 8004040:	6120      	str	r0, [r4, #16]
 8004042:	b15b      	cbz	r3, 800405c <__smakebuf_r+0x74>
 8004044:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004048:	4630      	mov	r0, r6
 800404a:	f000 f863 	bl	8004114 <_isatty_r>
 800404e:	b128      	cbz	r0, 800405c <__smakebuf_r+0x74>
 8004050:	89a3      	ldrh	r3, [r4, #12]
 8004052:	f023 0303 	bic.w	r3, r3, #3
 8004056:	f043 0301 	orr.w	r3, r3, #1
 800405a:	81a3      	strh	r3, [r4, #12]
 800405c:	89a0      	ldrh	r0, [r4, #12]
 800405e:	4305      	orrs	r5, r0
 8004060:	81a5      	strh	r5, [r4, #12]
 8004062:	e7cd      	b.n	8004000 <__smakebuf_r+0x18>
 8004064:	08002e29 	.word	0x08002e29

08004068 <__ascii_mbtowc>:
 8004068:	b082      	sub	sp, #8
 800406a:	b901      	cbnz	r1, 800406e <__ascii_mbtowc+0x6>
 800406c:	a901      	add	r1, sp, #4
 800406e:	b142      	cbz	r2, 8004082 <__ascii_mbtowc+0x1a>
 8004070:	b14b      	cbz	r3, 8004086 <__ascii_mbtowc+0x1e>
 8004072:	7813      	ldrb	r3, [r2, #0]
 8004074:	600b      	str	r3, [r1, #0]
 8004076:	7812      	ldrb	r2, [r2, #0]
 8004078:	1e10      	subs	r0, r2, #0
 800407a:	bf18      	it	ne
 800407c:	2001      	movne	r0, #1
 800407e:	b002      	add	sp, #8
 8004080:	4770      	bx	lr
 8004082:	4610      	mov	r0, r2
 8004084:	e7fb      	b.n	800407e <__ascii_mbtowc+0x16>
 8004086:	f06f 0001 	mvn.w	r0, #1
 800408a:	e7f8      	b.n	800407e <__ascii_mbtowc+0x16>

0800408c <__malloc_lock>:
 800408c:	4801      	ldr	r0, [pc, #4]	; (8004094 <__malloc_lock+0x8>)
 800408e:	f7fe bfa2 	b.w	8002fd6 <__retarget_lock_acquire_recursive>
 8004092:	bf00      	nop
 8004094:	200002bc 	.word	0x200002bc

08004098 <__malloc_unlock>:
 8004098:	4801      	ldr	r0, [pc, #4]	; (80040a0 <__malloc_unlock+0x8>)
 800409a:	f7fe bf9d 	b.w	8002fd8 <__retarget_lock_release_recursive>
 800409e:	bf00      	nop
 80040a0:	200002bc 	.word	0x200002bc

080040a4 <_read_r>:
 80040a4:	b538      	push	{r3, r4, r5, lr}
 80040a6:	4d07      	ldr	r5, [pc, #28]	; (80040c4 <_read_r+0x20>)
 80040a8:	4604      	mov	r4, r0
 80040aa:	4608      	mov	r0, r1
 80040ac:	4611      	mov	r1, r2
 80040ae:	2200      	movs	r2, #0
 80040b0:	602a      	str	r2, [r5, #0]
 80040b2:	461a      	mov	r2, r3
 80040b4:	f7fd fa0e 	bl	80014d4 <_read>
 80040b8:	1c43      	adds	r3, r0, #1
 80040ba:	d102      	bne.n	80040c2 <_read_r+0x1e>
 80040bc:	682b      	ldr	r3, [r5, #0]
 80040be:	b103      	cbz	r3, 80040c2 <_read_r+0x1e>
 80040c0:	6023      	str	r3, [r4, #0]
 80040c2:	bd38      	pop	{r3, r4, r5, pc}
 80040c4:	200002c4 	.word	0x200002c4

080040c8 <__ascii_wctomb>:
 80040c8:	b149      	cbz	r1, 80040de <__ascii_wctomb+0x16>
 80040ca:	2aff      	cmp	r2, #255	; 0xff
 80040cc:	bf85      	ittet	hi
 80040ce:	238a      	movhi	r3, #138	; 0x8a
 80040d0:	6003      	strhi	r3, [r0, #0]
 80040d2:	700a      	strbls	r2, [r1, #0]
 80040d4:	f04f 30ff 	movhi.w	r0, #4294967295
 80040d8:	bf98      	it	ls
 80040da:	2001      	movls	r0, #1
 80040dc:	4770      	bx	lr
 80040de:	4608      	mov	r0, r1
 80040e0:	4770      	bx	lr

080040e2 <abort>:
 80040e2:	b508      	push	{r3, lr}
 80040e4:	2006      	movs	r0, #6
 80040e6:	f000 f84d 	bl	8004184 <raise>
 80040ea:	2001      	movs	r0, #1
 80040ec:	f7fd f9e8 	bl	80014c0 <_exit>

080040f0 <_fstat_r>:
 80040f0:	b538      	push	{r3, r4, r5, lr}
 80040f2:	4d07      	ldr	r5, [pc, #28]	; (8004110 <_fstat_r+0x20>)
 80040f4:	2300      	movs	r3, #0
 80040f6:	4604      	mov	r4, r0
 80040f8:	4608      	mov	r0, r1
 80040fa:	4611      	mov	r1, r2
 80040fc:	602b      	str	r3, [r5, #0]
 80040fe:	f7fd fa2e 	bl	800155e <_fstat>
 8004102:	1c43      	adds	r3, r0, #1
 8004104:	d102      	bne.n	800410c <_fstat_r+0x1c>
 8004106:	682b      	ldr	r3, [r5, #0]
 8004108:	b103      	cbz	r3, 800410c <_fstat_r+0x1c>
 800410a:	6023      	str	r3, [r4, #0]
 800410c:	bd38      	pop	{r3, r4, r5, pc}
 800410e:	bf00      	nop
 8004110:	200002c4 	.word	0x200002c4

08004114 <_isatty_r>:
 8004114:	b538      	push	{r3, r4, r5, lr}
 8004116:	4d06      	ldr	r5, [pc, #24]	; (8004130 <_isatty_r+0x1c>)
 8004118:	2300      	movs	r3, #0
 800411a:	4604      	mov	r4, r0
 800411c:	4608      	mov	r0, r1
 800411e:	602b      	str	r3, [r5, #0]
 8004120:	f7fd fa2d 	bl	800157e <_isatty>
 8004124:	1c43      	adds	r3, r0, #1
 8004126:	d102      	bne.n	800412e <_isatty_r+0x1a>
 8004128:	682b      	ldr	r3, [r5, #0]
 800412a:	b103      	cbz	r3, 800412e <_isatty_r+0x1a>
 800412c:	6023      	str	r3, [r4, #0]
 800412e:	bd38      	pop	{r3, r4, r5, pc}
 8004130:	200002c4 	.word	0x200002c4

08004134 <_raise_r>:
 8004134:	291f      	cmp	r1, #31
 8004136:	b538      	push	{r3, r4, r5, lr}
 8004138:	4604      	mov	r4, r0
 800413a:	460d      	mov	r5, r1
 800413c:	d904      	bls.n	8004148 <_raise_r+0x14>
 800413e:	2316      	movs	r3, #22
 8004140:	6003      	str	r3, [r0, #0]
 8004142:	f04f 30ff 	mov.w	r0, #4294967295
 8004146:	bd38      	pop	{r3, r4, r5, pc}
 8004148:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800414a:	b112      	cbz	r2, 8004152 <_raise_r+0x1e>
 800414c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004150:	b94b      	cbnz	r3, 8004166 <_raise_r+0x32>
 8004152:	4620      	mov	r0, r4
 8004154:	f000 f830 	bl	80041b8 <_getpid_r>
 8004158:	462a      	mov	r2, r5
 800415a:	4601      	mov	r1, r0
 800415c:	4620      	mov	r0, r4
 800415e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004162:	f000 b817 	b.w	8004194 <_kill_r>
 8004166:	2b01      	cmp	r3, #1
 8004168:	d00a      	beq.n	8004180 <_raise_r+0x4c>
 800416a:	1c59      	adds	r1, r3, #1
 800416c:	d103      	bne.n	8004176 <_raise_r+0x42>
 800416e:	2316      	movs	r3, #22
 8004170:	6003      	str	r3, [r0, #0]
 8004172:	2001      	movs	r0, #1
 8004174:	e7e7      	b.n	8004146 <_raise_r+0x12>
 8004176:	2400      	movs	r4, #0
 8004178:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800417c:	4628      	mov	r0, r5
 800417e:	4798      	blx	r3
 8004180:	2000      	movs	r0, #0
 8004182:	e7e0      	b.n	8004146 <_raise_r+0x12>

08004184 <raise>:
 8004184:	4b02      	ldr	r3, [pc, #8]	; (8004190 <raise+0xc>)
 8004186:	4601      	mov	r1, r0
 8004188:	6818      	ldr	r0, [r3, #0]
 800418a:	f7ff bfd3 	b.w	8004134 <_raise_r>
 800418e:	bf00      	nop
 8004190:	20000040 	.word	0x20000040

08004194 <_kill_r>:
 8004194:	b538      	push	{r3, r4, r5, lr}
 8004196:	4d07      	ldr	r5, [pc, #28]	; (80041b4 <_kill_r+0x20>)
 8004198:	2300      	movs	r3, #0
 800419a:	4604      	mov	r4, r0
 800419c:	4608      	mov	r0, r1
 800419e:	4611      	mov	r1, r2
 80041a0:	602b      	str	r3, [r5, #0]
 80041a2:	f7fd f97d 	bl	80014a0 <_kill>
 80041a6:	1c43      	adds	r3, r0, #1
 80041a8:	d102      	bne.n	80041b0 <_kill_r+0x1c>
 80041aa:	682b      	ldr	r3, [r5, #0]
 80041ac:	b103      	cbz	r3, 80041b0 <_kill_r+0x1c>
 80041ae:	6023      	str	r3, [r4, #0]
 80041b0:	bd38      	pop	{r3, r4, r5, pc}
 80041b2:	bf00      	nop
 80041b4:	200002c4 	.word	0x200002c4

080041b8 <_getpid_r>:
 80041b8:	f7fd b96a 	b.w	8001490 <_getpid>

080041bc <_init>:
 80041bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041be:	bf00      	nop
 80041c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80041c2:	bc08      	pop	{r3}
 80041c4:	469e      	mov	lr, r3
 80041c6:	4770      	bx	lr

080041c8 <_fini>:
 80041c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041ca:	bf00      	nop
 80041cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80041ce:	bc08      	pop	{r3}
 80041d0:	469e      	mov	lr, r3
 80041d2:	4770      	bx	lr
